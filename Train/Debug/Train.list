
Train.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002108  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  080021c8  080021c8  000121c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800228c  0800228c  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  0800228c  0800228c  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800228c  0800228c  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800228c  0800228c  0001228c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002290  08002290  00012290  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08002294  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000dc  2000006c  08002300  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000148  08002300  00020148  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b45  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000039e  00000000  00000000  00020bd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000f0  00000000  00000000  00020f78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000b8  00000000  00000000  00021068  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000027c8  00000000  00000000  00021120  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000147a  00000000  00000000  000238e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000095d4  00000000  00000000  00024d62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e336  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000e44  00000000  00000000  0002e388  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000006c 	.word	0x2000006c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080021b0 	.word	0x080021b0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000070 	.word	0x20000070
 8000104:	080021b0 	.word	0x080021b0

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_shi>:
 8000118:	b403      	push	{r0, r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0040      	lsls	r0, r0, #1
 8000120:	0049      	lsls	r1, r1, #1
 8000122:	5e09      	ldrsh	r1, [r1, r0]
 8000124:	0049      	lsls	r1, r1, #1
 8000126:	448e      	add	lr, r1
 8000128:	bc03      	pop	{r0, r1}
 800012a:	4770      	bx	lr

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	; 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f806 	bl	8000240 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			; (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__aeabi_idiv0>:
 8000240:	4770      	bx	lr
 8000242:	46c0      	nop			; (mov r8, r8)

08000244 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	b086      	sub	sp, #24
 8000248:	af00      	add	r7, sp, #0
 800024a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800024c:	4a14      	ldr	r2, [pc, #80]	; (80002a0 <_sbrk+0x5c>)
 800024e:	4b15      	ldr	r3, [pc, #84]	; (80002a4 <_sbrk+0x60>)
 8000250:	1ad3      	subs	r3, r2, r3
 8000252:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000254:	697b      	ldr	r3, [r7, #20]
 8000256:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000258:	4b13      	ldr	r3, [pc, #76]	; (80002a8 <_sbrk+0x64>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	2b00      	cmp	r3, #0
 800025e:	d102      	bne.n	8000266 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000260:	4b11      	ldr	r3, [pc, #68]	; (80002a8 <_sbrk+0x64>)
 8000262:	4a12      	ldr	r2, [pc, #72]	; (80002ac <_sbrk+0x68>)
 8000264:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000266:	4b10      	ldr	r3, [pc, #64]	; (80002a8 <_sbrk+0x64>)
 8000268:	681a      	ldr	r2, [r3, #0]
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	18d3      	adds	r3, r2, r3
 800026e:	693a      	ldr	r2, [r7, #16]
 8000270:	429a      	cmp	r2, r3
 8000272:	d207      	bcs.n	8000284 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000274:	f000 fc7e 	bl	8000b74 <__errno>
 8000278:	0003      	movs	r3, r0
 800027a:	220c      	movs	r2, #12
 800027c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800027e:	2301      	movs	r3, #1
 8000280:	425b      	negs	r3, r3
 8000282:	e009      	b.n	8000298 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000284:	4b08      	ldr	r3, [pc, #32]	; (80002a8 <_sbrk+0x64>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800028a:	4b07      	ldr	r3, [pc, #28]	; (80002a8 <_sbrk+0x64>)
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	18d2      	adds	r2, r2, r3
 8000292:	4b05      	ldr	r3, [pc, #20]	; (80002a8 <_sbrk+0x64>)
 8000294:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000296:	68fb      	ldr	r3, [r7, #12]
}
 8000298:	0018      	movs	r0, r3
 800029a:	46bd      	mov	sp, r7
 800029c:	b006      	add	sp, #24
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	20008000 	.word	0x20008000
 80002a4:	00000400 	.word	0x00000400
 80002a8:	20000088 	.word	0x20000088
 80002ac:	20000148 	.word	0x20000148

080002b0 <delay>:
#endif

enum state{OFF,ON,EMERGENCY};
enum state currentState = OFF;
void delay(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	// some delay for the debouncing of the buttons
	for(uint32_t i = 0 ; i < 300000/2 ; i ++);
 80002b6:	2300      	movs	r3, #0
 80002b8:	607b      	str	r3, [r7, #4]
 80002ba:	e002      	b.n	80002c2 <delay+0x12>
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	3301      	adds	r3, #1
 80002c0:	607b      	str	r3, [r7, #4]
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a03      	ldr	r2, [pc, #12]	; (80002d4 <delay+0x24>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d9f8      	bls.n	80002bc <delay+0xc>
}
 80002ca:	46c0      	nop			; (mov r8, r8)
 80002cc:	46c0      	nop			; (mov r8, r8)
 80002ce:	46bd      	mov	sp, r7
 80002d0:	b002      	add	sp, #8
 80002d2:	bd80      	pop	{r7, pc}
 80002d4:	000249ef 	.word	0x000249ef

080002d8 <main>:
int main(void)
{
 80002d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002da:	b093      	sub	sp, #76	; 0x4c
 80002dc:	af00      	add	r7, sp, #0
	initialise_monitor_handles(); //for debugging in IDE
 80002de:	f001 feef 	bl	80020c0 <initialise_monitor_handles>
	printf("THIS STARTS\n");
 80002e2:	4b6a      	ldr	r3, [pc, #424]	; (800048c <main+0x1b4>)
 80002e4:	0018      	movs	r0, r3
 80002e6:	f000 fd03 	bl	8000cf0 <puts>

    /*2 buttons causing interruptions: OnOff(PB3) and Emergency(PB5). 4 LEDs: PA6-9 */

	GPIO_PinHandle_t butOnOff, butEmerg, led0, led1, led2, led3;
	//initialize structures to 0 to avoid garbage values
	memset(&butOnOff,0,sizeof(butOnOff));
 80002ea:	263c      	movs	r6, #60	; 0x3c
 80002ec:	19bb      	adds	r3, r7, r6
 80002ee:	220c      	movs	r2, #12
 80002f0:	2100      	movs	r1, #0
 80002f2:	0018      	movs	r0, r3
 80002f4:	f000 fc68 	bl	8000bc8 <memset>
	memset(&butEmerg,0,sizeof(butEmerg));
 80002f8:	2030      	movs	r0, #48	; 0x30
 80002fa:	183b      	adds	r3, r7, r0
 80002fc:	220c      	movs	r2, #12
 80002fe:	2100      	movs	r1, #0
 8000300:	0018      	movs	r0, r3
 8000302:	f000 fc61 	bl	8000bc8 <memset>
	memset(&led0,0,sizeof(led0));
 8000306:	2424      	movs	r4, #36	; 0x24
 8000308:	193b      	adds	r3, r7, r4
 800030a:	220c      	movs	r2, #12
 800030c:	2100      	movs	r1, #0
 800030e:	0018      	movs	r0, r3
 8000310:	f000 fc5a 	bl	8000bc8 <memset>
	memset(&led1,0,sizeof(led1));
 8000314:	2518      	movs	r5, #24
 8000316:	197b      	adds	r3, r7, r5
 8000318:	220c      	movs	r2, #12
 800031a:	2100      	movs	r1, #0
 800031c:	0018      	movs	r0, r3
 800031e:	f000 fc53 	bl	8000bc8 <memset>
	memset(&led2,0,sizeof(led2));
 8000322:	260c      	movs	r6, #12
 8000324:	19bb      	adds	r3, r7, r6
 8000326:	220c      	movs	r2, #12
 8000328:	2100      	movs	r1, #0
 800032a:	0018      	movs	r0, r3
 800032c:	f000 fc4c 	bl	8000bc8 <memset>
	memset(&led3,0,sizeof(led3));
 8000330:	003b      	movs	r3, r7
 8000332:	220c      	movs	r2, #12
 8000334:	2100      	movs	r1, #0
 8000336:	0018      	movs	r0, r3
 8000338:	f000 fc46 	bl	8000bc8 <memset>

	//LEDs
	led0.pGPIO = GPIOA;
 800033c:	0021      	movs	r1, r4
 800033e:	187b      	adds	r3, r7, r1
 8000340:	2290      	movs	r2, #144	; 0x90
 8000342:	05d2      	lsls	r2, r2, #23
 8000344:	601a      	str	r2, [r3, #0]
	led0.GPIO_PinConfig.GPIO_PinNumber = 6;
 8000346:	187b      	adds	r3, r7, r1
 8000348:	2206      	movs	r2, #6
 800034a:	711a      	strb	r2, [r3, #4]
	led0.GPIO_PinConfig.GPIO_PinMode = GPIO_OUT;
 800034c:	187b      	adds	r3, r7, r1
 800034e:	2201      	movs	r2, #1
 8000350:	715a      	strb	r2, [r3, #5]
	led0.GPIO_PinConfig.GPIO_PinOutType = GPIO_PUSHPULL;
 8000352:	187b      	adds	r3, r7, r1
 8000354:	2200      	movs	r2, #0
 8000356:	719a      	strb	r2, [r3, #6]
	led0.GPIO_PinConfig.GPIO_PinOutSpeed = GPIO_SLOWSPEED; //GPIO_MEDIUMSPEED
 8000358:	187b      	adds	r3, r7, r1
 800035a:	2200      	movs	r2, #0
 800035c:	71da      	strb	r2, [r3, #7]
	led0.GPIO_PinConfig.GPIO_PinPullUpDown = GPIO_NOPULL;
 800035e:	187b      	adds	r3, r7, r1
 8000360:	2200      	movs	r2, #0
 8000362:	721a      	strb	r2, [r3, #8]

	led1.pGPIO = GPIOA;
 8000364:	002c      	movs	r4, r5
 8000366:	193b      	adds	r3, r7, r4
 8000368:	2290      	movs	r2, #144	; 0x90
 800036a:	05d2      	lsls	r2, r2, #23
 800036c:	601a      	str	r2, [r3, #0]
	led1.GPIO_PinConfig.GPIO_PinNumber = 7;
 800036e:	193b      	adds	r3, r7, r4
 8000370:	2207      	movs	r2, #7
 8000372:	711a      	strb	r2, [r3, #4]
	led1.GPIO_PinConfig.GPIO_PinMode = GPIO_OUT;
 8000374:	193b      	adds	r3, r7, r4
 8000376:	2201      	movs	r2, #1
 8000378:	715a      	strb	r2, [r3, #5]
	led1.GPIO_PinConfig.GPIO_PinOutType = GPIO_PUSHPULL;
 800037a:	193b      	adds	r3, r7, r4
 800037c:	2200      	movs	r2, #0
 800037e:	719a      	strb	r2, [r3, #6]
	led1.GPIO_PinConfig.GPIO_PinOutSpeed = GPIO_SLOWSPEED; //GPIO_MEDIUMSPEED
 8000380:	193b      	adds	r3, r7, r4
 8000382:	2200      	movs	r2, #0
 8000384:	71da      	strb	r2, [r3, #7]
	led1.GPIO_PinConfig.GPIO_PinPullUpDown = GPIO_NOPULL;
 8000386:	193b      	adds	r3, r7, r4
 8000388:	2200      	movs	r2, #0
 800038a:	721a      	strb	r2, [r3, #8]

	led2.pGPIO = GPIOA;
 800038c:	0035      	movs	r5, r6
 800038e:	197b      	adds	r3, r7, r5
 8000390:	2290      	movs	r2, #144	; 0x90
 8000392:	05d2      	lsls	r2, r2, #23
 8000394:	601a      	str	r2, [r3, #0]
	led2.GPIO_PinConfig.GPIO_PinNumber = 8;
 8000396:	197b      	adds	r3, r7, r5
 8000398:	2208      	movs	r2, #8
 800039a:	711a      	strb	r2, [r3, #4]
	led2.GPIO_PinConfig.GPIO_PinMode = GPIO_OUT;
 800039c:	197b      	adds	r3, r7, r5
 800039e:	2201      	movs	r2, #1
 80003a0:	715a      	strb	r2, [r3, #5]
	led2.GPIO_PinConfig.GPIO_PinOutType = GPIO_PUSHPULL;
 80003a2:	197b      	adds	r3, r7, r5
 80003a4:	2200      	movs	r2, #0
 80003a6:	719a      	strb	r2, [r3, #6]
	led2.GPIO_PinConfig.GPIO_PinOutSpeed = GPIO_SLOWSPEED; //GPIO_MEDIUMSPEED
 80003a8:	197b      	adds	r3, r7, r5
 80003aa:	2200      	movs	r2, #0
 80003ac:	71da      	strb	r2, [r3, #7]
	led2.GPIO_PinConfig.GPIO_PinPullUpDown = GPIO_NOPULL;
 80003ae:	197b      	adds	r3, r7, r5
 80003b0:	2200      	movs	r2, #0
 80003b2:	721a      	strb	r2, [r3, #8]

	led3.pGPIO = GPIOA;
 80003b4:	003b      	movs	r3, r7
 80003b6:	2290      	movs	r2, #144	; 0x90
 80003b8:	05d2      	lsls	r2, r2, #23
 80003ba:	601a      	str	r2, [r3, #0]
	led3.GPIO_PinConfig.GPIO_PinNumber = 9;
 80003bc:	003b      	movs	r3, r7
 80003be:	2209      	movs	r2, #9
 80003c0:	711a      	strb	r2, [r3, #4]
	led3.GPIO_PinConfig.GPIO_PinMode = GPIO_OUT;
 80003c2:	003b      	movs	r3, r7
 80003c4:	2201      	movs	r2, #1
 80003c6:	715a      	strb	r2, [r3, #5]
	led3.GPIO_PinConfig.GPIO_PinOutType = GPIO_PUSHPULL;
 80003c8:	003b      	movs	r3, r7
 80003ca:	2200      	movs	r2, #0
 80003cc:	719a      	strb	r2, [r3, #6]
	led3.GPIO_PinConfig.GPIO_PinOutSpeed = GPIO_SLOWSPEED; //GPIO_MEDIUMSPEED
 80003ce:	003b      	movs	r3, r7
 80003d0:	2200      	movs	r2, #0
 80003d2:	71da      	strb	r2, [r3, #7]
	led3.GPIO_PinConfig.GPIO_PinPullUpDown = GPIO_NOPULL;
 80003d4:	003b      	movs	r3, r7
 80003d6:	2200      	movs	r2, #0
 80003d8:	721a      	strb	r2, [r3, #8]

	//BUTTONS
	butOnOff.pGPIO = GPIOB;
 80003da:	263c      	movs	r6, #60	; 0x3c
 80003dc:	19bb      	adds	r3, r7, r6
 80003de:	4a2c      	ldr	r2, [pc, #176]	; (8000490 <main+0x1b8>)
 80003e0:	601a      	str	r2, [r3, #0]
	butOnOff.GPIO_PinConfig.GPIO_PinNumber = 3;
 80003e2:	19bb      	adds	r3, r7, r6
 80003e4:	2203      	movs	r2, #3
 80003e6:	711a      	strb	r2, [r3, #4]
	butOnOff.GPIO_PinConfig.GPIO_PinMode = GPIO_FALL_TRIG; //interrupt falling edge
 80003e8:	19bb      	adds	r3, r7, r6
 80003ea:	2204      	movs	r2, #4
 80003ec:	715a      	strb	r2, [r3, #5]
	butOnOff.GPIO_PinConfig.GPIO_PinPullUpDown = GPIO_PULLUP; //pull up (3.3 by default)
 80003ee:	19bb      	adds	r3, r7, r6
 80003f0:	2201      	movs	r2, #1
 80003f2:	721a      	strb	r2, [r3, #8]

	butEmerg.pGPIO = GPIOB;
 80003f4:	2030      	movs	r0, #48	; 0x30
 80003f6:	183b      	adds	r3, r7, r0
 80003f8:	4a25      	ldr	r2, [pc, #148]	; (8000490 <main+0x1b8>)
 80003fa:	601a      	str	r2, [r3, #0]
	butEmerg.GPIO_PinConfig.GPIO_PinNumber = 5;
 80003fc:	183b      	adds	r3, r7, r0
 80003fe:	2205      	movs	r2, #5
 8000400:	711a      	strb	r2, [r3, #4]
	butEmerg.GPIO_PinConfig.GPIO_PinMode = GPIO_FALL_TRIG;
 8000402:	183b      	adds	r3, r7, r0
 8000404:	2204      	movs	r2, #4
 8000406:	715a      	strb	r2, [r3, #5]
	butEmerg.GPIO_PinConfig.GPIO_PinPullUpDown = GPIO_PULLUP;
 8000408:	183b      	adds	r3, r7, r0
 800040a:	2201      	movs	r2, #1
 800040c:	721a      	strb	r2, [r3, #8]

	//Initializations
	GPIO_PinInit(&led0);
 800040e:	187b      	adds	r3, r7, r1
 8000410:	0018      	movs	r0, r3
 8000412:	f000 f9ab 	bl	800076c <GPIO_PinInit>
	GPIO_PinInit(&led1);
 8000416:	193b      	adds	r3, r7, r4
 8000418:	0018      	movs	r0, r3
 800041a:	f000 f9a7 	bl	800076c <GPIO_PinInit>
	GPIO_PinInit(&led2);
 800041e:	197b      	adds	r3, r7, r5
 8000420:	0018      	movs	r0, r3
 8000422:	f000 f9a3 	bl	800076c <GPIO_PinInit>
	GPIO_PinInit(&led3);
 8000426:	003b      	movs	r3, r7
 8000428:	0018      	movs	r0, r3
 800042a:	f000 f99f 	bl	800076c <GPIO_PinInit>
	GPIO_PinInit(&butOnOff);
 800042e:	19bb      	adds	r3, r7, r6
 8000430:	0018      	movs	r0, r3
 8000432:	f000 f99b 	bl	800076c <GPIO_PinInit>
	GPIO_PinInit(&butEmerg);
 8000436:	2030      	movs	r0, #48	; 0x30
 8000438:	183b      	adds	r3, r7, r0
 800043a:	0018      	movs	r0, r3
 800043c:	f000 f996 	bl	800076c <GPIO_PinInit>

	//LEDs OFF
	GPIO_WritePin(GPIOA,6,1);
 8000440:	2390      	movs	r3, #144	; 0x90
 8000442:	05db      	lsls	r3, r3, #23
 8000444:	2201      	movs	r2, #1
 8000446:	2106      	movs	r1, #6
 8000448:	0018      	movs	r0, r3
 800044a:	f000 fb1d 	bl	8000a88 <GPIO_WritePin>
	GPIO_WritePin(GPIOA,7,0);
 800044e:	2390      	movs	r3, #144	; 0x90
 8000450:	05db      	lsls	r3, r3, #23
 8000452:	2200      	movs	r2, #0
 8000454:	2107      	movs	r1, #7
 8000456:	0018      	movs	r0, r3
 8000458:	f000 fb16 	bl	8000a88 <GPIO_WritePin>
	GPIO_WritePin(GPIOA,8,0);
 800045c:	2390      	movs	r3, #144	; 0x90
 800045e:	05db      	lsls	r3, r3, #23
 8000460:	2200      	movs	r2, #0
 8000462:	2108      	movs	r1, #8
 8000464:	0018      	movs	r0, r3
 8000466:	f000 fb0f 	bl	8000a88 <GPIO_WritePin>
	GPIO_WritePin(GPIOA,9,1);
 800046a:	2390      	movs	r3, #144	; 0x90
 800046c:	05db      	lsls	r3, r3, #23
 800046e:	2201      	movs	r2, #1
 8000470:	2109      	movs	r1, #9
 8000472:	0018      	movs	r0, r3
 8000474:	f000 fb08 	bl	8000a88 <GPIO_WritePin>

	//configure interrupts (without priorities atm)
	//Button OnOff (GPIOB0)
	GPIO_IRQ_EnableDisable(IRQ_EXTI2_3, ENABLE);
 8000478:	2101      	movs	r1, #1
 800047a:	2006      	movs	r0, #6
 800047c:	f000 fb2e 	bl	8000adc <GPIO_IRQ_EnableDisable>
	//Button Emergency (GPIOB2)
	GPIO_IRQ_EnableDisable(IRQ_EXTI4_15, ENABLE);
 8000480:	2101      	movs	r1, #1
 8000482:	2007      	movs	r0, #7
 8000484:	f000 fb2a 	bl	8000adc <GPIO_IRQ_EnableDisable>

	/* Loop forever */
	for(;;);
 8000488:	e7fe      	b.n	8000488 <main+0x1b0>
 800048a:	46c0      	nop			; (mov r8, r8)
 800048c:	080021c8 	.word	0x080021c8
 8000490:	48000400 	.word	0x48000400

08000494 <EXTI2_3_IRQHandler>:
}

/*ISR handlers*/
void EXTI2_3_IRQHandler(void){ //when button on-off
 8000494:	b580      	push	{r7, lr}
 8000496:	af00      	add	r7, sp, #0
	delay();
 8000498:	f7ff ff0a 	bl	80002b0 <delay>
	GPIO_IRQ_Handling(3);
 800049c:	2003      	movs	r0, #3
 800049e:	f000 fb49 	bl	8000b34 <GPIO_IRQ_Handling>
	if (currentState == OFF){
 80004a2:	4b27      	ldr	r3, [pc, #156]	; (8000540 <EXTI2_3_IRQHandler+0xac>)
 80004a4:	781b      	ldrb	r3, [r3, #0]
 80004a6:	2b00      	cmp	r3, #0
 80004a8:	d11f      	bne.n	80004ea <EXTI2_3_IRQHandler+0x56>
		currentState = ON;
 80004aa:	4b25      	ldr	r3, [pc, #148]	; (8000540 <EXTI2_3_IRQHandler+0xac>)
 80004ac:	2201      	movs	r2, #1
 80004ae:	701a      	strb	r2, [r3, #0]
		GPIO_WritePin(GPIOA,6,0);
 80004b0:	2390      	movs	r3, #144	; 0x90
 80004b2:	05db      	lsls	r3, r3, #23
 80004b4:	2200      	movs	r2, #0
 80004b6:	2106      	movs	r1, #6
 80004b8:	0018      	movs	r0, r3
 80004ba:	f000 fae5 	bl	8000a88 <GPIO_WritePin>
		GPIO_WritePin(GPIOA,7,1);
 80004be:	2390      	movs	r3, #144	; 0x90
 80004c0:	05db      	lsls	r3, r3, #23
 80004c2:	2201      	movs	r2, #1
 80004c4:	2107      	movs	r1, #7
 80004c6:	0018      	movs	r0, r3
 80004c8:	f000 fade 	bl	8000a88 <GPIO_WritePin>
		GPIO_WritePin(GPIOA,8,1);
 80004cc:	2390      	movs	r3, #144	; 0x90
 80004ce:	05db      	lsls	r3, r3, #23
 80004d0:	2201      	movs	r2, #1
 80004d2:	2108      	movs	r1, #8
 80004d4:	0018      	movs	r0, r3
 80004d6:	f000 fad7 	bl	8000a88 <GPIO_WritePin>
		GPIO_WritePin(GPIOA,9,0);
 80004da:	2390      	movs	r3, #144	; 0x90
 80004dc:	05db      	lsls	r3, r3, #23
 80004de:	2200      	movs	r2, #0
 80004e0:	2109      	movs	r1, #9
 80004e2:	0018      	movs	r0, r3
 80004e4:	f000 fad0 	bl	8000a88 <GPIO_WritePin>
 80004e8:	e01e      	b.n	8000528 <EXTI2_3_IRQHandler+0x94>
	}
	else{
		currentState = OFF;
 80004ea:	4b15      	ldr	r3, [pc, #84]	; (8000540 <EXTI2_3_IRQHandler+0xac>)
 80004ec:	2200      	movs	r2, #0
 80004ee:	701a      	strb	r2, [r3, #0]
		GPIO_WritePin(GPIOA,6,0);
 80004f0:	2390      	movs	r3, #144	; 0x90
 80004f2:	05db      	lsls	r3, r3, #23
 80004f4:	2200      	movs	r2, #0
 80004f6:	2106      	movs	r1, #6
 80004f8:	0018      	movs	r0, r3
 80004fa:	f000 fac5 	bl	8000a88 <GPIO_WritePin>
		GPIO_WritePin(GPIOA,7,0);
 80004fe:	2390      	movs	r3, #144	; 0x90
 8000500:	05db      	lsls	r3, r3, #23
 8000502:	2200      	movs	r2, #0
 8000504:	2107      	movs	r1, #7
 8000506:	0018      	movs	r0, r3
 8000508:	f000 fabe 	bl	8000a88 <GPIO_WritePin>
		GPIO_WritePin(GPIOA,8,0);
 800050c:	2390      	movs	r3, #144	; 0x90
 800050e:	05db      	lsls	r3, r3, #23
 8000510:	2200      	movs	r2, #0
 8000512:	2108      	movs	r1, #8
 8000514:	0018      	movs	r0, r3
 8000516:	f000 fab7 	bl	8000a88 <GPIO_WritePin>
		GPIO_WritePin(GPIOA,9,0);
 800051a:	2390      	movs	r3, #144	; 0x90
 800051c:	05db      	lsls	r3, r3, #23
 800051e:	2200      	movs	r2, #0
 8000520:	2109      	movs	r1, #9
 8000522:	0018      	movs	r0, r3
 8000524:	f000 fab0 	bl	8000a88 <GPIO_WritePin>
	}
	printf("%d\n",currentState);
 8000528:	4b05      	ldr	r3, [pc, #20]	; (8000540 <EXTI2_3_IRQHandler+0xac>)
 800052a:	781b      	ldrb	r3, [r3, #0]
 800052c:	001a      	movs	r2, r3
 800052e:	4b05      	ldr	r3, [pc, #20]	; (8000544 <EXTI2_3_IRQHandler+0xb0>)
 8000530:	0011      	movs	r1, r2
 8000532:	0018      	movs	r0, r3
 8000534:	f000 fb50 	bl	8000bd8 <iprintf>
}
 8000538:	46c0      	nop			; (mov r8, r8)
 800053a:	46bd      	mov	sp, r7
 800053c:	bd80      	pop	{r7, pc}
 800053e:	46c0      	nop			; (mov r8, r8)
 8000540:	2000008c 	.word	0x2000008c
 8000544:	080021d4 	.word	0x080021d4

08000548 <EXTI4_15_IRQHandler>:

void EXTI4_15_IRQHandler(void){
 8000548:	b580      	push	{r7, lr}
 800054a:	af00      	add	r7, sp, #0
	delay();
 800054c:	f7ff feb0 	bl	80002b0 <delay>
	GPIO_IRQ_Handling(5);
 8000550:	2005      	movs	r0, #5
 8000552:	f000 faef 	bl	8000b34 <GPIO_IRQ_Handling>
	currentState=EMERGENCY;
 8000556:	4b15      	ldr	r3, [pc, #84]	; (80005ac <EXTI4_15_IRQHandler+0x64>)
 8000558:	2202      	movs	r2, #2
 800055a:	701a      	strb	r2, [r3, #0]
	printf("%d\n",currentState);
 800055c:	4b13      	ldr	r3, [pc, #76]	; (80005ac <EXTI4_15_IRQHandler+0x64>)
 800055e:	781b      	ldrb	r3, [r3, #0]
 8000560:	001a      	movs	r2, r3
 8000562:	4b13      	ldr	r3, [pc, #76]	; (80005b0 <EXTI4_15_IRQHandler+0x68>)
 8000564:	0011      	movs	r1, r2
 8000566:	0018      	movs	r0, r3
 8000568:	f000 fb36 	bl	8000bd8 <iprintf>
	GPIO_WritePin(GPIOA,6,1);
 800056c:	2390      	movs	r3, #144	; 0x90
 800056e:	05db      	lsls	r3, r3, #23
 8000570:	2201      	movs	r2, #1
 8000572:	2106      	movs	r1, #6
 8000574:	0018      	movs	r0, r3
 8000576:	f000 fa87 	bl	8000a88 <GPIO_WritePin>
	GPIO_WritePin(GPIOA,7,1);
 800057a:	2390      	movs	r3, #144	; 0x90
 800057c:	05db      	lsls	r3, r3, #23
 800057e:	2201      	movs	r2, #1
 8000580:	2107      	movs	r1, #7
 8000582:	0018      	movs	r0, r3
 8000584:	f000 fa80 	bl	8000a88 <GPIO_WritePin>
	GPIO_WritePin(GPIOA,8,1);
 8000588:	2390      	movs	r3, #144	; 0x90
 800058a:	05db      	lsls	r3, r3, #23
 800058c:	2201      	movs	r2, #1
 800058e:	2108      	movs	r1, #8
 8000590:	0018      	movs	r0, r3
 8000592:	f000 fa79 	bl	8000a88 <GPIO_WritePin>
	GPIO_WritePin(GPIOA,9,1);
 8000596:	2390      	movs	r3, #144	; 0x90
 8000598:	05db      	lsls	r3, r3, #23
 800059a:	2201      	movs	r2, #1
 800059c:	2109      	movs	r1, #9
 800059e:	0018      	movs	r0, r3
 80005a0:	f000 fa72 	bl	8000a88 <GPIO_WritePin>
}
 80005a4:	46c0      	nop			; (mov r8, r8)
 80005a6:	46bd      	mov	sp, r7
 80005a8:	bd80      	pop	{r7, pc}
 80005aa:	46c0      	nop			; (mov r8, r8)
 80005ac:	2000008c 	.word	0x2000008c
 80005b0:	080021d4 	.word	0x080021d4

080005b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005b4:	480d      	ldr	r0, [pc, #52]	; (80005ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005b6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005b8:	e000      	b.n	80005bc <Reset_Handler+0x8>
 80005ba:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005bc:	480c      	ldr	r0, [pc, #48]	; (80005f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80005be:	490d      	ldr	r1, [pc, #52]	; (80005f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005c0:	4a0d      	ldr	r2, [pc, #52]	; (80005f8 <LoopForever+0xe>)
  movs r3, #0
 80005c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005c4:	e002      	b.n	80005cc <LoopCopyDataInit>

080005c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ca:	3304      	adds	r3, #4

080005cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005d0:	d3f9      	bcc.n	80005c6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005d2:	4a0a      	ldr	r2, [pc, #40]	; (80005fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80005d4:	4c0a      	ldr	r4, [pc, #40]	; (8000600 <LoopForever+0x16>)
  movs r3, #0
 80005d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005d8:	e001      	b.n	80005de <LoopFillZerobss>

080005da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005dc:	3204      	adds	r2, #4

080005de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005e0:	d3fb      	bcc.n	80005da <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005e2:	f000 facd 	bl	8000b80 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005e6:	f7ff fe77 	bl	80002d8 <main>

080005ea <LoopForever>:

LoopForever:
    b LoopForever
 80005ea:	e7fe      	b.n	80005ea <LoopForever>
  ldr   r0, =_estack
 80005ec:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80005f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005f4:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 80005f8:	08002294 	.word	0x08002294
  ldr r2, =_sbss
 80005fc:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 8000600:	20000148 	.word	0x20000148

08000604 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000604:	e7fe      	b.n	8000604 <ADC_COMP_IRQHandler>
	...

08000608 <GPIO_ClockControl>:
 *      Author: danim
 */

#include "gpio.h"
/*********GPIO clock control***************/
void GPIO_ClockControl(GPIO_RegStruct_t *pGPIO, uint8_t EnableDisable){
 8000608:	b580      	push	{r7, lr}
 800060a:	b082      	sub	sp, #8
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	000a      	movs	r2, r1
 8000612:	1cfb      	adds	r3, r7, #3
 8000614:	701a      	strb	r2, [r3, #0]

	if (EnableDisable == ENABLE) {
 8000616:	1cfb      	adds	r3, r7, #3
 8000618:	781b      	ldrb	r3, [r3, #0]
 800061a:	2b01      	cmp	r3, #1
 800061c:	d148      	bne.n	80006b0 <GPIO_ClockControl+0xa8>
		if (pGPIO==GPIOA) { //I can't do switch-case with pointers! that's why I use if
 800061e:	687a      	ldr	r2, [r7, #4]
 8000620:	2390      	movs	r3, #144	; 0x90
 8000622:	05db      	lsls	r3, r3, #23
 8000624:	429a      	cmp	r2, r3
 8000626:	d107      	bne.n	8000638 <GPIO_ClockControl+0x30>
			GPIOA_EnableClock();
 8000628:	4b44      	ldr	r3, [pc, #272]	; (800073c <GPIO_ClockControl+0x134>)
 800062a:	695a      	ldr	r2, [r3, #20]
 800062c:	4b43      	ldr	r3, [pc, #268]	; (800073c <GPIO_ClockControl+0x134>)
 800062e:	2180      	movs	r1, #128	; 0x80
 8000630:	0289      	lsls	r1, r1, #10
 8000632:	430a      	orrs	r2, r1
 8000634:	615a      	str	r2, [r3, #20]
		}
		else if (pGPIO==GPIOF){
			GPIOF_DisableClock();
		}
	}
}
 8000636:	e07d      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOB){
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	4a41      	ldr	r2, [pc, #260]	; (8000740 <GPIO_ClockControl+0x138>)
 800063c:	4293      	cmp	r3, r2
 800063e:	d107      	bne.n	8000650 <GPIO_ClockControl+0x48>
			GPIOB_EnableClock();
 8000640:	4b3e      	ldr	r3, [pc, #248]	; (800073c <GPIO_ClockControl+0x134>)
 8000642:	695a      	ldr	r2, [r3, #20]
 8000644:	4b3d      	ldr	r3, [pc, #244]	; (800073c <GPIO_ClockControl+0x134>)
 8000646:	2180      	movs	r1, #128	; 0x80
 8000648:	02c9      	lsls	r1, r1, #11
 800064a:	430a      	orrs	r2, r1
 800064c:	615a      	str	r2, [r3, #20]
}
 800064e:	e071      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOC){
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	4a3c      	ldr	r2, [pc, #240]	; (8000744 <GPIO_ClockControl+0x13c>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d107      	bne.n	8000668 <GPIO_ClockControl+0x60>
			GPIOC_EnableClock();
 8000658:	4b38      	ldr	r3, [pc, #224]	; (800073c <GPIO_ClockControl+0x134>)
 800065a:	695a      	ldr	r2, [r3, #20]
 800065c:	4b37      	ldr	r3, [pc, #220]	; (800073c <GPIO_ClockControl+0x134>)
 800065e:	2180      	movs	r1, #128	; 0x80
 8000660:	0309      	lsls	r1, r1, #12
 8000662:	430a      	orrs	r2, r1
 8000664:	615a      	str	r2, [r3, #20]
}
 8000666:	e065      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOD){
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	4a37      	ldr	r2, [pc, #220]	; (8000748 <GPIO_ClockControl+0x140>)
 800066c:	4293      	cmp	r3, r2
 800066e:	d107      	bne.n	8000680 <GPIO_ClockControl+0x78>
			GPIOD_EnableClock();
 8000670:	4b32      	ldr	r3, [pc, #200]	; (800073c <GPIO_ClockControl+0x134>)
 8000672:	695a      	ldr	r2, [r3, #20]
 8000674:	4b31      	ldr	r3, [pc, #196]	; (800073c <GPIO_ClockControl+0x134>)
 8000676:	2180      	movs	r1, #128	; 0x80
 8000678:	0349      	lsls	r1, r1, #13
 800067a:	430a      	orrs	r2, r1
 800067c:	615a      	str	r2, [r3, #20]
}
 800067e:	e059      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOE){
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	4a32      	ldr	r2, [pc, #200]	; (800074c <GPIO_ClockControl+0x144>)
 8000684:	4293      	cmp	r3, r2
 8000686:	d107      	bne.n	8000698 <GPIO_ClockControl+0x90>
			GPIOE_EnableClock();
 8000688:	4b2c      	ldr	r3, [pc, #176]	; (800073c <GPIO_ClockControl+0x134>)
 800068a:	695a      	ldr	r2, [r3, #20]
 800068c:	4b2b      	ldr	r3, [pc, #172]	; (800073c <GPIO_ClockControl+0x134>)
 800068e:	2180      	movs	r1, #128	; 0x80
 8000690:	0389      	lsls	r1, r1, #14
 8000692:	430a      	orrs	r2, r1
 8000694:	615a      	str	r2, [r3, #20]
}
 8000696:	e04d      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOF){
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	4a2d      	ldr	r2, [pc, #180]	; (8000750 <GPIO_ClockControl+0x148>)
 800069c:	4293      	cmp	r3, r2
 800069e:	d149      	bne.n	8000734 <GPIO_ClockControl+0x12c>
			GPIOF_EnableClock();
 80006a0:	4b26      	ldr	r3, [pc, #152]	; (800073c <GPIO_ClockControl+0x134>)
 80006a2:	695a      	ldr	r2, [r3, #20]
 80006a4:	4b25      	ldr	r3, [pc, #148]	; (800073c <GPIO_ClockControl+0x134>)
 80006a6:	2180      	movs	r1, #128	; 0x80
 80006a8:	03c9      	lsls	r1, r1, #15
 80006aa:	430a      	orrs	r2, r1
 80006ac:	615a      	str	r2, [r3, #20]
}
 80006ae:	e041      	b.n	8000734 <GPIO_ClockControl+0x12c>
		if (pGPIO==GPIOA) { //I can't do switch-case with pointers! that's why I use if
 80006b0:	687a      	ldr	r2, [r7, #4]
 80006b2:	2390      	movs	r3, #144	; 0x90
 80006b4:	05db      	lsls	r3, r3, #23
 80006b6:	429a      	cmp	r2, r3
 80006b8:	d106      	bne.n	80006c8 <GPIO_ClockControl+0xc0>
			GPIOA_DisableClock();
 80006ba:	4b20      	ldr	r3, [pc, #128]	; (800073c <GPIO_ClockControl+0x134>)
 80006bc:	695a      	ldr	r2, [r3, #20]
 80006be:	4b1f      	ldr	r3, [pc, #124]	; (800073c <GPIO_ClockControl+0x134>)
 80006c0:	4924      	ldr	r1, [pc, #144]	; (8000754 <GPIO_ClockControl+0x14c>)
 80006c2:	400a      	ands	r2, r1
 80006c4:	615a      	str	r2, [r3, #20]
}
 80006c6:	e035      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOB){
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	4a1d      	ldr	r2, [pc, #116]	; (8000740 <GPIO_ClockControl+0x138>)
 80006cc:	4293      	cmp	r3, r2
 80006ce:	d106      	bne.n	80006de <GPIO_ClockControl+0xd6>
			GPIOB_DisableClock();
 80006d0:	4b1a      	ldr	r3, [pc, #104]	; (800073c <GPIO_ClockControl+0x134>)
 80006d2:	695a      	ldr	r2, [r3, #20]
 80006d4:	4b19      	ldr	r3, [pc, #100]	; (800073c <GPIO_ClockControl+0x134>)
 80006d6:	4920      	ldr	r1, [pc, #128]	; (8000758 <GPIO_ClockControl+0x150>)
 80006d8:	400a      	ands	r2, r1
 80006da:	615a      	str	r2, [r3, #20]
}
 80006dc:	e02a      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOC){
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	4a18      	ldr	r2, [pc, #96]	; (8000744 <GPIO_ClockControl+0x13c>)
 80006e2:	4293      	cmp	r3, r2
 80006e4:	d106      	bne.n	80006f4 <GPIO_ClockControl+0xec>
			GPIOC_DisableClock();
 80006e6:	4b15      	ldr	r3, [pc, #84]	; (800073c <GPIO_ClockControl+0x134>)
 80006e8:	695a      	ldr	r2, [r3, #20]
 80006ea:	4b14      	ldr	r3, [pc, #80]	; (800073c <GPIO_ClockControl+0x134>)
 80006ec:	491b      	ldr	r1, [pc, #108]	; (800075c <GPIO_ClockControl+0x154>)
 80006ee:	400a      	ands	r2, r1
 80006f0:	615a      	str	r2, [r3, #20]
}
 80006f2:	e01f      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOD){
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	4a14      	ldr	r2, [pc, #80]	; (8000748 <GPIO_ClockControl+0x140>)
 80006f8:	4293      	cmp	r3, r2
 80006fa:	d106      	bne.n	800070a <GPIO_ClockControl+0x102>
			GPIOD_DisableClock();
 80006fc:	4b0f      	ldr	r3, [pc, #60]	; (800073c <GPIO_ClockControl+0x134>)
 80006fe:	695a      	ldr	r2, [r3, #20]
 8000700:	4b0e      	ldr	r3, [pc, #56]	; (800073c <GPIO_ClockControl+0x134>)
 8000702:	4917      	ldr	r1, [pc, #92]	; (8000760 <GPIO_ClockControl+0x158>)
 8000704:	400a      	ands	r2, r1
 8000706:	615a      	str	r2, [r3, #20]
}
 8000708:	e014      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOE){
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	4a0f      	ldr	r2, [pc, #60]	; (800074c <GPIO_ClockControl+0x144>)
 800070e:	4293      	cmp	r3, r2
 8000710:	d106      	bne.n	8000720 <GPIO_ClockControl+0x118>
			GPIOE_DisableClock();
 8000712:	4b0a      	ldr	r3, [pc, #40]	; (800073c <GPIO_ClockControl+0x134>)
 8000714:	695a      	ldr	r2, [r3, #20]
 8000716:	4b09      	ldr	r3, [pc, #36]	; (800073c <GPIO_ClockControl+0x134>)
 8000718:	4912      	ldr	r1, [pc, #72]	; (8000764 <GPIO_ClockControl+0x15c>)
 800071a:	400a      	ands	r2, r1
 800071c:	615a      	str	r2, [r3, #20]
}
 800071e:	e009      	b.n	8000734 <GPIO_ClockControl+0x12c>
		else if (pGPIO==GPIOF){
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	4a0b      	ldr	r2, [pc, #44]	; (8000750 <GPIO_ClockControl+0x148>)
 8000724:	4293      	cmp	r3, r2
 8000726:	d105      	bne.n	8000734 <GPIO_ClockControl+0x12c>
			GPIOF_DisableClock();
 8000728:	4b04      	ldr	r3, [pc, #16]	; (800073c <GPIO_ClockControl+0x134>)
 800072a:	695a      	ldr	r2, [r3, #20]
 800072c:	4b03      	ldr	r3, [pc, #12]	; (800073c <GPIO_ClockControl+0x134>)
 800072e:	490e      	ldr	r1, [pc, #56]	; (8000768 <GPIO_ClockControl+0x160>)
 8000730:	400a      	ands	r2, r1
 8000732:	615a      	str	r2, [r3, #20]
}
 8000734:	46c0      	nop			; (mov r8, r8)
 8000736:	46bd      	mov	sp, r7
 8000738:	b002      	add	sp, #8
 800073a:	bd80      	pop	{r7, pc}
 800073c:	40021000 	.word	0x40021000
 8000740:	48000400 	.word	0x48000400
 8000744:	48000800 	.word	0x48000800
 8000748:	48000c00 	.word	0x48000c00
 800074c:	48001000 	.word	0x48001000
 8000750:	48001400 	.word	0x48001400
 8000754:	fffdffff 	.word	0xfffdffff
 8000758:	fffbffff 	.word	0xfffbffff
 800075c:	fff7ffff 	.word	0xfff7ffff
 8000760:	ffefffff 	.word	0xffefffff
 8000764:	ffdfffff 	.word	0xffdfffff
 8000768:	ffbfffff 	.word	0xffbfffff

0800076c <GPIO_PinInit>:
/*********GPIO pin initialization*************/
void GPIO_PinInit(GPIO_PinHandle_t *GPIO_PinHandle){
 800076c:	b5b0      	push	{r4, r5, r7, lr}
 800076e:	b084      	sub	sp, #16
 8000770:	af00      	add	r7, sp, #0
 8000772:	6078      	str	r0, [r7, #4]
	//local variables used for temporary values in operations
	uint8_t temp1;
	uint8_t temp2;

	//enable GPIO port clock
	GPIO_ClockControl(GPIO_PinHandle->pGPIO,ENABLE);
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	2101      	movs	r1, #1
 800077a:	0018      	movs	r0, r3
 800077c:	f7ff ff44 	bl	8000608 <GPIO_ClockControl>

	//configure MODE: if not interrupt, mode is input/output/analog/alternate function
	if ((GPIO_PinHandle->GPIO_PinConfig.GPIO_PinMode)<=GPIO_ANA){
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	795b      	ldrb	r3, [r3, #5]
 8000784:	2b03      	cmp	r3, #3
 8000786:	d81f      	bhi.n	80007c8 <GPIO_PinInit+0x5c>
		// first,reset the 2 bits related to pin.ex:pin number 1 is for MODER bits 2 and 3. 3<<2*pin is 3<<2 aka 1100b.so MODER&=(~1100)=x..x00xx
		GPIO_PinHandle->pGPIO->MODER &= (~(3<<(2*GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber))); //I guess I can use 3 instead of 0x3
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	681a      	ldr	r2, [r3, #0]
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	791b      	ldrb	r3, [r3, #4]
 8000792:	005b      	lsls	r3, r3, #1
 8000794:	2103      	movs	r1, #3
 8000796:	4099      	lsls	r1, r3
 8000798:	000b      	movs	r3, r1
 800079a:	43db      	mvns	r3, r3
 800079c:	0019      	movs	r1, r3
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	681b      	ldr	r3, [r3, #0]
 80007a2:	400a      	ands	r2, r1
 80007a4:	601a      	str	r2, [r3, #0]
		//now set
		GPIO_PinHandle->pGPIO->MODER |= (GPIO_PinHandle->GPIO_PinConfig.GPIO_PinMode<<(2*GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	681a      	ldr	r2, [r3, #0]
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	795b      	ldrb	r3, [r3, #5]
 80007b0:	0019      	movs	r1, r3
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	791b      	ldrb	r3, [r3, #4]
 80007b6:	005b      	lsls	r3, r3, #1
 80007b8:	4099      	lsls	r1, r3
 80007ba:	000b      	movs	r3, r1
 80007bc:	0019      	movs	r1, r3
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	430a      	orrs	r2, r1
 80007c4:	601a      	str	r2, [r3, #0]
 80007c6:	e0af      	b.n	8000928 <GPIO_PinInit+0x1bc>
	}
	else{ //interrupts
		//Configure the edge trigger (EXTI FTSR and RTSR). EXTI line "y" is for pins "y"; example, EXTI15 is for GPIOA15..GPIOF15
		if ((GPIO_PinHandle->GPIO_PinConfig.GPIO_PinMode)==GPIO_FALL_TRIG){
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	795b      	ldrb	r3, [r3, #5]
 80007cc:	2b04      	cmp	r3, #4
 80007ce:	d117      	bne.n	8000800 <GPIO_PinInit+0x94>
			//set falling edge trigger
			EXTI->FTSR |= (1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007d0:	4ba5      	ldr	r3, [pc, #660]	; (8000a68 <GPIO_PinInit+0x2fc>)
 80007d2:	68da      	ldr	r2, [r3, #12]
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	791b      	ldrb	r3, [r3, #4]
 80007d8:	0019      	movs	r1, r3
 80007da:	2301      	movs	r3, #1
 80007dc:	408b      	lsls	r3, r1
 80007de:	0019      	movs	r1, r3
 80007e0:	4ba1      	ldr	r3, [pc, #644]	; (8000a68 <GPIO_PinInit+0x2fc>)
 80007e2:	430a      	orrs	r2, r1
 80007e4:	60da      	str	r2, [r3, #12]
			//clear rising edge trigger!
			EXTI->RTSR &= ~(1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007e6:	4ba0      	ldr	r3, [pc, #640]	; (8000a68 <GPIO_PinInit+0x2fc>)
 80007e8:	689a      	ldr	r2, [r3, #8]
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	791b      	ldrb	r3, [r3, #4]
 80007ee:	0019      	movs	r1, r3
 80007f0:	2301      	movs	r3, #1
 80007f2:	408b      	lsls	r3, r1
 80007f4:	43db      	mvns	r3, r3
 80007f6:	0019      	movs	r1, r3
 80007f8:	4b9b      	ldr	r3, [pc, #620]	; (8000a68 <GPIO_PinInit+0x2fc>)
 80007fa:	400a      	ands	r2, r1
 80007fc:	609a      	str	r2, [r3, #8]
 80007fe:	e035      	b.n	800086c <GPIO_PinInit+0x100>
		}
		else if ((GPIO_PinHandle->GPIO_PinConfig.GPIO_PinMode)==GPIO_RISE_TRIG){
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	795b      	ldrb	r3, [r3, #5]
 8000804:	2b05      	cmp	r3, #5
 8000806:	d117      	bne.n	8000838 <GPIO_PinInit+0xcc>
			//set rising edge trigger
			EXTI->RTSR |= (1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000808:	4b97      	ldr	r3, [pc, #604]	; (8000a68 <GPIO_PinInit+0x2fc>)
 800080a:	689a      	ldr	r2, [r3, #8]
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	791b      	ldrb	r3, [r3, #4]
 8000810:	0019      	movs	r1, r3
 8000812:	2301      	movs	r3, #1
 8000814:	408b      	lsls	r3, r1
 8000816:	0019      	movs	r1, r3
 8000818:	4b93      	ldr	r3, [pc, #588]	; (8000a68 <GPIO_PinInit+0x2fc>)
 800081a:	430a      	orrs	r2, r1
 800081c:	609a      	str	r2, [r3, #8]
			//clear falling edge trigger!
			EXTI->FTSR &= ~(1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 800081e:	4b92      	ldr	r3, [pc, #584]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000820:	68da      	ldr	r2, [r3, #12]
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	791b      	ldrb	r3, [r3, #4]
 8000826:	0019      	movs	r1, r3
 8000828:	2301      	movs	r3, #1
 800082a:	408b      	lsls	r3, r1
 800082c:	43db      	mvns	r3, r3
 800082e:	0019      	movs	r1, r3
 8000830:	4b8d      	ldr	r3, [pc, #564]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000832:	400a      	ands	r2, r1
 8000834:	60da      	str	r2, [r3, #12]
 8000836:	e019      	b.n	800086c <GPIO_PinInit+0x100>
		}
		else if ((GPIO_PinHandle->GPIO_PinConfig.GPIO_PinMode)==GPIO_FALLRISE_TRIG){
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	795b      	ldrb	r3, [r3, #5]
 800083c:	2b06      	cmp	r3, #6
 800083e:	d115      	bne.n	800086c <GPIO_PinInit+0x100>
			//set both falling and rising edge triggers
			EXTI->FTSR |= (1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000840:	4b89      	ldr	r3, [pc, #548]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000842:	68da      	ldr	r2, [r3, #12]
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	791b      	ldrb	r3, [r3, #4]
 8000848:	0019      	movs	r1, r3
 800084a:	2301      	movs	r3, #1
 800084c:	408b      	lsls	r3, r1
 800084e:	0019      	movs	r1, r3
 8000850:	4b85      	ldr	r3, [pc, #532]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000852:	430a      	orrs	r2, r1
 8000854:	60da      	str	r2, [r3, #12]
			EXTI->RTSR |= (1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000856:	4b84      	ldr	r3, [pc, #528]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000858:	689a      	ldr	r2, [r3, #8]
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	791b      	ldrb	r3, [r3, #4]
 800085e:	0019      	movs	r1, r3
 8000860:	2301      	movs	r3, #1
 8000862:	408b      	lsls	r3, r1
 8000864:	0019      	movs	r1, r3
 8000866:	4b80      	ldr	r3, [pc, #512]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000868:	430a      	orrs	r2, r1
 800086a:	609a      	str	r2, [r3, #8]
		}

		//EXTICR: select the GPIO for the interruption on corresponding EXTI line through EXTICR registers (every allows just one, so it's a decision)
		//EXTICR0:for GPIO pins 0-3. Blocks of 4 bits to select A-F.EXTICR1: for GPIO pins 4-7. Blocks of 4 bits to select A-F. And so on
		//if GPIOD10-->EXTICR3 (block1,that is,from bit4) because EXTICR1 is for pins 0-3, CR2 pins 4-7 and so on. GPIOD--> 010
		temp1 = GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber/4; //to know which EXTICR
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	791a      	ldrb	r2, [r3, #4]
 8000870:	200f      	movs	r0, #15
 8000872:	183b      	adds	r3, r7, r0
 8000874:	0892      	lsrs	r2, r2, #2
 8000876:	701a      	strb	r2, [r3, #0]
		temp2 = GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber%4;//to know the block within EXTICR
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	791a      	ldrb	r2, [r3, #4]
 800087c:	230e      	movs	r3, #14
 800087e:	18fb      	adds	r3, r7, r3
 8000880:	2103      	movs	r1, #3
 8000882:	400a      	ands	r2, r1
 8000884:	701a      	strb	r2, [r3, #0]
		//enable SYSCFG clock and configure the correspondingEXTICR
		SYSCFG_EnableClock();
 8000886:	4b79      	ldr	r3, [pc, #484]	; (8000a6c <GPIO_PinInit+0x300>)
 8000888:	699a      	ldr	r2, [r3, #24]
 800088a:	4b78      	ldr	r3, [pc, #480]	; (8000a6c <GPIO_PinInit+0x300>)
 800088c:	2101      	movs	r1, #1
 800088e:	430a      	orrs	r2, r1
 8000890:	619a      	str	r2, [r3, #24]
		SYSCFG->EXTICR[temp1] |= ((GPIO_PORT_TO_NUMBER(GPIO_PinHandle->pGPIO))<< (4*temp2) );
 8000892:	4a77      	ldr	r2, [pc, #476]	; (8000a70 <GPIO_PinInit+0x304>)
 8000894:	183b      	adds	r3, r7, r0
 8000896:	781b      	ldrb	r3, [r3, #0]
 8000898:	3302      	adds	r3, #2
 800089a:	009b      	lsls	r3, r3, #2
 800089c:	589a      	ldr	r2, [r3, r2]
 800089e:	687b      	ldr	r3, [r7, #4]
 80008a0:	6819      	ldr	r1, [r3, #0]
 80008a2:	2390      	movs	r3, #144	; 0x90
 80008a4:	05db      	lsls	r3, r3, #23
 80008a6:	4299      	cmp	r1, r3
 80008a8:	d024      	beq.n	80008f4 <GPIO_PinInit+0x188>
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	4971      	ldr	r1, [pc, #452]	; (8000a74 <GPIO_PinInit+0x308>)
 80008b0:	428b      	cmp	r3, r1
 80008b2:	d01d      	beq.n	80008f0 <GPIO_PinInit+0x184>
 80008b4:	687b      	ldr	r3, [r7, #4]
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	496f      	ldr	r1, [pc, #444]	; (8000a78 <GPIO_PinInit+0x30c>)
 80008ba:	428b      	cmp	r3, r1
 80008bc:	d016      	beq.n	80008ec <GPIO_PinInit+0x180>
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	496e      	ldr	r1, [pc, #440]	; (8000a7c <GPIO_PinInit+0x310>)
 80008c4:	428b      	cmp	r3, r1
 80008c6:	d00f      	beq.n	80008e8 <GPIO_PinInit+0x17c>
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	681b      	ldr	r3, [r3, #0]
 80008cc:	496c      	ldr	r1, [pc, #432]	; (8000a80 <GPIO_PinInit+0x314>)
 80008ce:	428b      	cmp	r3, r1
 80008d0:	d008      	beq.n	80008e4 <GPIO_PinInit+0x178>
 80008d2:	687b      	ldr	r3, [r7, #4]
 80008d4:	681b      	ldr	r3, [r3, #0]
 80008d6:	496b      	ldr	r1, [pc, #428]	; (8000a84 <GPIO_PinInit+0x318>)
 80008d8:	428b      	cmp	r3, r1
 80008da:	d101      	bne.n	80008e0 <GPIO_PinInit+0x174>
 80008dc:	2305      	movs	r3, #5
 80008de:	e00a      	b.n	80008f6 <GPIO_PinInit+0x18a>
 80008e0:	2300      	movs	r3, #0
 80008e2:	e008      	b.n	80008f6 <GPIO_PinInit+0x18a>
 80008e4:	2304      	movs	r3, #4
 80008e6:	e006      	b.n	80008f6 <GPIO_PinInit+0x18a>
 80008e8:	2303      	movs	r3, #3
 80008ea:	e004      	b.n	80008f6 <GPIO_PinInit+0x18a>
 80008ec:	2302      	movs	r3, #2
 80008ee:	e002      	b.n	80008f6 <GPIO_PinInit+0x18a>
 80008f0:	2301      	movs	r3, #1
 80008f2:	e000      	b.n	80008f6 <GPIO_PinInit+0x18a>
 80008f4:	2300      	movs	r3, #0
 80008f6:	210e      	movs	r1, #14
 80008f8:	1879      	adds	r1, r7, r1
 80008fa:	7809      	ldrb	r1, [r1, #0]
 80008fc:	0089      	lsls	r1, r1, #2
 80008fe:	408b      	lsls	r3, r1
 8000900:	0018      	movs	r0, r3
 8000902:	495b      	ldr	r1, [pc, #364]	; (8000a70 <GPIO_PinInit+0x304>)
 8000904:	230f      	movs	r3, #15
 8000906:	18fb      	adds	r3, r7, r3
 8000908:	781b      	ldrb	r3, [r3, #0]
 800090a:	4302      	orrs	r2, r0
 800090c:	3302      	adds	r3, #2
 800090e:	009b      	lsls	r3, r3, #2
 8000910:	505a      	str	r2, [r3, r1]

		//ENABLE EXTI interrupt by means of interrupt mask register
		EXTI->IMR |= (1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000912:	4b55      	ldr	r3, [pc, #340]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000914:	681a      	ldr	r2, [r3, #0]
 8000916:	687b      	ldr	r3, [r7, #4]
 8000918:	791b      	ldrb	r3, [r3, #4]
 800091a:	0019      	movs	r1, r3
 800091c:	2301      	movs	r3, #1
 800091e:	408b      	lsls	r3, r1
 8000920:	0019      	movs	r1, r3
 8000922:	4b51      	ldr	r3, [pc, #324]	; (8000a68 <GPIO_PinInit+0x2fc>)
 8000924:	430a      	orrs	r2, r1
 8000926:	601a      	str	r2, [r3, #0]
		/*Check specific functions for the configuration on processor side: NVIC (nested vector interrupt controller)*/
	}

	//OUTPUT TYPE. TBD:don't do if !=output mode?
	// first,reset the related bit
	GPIO_PinHandle->pGPIO->OTYPER &= (~(1<<GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000928:	687b      	ldr	r3, [r7, #4]
 800092a:	681b      	ldr	r3, [r3, #0]
 800092c:	685a      	ldr	r2, [r3, #4]
 800092e:	687b      	ldr	r3, [r7, #4]
 8000930:	791b      	ldrb	r3, [r3, #4]
 8000932:	0019      	movs	r1, r3
 8000934:	2301      	movs	r3, #1
 8000936:	408b      	lsls	r3, r1
 8000938:	43db      	mvns	r3, r3
 800093a:	0019      	movs	r1, r3
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	681b      	ldr	r3, [r3, #0]
 8000940:	400a      	ands	r2, r1
 8000942:	605a      	str	r2, [r3, #4]
	//now set
	GPIO_PinHandle->pGPIO->OTYPER |= (GPIO_PinHandle->GPIO_PinConfig.GPIO_PinOutType<<(GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000944:	687b      	ldr	r3, [r7, #4]
 8000946:	681b      	ldr	r3, [r3, #0]
 8000948:	685a      	ldr	r2, [r3, #4]
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	799b      	ldrb	r3, [r3, #6]
 800094e:	0019      	movs	r1, r3
 8000950:	687b      	ldr	r3, [r7, #4]
 8000952:	791b      	ldrb	r3, [r3, #4]
 8000954:	4099      	lsls	r1, r3
 8000956:	000b      	movs	r3, r1
 8000958:	0019      	movs	r1, r3
 800095a:	687b      	ldr	r3, [r7, #4]
 800095c:	681b      	ldr	r3, [r3, #0]
 800095e:	430a      	orrs	r2, r1
 8000960:	605a      	str	r2, [r3, #4]

	//OUTPUT SPEED. TBD:don't do if !=output mode?
	// first,reset the related bits
	GPIO_PinHandle->pGPIO->OSPEEDR &= (~(3<<(2*GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000962:	687b      	ldr	r3, [r7, #4]
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	689a      	ldr	r2, [r3, #8]
 8000968:	687b      	ldr	r3, [r7, #4]
 800096a:	791b      	ldrb	r3, [r3, #4]
 800096c:	005b      	lsls	r3, r3, #1
 800096e:	2103      	movs	r1, #3
 8000970:	4099      	lsls	r1, r3
 8000972:	000b      	movs	r3, r1
 8000974:	43db      	mvns	r3, r3
 8000976:	0019      	movs	r1, r3
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	681b      	ldr	r3, [r3, #0]
 800097c:	400a      	ands	r2, r1
 800097e:	609a      	str	r2, [r3, #8]
	//now set
	GPIO_PinHandle->pGPIO->OSPEEDR |= (GPIO_PinHandle->GPIO_PinConfig.GPIO_PinOutSpeed<<(2*GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000980:	687b      	ldr	r3, [r7, #4]
 8000982:	681b      	ldr	r3, [r3, #0]
 8000984:	689a      	ldr	r2, [r3, #8]
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	79db      	ldrb	r3, [r3, #7]
 800098a:	0019      	movs	r1, r3
 800098c:	687b      	ldr	r3, [r7, #4]
 800098e:	791b      	ldrb	r3, [r3, #4]
 8000990:	005b      	lsls	r3, r3, #1
 8000992:	4099      	lsls	r1, r3
 8000994:	000b      	movs	r3, r1
 8000996:	0019      	movs	r1, r3
 8000998:	687b      	ldr	r3, [r7, #4]
 800099a:	681b      	ldr	r3, [r3, #0]
 800099c:	430a      	orrs	r2, r1
 800099e:	609a      	str	r2, [r3, #8]

	//PULL UP/DOWN
	// first,reset the related bits
	GPIO_PinHandle->pGPIO->PUPDR &= (~(3<<(2*GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	681b      	ldr	r3, [r3, #0]
 80009a4:	68da      	ldr	r2, [r3, #12]
 80009a6:	687b      	ldr	r3, [r7, #4]
 80009a8:	791b      	ldrb	r3, [r3, #4]
 80009aa:	005b      	lsls	r3, r3, #1
 80009ac:	2103      	movs	r1, #3
 80009ae:	4099      	lsls	r1, r3
 80009b0:	000b      	movs	r3, r1
 80009b2:	43db      	mvns	r3, r3
 80009b4:	0019      	movs	r1, r3
 80009b6:	687b      	ldr	r3, [r7, #4]
 80009b8:	681b      	ldr	r3, [r3, #0]
 80009ba:	400a      	ands	r2, r1
 80009bc:	60da      	str	r2, [r3, #12]
	//now set
	GPIO_PinHandle->pGPIO->PUPDR |= (GPIO_PinHandle->GPIO_PinConfig.GPIO_PinPullUpDown<<(2*GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber));
 80009be:	687b      	ldr	r3, [r7, #4]
 80009c0:	681b      	ldr	r3, [r3, #0]
 80009c2:	68da      	ldr	r2, [r3, #12]
 80009c4:	687b      	ldr	r3, [r7, #4]
 80009c6:	7a1b      	ldrb	r3, [r3, #8]
 80009c8:	0019      	movs	r1, r3
 80009ca:	687b      	ldr	r3, [r7, #4]
 80009cc:	791b      	ldrb	r3, [r3, #4]
 80009ce:	005b      	lsls	r3, r3, #1
 80009d0:	4099      	lsls	r1, r3
 80009d2:	000b      	movs	r3, r1
 80009d4:	0019      	movs	r1, r3
 80009d6:	687b      	ldr	r3, [r7, #4]
 80009d8:	681b      	ldr	r3, [r3, #0]
 80009da:	430a      	orrs	r2, r1
 80009dc:	60da      	str	r2, [r3, #12]

	//ALTERNATE FUNCTION
	if (GPIO_PinHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_ALTFUN){
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	795b      	ldrb	r3, [r3, #5]
 80009e2:	2b02      	cmp	r3, #2
 80009e4:	d13b      	bne.n	8000a5e <GPIO_PinInit+0x2f2>
		//as there are 2 registers, low is for pins 0-7 and high for 8-15.in our struct,AFR[2].We need to know where to actuate
		temp1 = GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber / 8 ; //ex: pin 7-->reg 0,byte=7(last);pin12 --> reg1, byte=4
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	791a      	ldrb	r2, [r3, #4]
 80009ea:	240f      	movs	r4, #15
 80009ec:	193b      	adds	r3, r7, r4
 80009ee:	08d2      	lsrs	r2, r2, #3
 80009f0:	701a      	strb	r2, [r3, #0]
		temp2 = GPIO_PinHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80009f2:	687b      	ldr	r3, [r7, #4]
 80009f4:	791a      	ldrb	r2, [r3, #4]
 80009f6:	250e      	movs	r5, #14
 80009f8:	197b      	adds	r3, r7, r5
 80009fa:	2107      	movs	r1, #7
 80009fc:	400a      	ands	r2, r1
 80009fe:	701a      	strb	r2, [r3, #0]
		// first,reset the related bits. in this case, 4. ~1111 is ~0x0F
		GPIO_PinHandle->pGPIO->AFR[temp1] &= (~(0xF<<(4*temp2)));
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	193a      	adds	r2, r7, r4
 8000a06:	7812      	ldrb	r2, [r2, #0]
 8000a08:	3208      	adds	r2, #8
 8000a0a:	0092      	lsls	r2, r2, #2
 8000a0c:	58d1      	ldr	r1, [r2, r3]
 8000a0e:	197b      	adds	r3, r7, r5
 8000a10:	781b      	ldrb	r3, [r3, #0]
 8000a12:	009b      	lsls	r3, r3, #2
 8000a14:	220f      	movs	r2, #15
 8000a16:	409a      	lsls	r2, r3
 8000a18:	0013      	movs	r3, r2
 8000a1a:	43db      	mvns	r3, r3
 8000a1c:	0018      	movs	r0, r3
 8000a1e:	687b      	ldr	r3, [r7, #4]
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	193a      	adds	r2, r7, r4
 8000a24:	7812      	ldrb	r2, [r2, #0]
 8000a26:	4001      	ands	r1, r0
 8000a28:	3208      	adds	r2, #8
 8000a2a:	0092      	lsls	r2, r2, #2
 8000a2c:	50d1      	str	r1, [r2, r3]
		//now set
		GPIO_PinHandle->pGPIO->AFR[temp1] |= (GPIO_PinHandle->GPIO_PinConfig.GPIO_PinAlterFunc<<(4*temp2));
 8000a2e:	687b      	ldr	r3, [r7, #4]
 8000a30:	681b      	ldr	r3, [r3, #0]
 8000a32:	193a      	adds	r2, r7, r4
 8000a34:	7812      	ldrb	r2, [r2, #0]
 8000a36:	3208      	adds	r2, #8
 8000a38:	0092      	lsls	r2, r2, #2
 8000a3a:	58d1      	ldr	r1, [r2, r3]
 8000a3c:	687b      	ldr	r3, [r7, #4]
 8000a3e:	7a5b      	ldrb	r3, [r3, #9]
 8000a40:	001a      	movs	r2, r3
 8000a42:	197b      	adds	r3, r7, r5
 8000a44:	781b      	ldrb	r3, [r3, #0]
 8000a46:	009b      	lsls	r3, r3, #2
 8000a48:	409a      	lsls	r2, r3
 8000a4a:	0013      	movs	r3, r2
 8000a4c:	0018      	movs	r0, r3
 8000a4e:	687b      	ldr	r3, [r7, #4]
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	193a      	adds	r2, r7, r4
 8000a54:	7812      	ldrb	r2, [r2, #0]
 8000a56:	4301      	orrs	r1, r0
 8000a58:	3208      	adds	r2, #8
 8000a5a:	0092      	lsls	r2, r2, #2
 8000a5c:	50d1      	str	r1, [r2, r3]
	}
}
 8000a5e:	46c0      	nop			; (mov r8, r8)
 8000a60:	46bd      	mov	sp, r7
 8000a62:	b004      	add	sp, #16
 8000a64:	bdb0      	pop	{r4, r5, r7, pc}
 8000a66:	46c0      	nop			; (mov r8, r8)
 8000a68:	40010400 	.word	0x40010400
 8000a6c:	40021000 	.word	0x40021000
 8000a70:	40010000 	.word	0x40010000
 8000a74:	48000400 	.word	0x48000400
 8000a78:	48000800 	.word	0x48000800
 8000a7c:	48000c00 	.word	0x48000c00
 8000a80:	48001000 	.word	0x48001000
 8000a84:	48001400 	.word	0x48001400

08000a88 <GPIO_WritePin>:
uint16_t GPIO_ReadPort(GPIO_RegStruct_t *pGPIO){
	return (uint16_t)pGPIO->IDR;
}

/**************************Write to output (pin or port)************************/
void GPIO_WritePin(GPIO_RegStruct_t *pGPIO, uint8_t pin, uint8_t output){
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b082      	sub	sp, #8
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
 8000a90:	0008      	movs	r0, r1
 8000a92:	0011      	movs	r1, r2
 8000a94:	1cfb      	adds	r3, r7, #3
 8000a96:	1c02      	adds	r2, r0, #0
 8000a98:	701a      	strb	r2, [r3, #0]
 8000a9a:	1cbb      	adds	r3, r7, #2
 8000a9c:	1c0a      	adds	r2, r1, #0
 8000a9e:	701a      	strb	r2, [r3, #0]
	//do not do first clear the related bit and then set.we don't want to modify the output
	//I prefer to do an if statement than using intermediate variables to clear and set
	if (output==1){
 8000aa0:	1cbb      	adds	r3, r7, #2
 8000aa2:	781b      	ldrb	r3, [r3, #0]
 8000aa4:	2b01      	cmp	r3, #1
 8000aa6:	d10a      	bne.n	8000abe <GPIO_WritePin+0x36>
		pGPIO->ODR |= (1<<pin);
 8000aa8:	687b      	ldr	r3, [r7, #4]
 8000aaa:	695b      	ldr	r3, [r3, #20]
 8000aac:	1cfa      	adds	r2, r7, #3
 8000aae:	7812      	ldrb	r2, [r2, #0]
 8000ab0:	2101      	movs	r1, #1
 8000ab2:	4091      	lsls	r1, r2
 8000ab4:	000a      	movs	r2, r1
 8000ab6:	431a      	orrs	r2, r3
 8000ab8:	687b      	ldr	r3, [r7, #4]
 8000aba:	615a      	str	r2, [r3, #20]
	}
	else { //0
		pGPIO->ODR &= (~(1<<pin));
	}

}
 8000abc:	e00a      	b.n	8000ad4 <GPIO_WritePin+0x4c>
		pGPIO->ODR &= (~(1<<pin));
 8000abe:	687b      	ldr	r3, [r7, #4]
 8000ac0:	695b      	ldr	r3, [r3, #20]
 8000ac2:	1cfa      	adds	r2, r7, #3
 8000ac4:	7812      	ldrb	r2, [r2, #0]
 8000ac6:	2101      	movs	r1, #1
 8000ac8:	4091      	lsls	r1, r2
 8000aca:	000a      	movs	r2, r1
 8000acc:	43d2      	mvns	r2, r2
 8000ace:	401a      	ands	r2, r3
 8000ad0:	687b      	ldr	r3, [r7, #4]
 8000ad2:	615a      	str	r2, [r3, #20]
}
 8000ad4:	46c0      	nop			; (mov r8, r8)
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	b002      	add	sp, #8
 8000ada:	bd80      	pop	{r7, pc}

08000adc <GPIO_IRQ_EnableDisable>:
	pGPIO->ODR ^= (1<<pin); //^ is XOR. 1^0=0;0^1=1;1^1=0;0^0=0. So x^1 = !x
}

/*************************NVIC functions for IRQ*****************************************/
/*Enable or disable an IRQ*/
void GPIO_IRQ_EnableDisable(uint8_t IRQ_Number, uint8_t EnableDisable){
 8000adc:	b580      	push	{r7, lr}
 8000ade:	b082      	sub	sp, #8
 8000ae0:	af00      	add	r7, sp, #0
 8000ae2:	0002      	movs	r2, r0
 8000ae4:	1dfb      	adds	r3, r7, #7
 8000ae6:	701a      	strb	r2, [r3, #0]
 8000ae8:	1dbb      	adds	r3, r7, #6
 8000aea:	1c0a      	adds	r2, r1, #0
 8000aec:	701a      	strb	r2, [r3, #0]
	if(EnableDisable == ENABLE){ //enable by means of ISER
 8000aee:	1dbb      	adds	r3, r7, #6
 8000af0:	781b      	ldrb	r3, [r3, #0]
 8000af2:	2b01      	cmp	r3, #1
 8000af4:	d10b      	bne.n	8000b0e <GPIO_IRQ_EnableDisable+0x32>
		*NVIC_ISER |= ( 1 << IRQ_Number);
 8000af6:	4b0d      	ldr	r3, [pc, #52]	; (8000b2c <GPIO_IRQ_EnableDisable+0x50>)
 8000af8:	681a      	ldr	r2, [r3, #0]
 8000afa:	1dfb      	adds	r3, r7, #7
 8000afc:	781b      	ldrb	r3, [r3, #0]
 8000afe:	2101      	movs	r1, #1
 8000b00:	4099      	lsls	r1, r3
 8000b02:	000b      	movs	r3, r1
 8000b04:	0019      	movs	r1, r3
 8000b06:	4b09      	ldr	r3, [pc, #36]	; (8000b2c <GPIO_IRQ_EnableDisable+0x50>)
 8000b08:	430a      	orrs	r2, r1
 8000b0a:	601a      	str	r2, [r3, #0]
	}
	else { //disable by means of ICER
		*NVIC_ICER |= ( 1 << IRQ_Number);
	}

}
 8000b0c:	e00a      	b.n	8000b24 <GPIO_IRQ_EnableDisable+0x48>
		*NVIC_ICER |= ( 1 << IRQ_Number);
 8000b0e:	4b08      	ldr	r3, [pc, #32]	; (8000b30 <GPIO_IRQ_EnableDisable+0x54>)
 8000b10:	681a      	ldr	r2, [r3, #0]
 8000b12:	1dfb      	adds	r3, r7, #7
 8000b14:	781b      	ldrb	r3, [r3, #0]
 8000b16:	2101      	movs	r1, #1
 8000b18:	4099      	lsls	r1, r3
 8000b1a:	000b      	movs	r3, r1
 8000b1c:	0019      	movs	r1, r3
 8000b1e:	4b04      	ldr	r3, [pc, #16]	; (8000b30 <GPIO_IRQ_EnableDisable+0x54>)
 8000b20:	430a      	orrs	r2, r1
 8000b22:	601a      	str	r2, [r3, #0]
}
 8000b24:	46c0      	nop			; (mov r8, r8)
 8000b26:	46bd      	mov	sp, r7
 8000b28:	b002      	add	sp, #8
 8000b2a:	bd80      	pop	{r7, pc}
 8000b2c:	e000e100 	.word	0xe000e100
 8000b30:	e000e180 	.word	0xe000e180

08000b34 <GPIO_IRQ_Handling>:
	//Clear the block and set. Better if I use intermediate variables instead of modifying many times the IPR
	uint32_t tempIPR = ((*(NVIC_IPR_BASE + numberIPR))&~(0xFF<<blockIPR));
	tempIPR |= (IRQ_Priority<<(8*blockIPR+6)); //6 is because bits 0-5 are not editable, only bits 6-7 count.
	*(NVIC_IPR_BASE + numberIPR) = tempIPR;
}
void GPIO_IRQ_Handling(uint8_t pin){
 8000b34:	b580      	push	{r7, lr}
 8000b36:	b082      	sub	sp, #8
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	0002      	movs	r2, r0
 8000b3c:	1dfb      	adds	r3, r7, #7
 8000b3e:	701a      	strb	r2, [r3, #0]
	/*ISRs (handlers) are actually application specific and implement/override(weak) handlers defined in startup*/
	/*GPIO_IRQ_Handling will be called inside the ISR handler.*/
	//Clear the pending register of the EXTI(interrupt handling depends upon the peripheral).PR of processor is automatically cleared (I think)
	if ((EXTI->PR) & (1<<pin)){ //if PR[pin]==1
 8000b40:	4b0b      	ldr	r3, [pc, #44]	; (8000b70 <GPIO_IRQ_Handling+0x3c>)
 8000b42:	695b      	ldr	r3, [r3, #20]
 8000b44:	1dfa      	adds	r2, r7, #7
 8000b46:	7812      	ldrb	r2, [r2, #0]
 8000b48:	2101      	movs	r1, #1
 8000b4a:	4091      	lsls	r1, r2
 8000b4c:	000a      	movs	r2, r1
 8000b4e:	4013      	ands	r3, r2
 8000b50:	d00a      	beq.n	8000b68 <GPIO_IRQ_Handling+0x34>
		(EXTI->PR) |= (1<<pin); //write 1 to clear the pending register
 8000b52:	4b07      	ldr	r3, [pc, #28]	; (8000b70 <GPIO_IRQ_Handling+0x3c>)
 8000b54:	695a      	ldr	r2, [r3, #20]
 8000b56:	1dfb      	adds	r3, r7, #7
 8000b58:	781b      	ldrb	r3, [r3, #0]
 8000b5a:	2101      	movs	r1, #1
 8000b5c:	4099      	lsls	r1, r3
 8000b5e:	000b      	movs	r3, r1
 8000b60:	0019      	movs	r1, r3
 8000b62:	4b03      	ldr	r3, [pc, #12]	; (8000b70 <GPIO_IRQ_Handling+0x3c>)
 8000b64:	430a      	orrs	r2, r1
 8000b66:	615a      	str	r2, [r3, #20]
	}

}
 8000b68:	46c0      	nop			; (mov r8, r8)
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	b002      	add	sp, #8
 8000b6e:	bd80      	pop	{r7, pc}
 8000b70:	40010400 	.word	0x40010400

08000b74 <__errno>:
 8000b74:	4b01      	ldr	r3, [pc, #4]	; (8000b7c <__errno+0x8>)
 8000b76:	6818      	ldr	r0, [r3, #0]
 8000b78:	4770      	bx	lr
 8000b7a:	46c0      	nop			; (mov r8, r8)
 8000b7c:	20000000 	.word	0x20000000

08000b80 <__libc_init_array>:
 8000b80:	b570      	push	{r4, r5, r6, lr}
 8000b82:	2600      	movs	r6, #0
 8000b84:	4d0c      	ldr	r5, [pc, #48]	; (8000bb8 <__libc_init_array+0x38>)
 8000b86:	4c0d      	ldr	r4, [pc, #52]	; (8000bbc <__libc_init_array+0x3c>)
 8000b88:	1b64      	subs	r4, r4, r5
 8000b8a:	10a4      	asrs	r4, r4, #2
 8000b8c:	42a6      	cmp	r6, r4
 8000b8e:	d109      	bne.n	8000ba4 <__libc_init_array+0x24>
 8000b90:	2600      	movs	r6, #0
 8000b92:	f001 fb0d 	bl	80021b0 <_init>
 8000b96:	4d0a      	ldr	r5, [pc, #40]	; (8000bc0 <__libc_init_array+0x40>)
 8000b98:	4c0a      	ldr	r4, [pc, #40]	; (8000bc4 <__libc_init_array+0x44>)
 8000b9a:	1b64      	subs	r4, r4, r5
 8000b9c:	10a4      	asrs	r4, r4, #2
 8000b9e:	42a6      	cmp	r6, r4
 8000ba0:	d105      	bne.n	8000bae <__libc_init_array+0x2e>
 8000ba2:	bd70      	pop	{r4, r5, r6, pc}
 8000ba4:	00b3      	lsls	r3, r6, #2
 8000ba6:	58eb      	ldr	r3, [r5, r3]
 8000ba8:	4798      	blx	r3
 8000baa:	3601      	adds	r6, #1
 8000bac:	e7ee      	b.n	8000b8c <__libc_init_array+0xc>
 8000bae:	00b3      	lsls	r3, r6, #2
 8000bb0:	58eb      	ldr	r3, [r5, r3]
 8000bb2:	4798      	blx	r3
 8000bb4:	3601      	adds	r6, #1
 8000bb6:	e7f2      	b.n	8000b9e <__libc_init_array+0x1e>
 8000bb8:	0800228c 	.word	0x0800228c
 8000bbc:	0800228c 	.word	0x0800228c
 8000bc0:	0800228c 	.word	0x0800228c
 8000bc4:	08002290 	.word	0x08002290

08000bc8 <memset>:
 8000bc8:	0003      	movs	r3, r0
 8000bca:	1882      	adds	r2, r0, r2
 8000bcc:	4293      	cmp	r3, r2
 8000bce:	d100      	bne.n	8000bd2 <memset+0xa>
 8000bd0:	4770      	bx	lr
 8000bd2:	7019      	strb	r1, [r3, #0]
 8000bd4:	3301      	adds	r3, #1
 8000bd6:	e7f9      	b.n	8000bcc <memset+0x4>

08000bd8 <iprintf>:
 8000bd8:	b40f      	push	{r0, r1, r2, r3}
 8000bda:	4b0b      	ldr	r3, [pc, #44]	; (8000c08 <iprintf+0x30>)
 8000bdc:	b513      	push	{r0, r1, r4, lr}
 8000bde:	681c      	ldr	r4, [r3, #0]
 8000be0:	2c00      	cmp	r4, #0
 8000be2:	d005      	beq.n	8000bf0 <iprintf+0x18>
 8000be4:	69a3      	ldr	r3, [r4, #24]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d102      	bne.n	8000bf0 <iprintf+0x18>
 8000bea:	0020      	movs	r0, r4
 8000bec:	f000 fa86 	bl	80010fc <__sinit>
 8000bf0:	ab05      	add	r3, sp, #20
 8000bf2:	0020      	movs	r0, r4
 8000bf4:	9a04      	ldr	r2, [sp, #16]
 8000bf6:	68a1      	ldr	r1, [r4, #8]
 8000bf8:	9301      	str	r3, [sp, #4]
 8000bfa:	f000 fc99 	bl	8001530 <_vfiprintf_r>
 8000bfe:	bc16      	pop	{r1, r2, r4}
 8000c00:	bc08      	pop	{r3}
 8000c02:	b004      	add	sp, #16
 8000c04:	4718      	bx	r3
 8000c06:	46c0      	nop			; (mov r8, r8)
 8000c08:	20000000 	.word	0x20000000

08000c0c <_puts_r>:
 8000c0c:	b570      	push	{r4, r5, r6, lr}
 8000c0e:	0005      	movs	r5, r0
 8000c10:	000e      	movs	r6, r1
 8000c12:	2800      	cmp	r0, #0
 8000c14:	d004      	beq.n	8000c20 <_puts_r+0x14>
 8000c16:	6983      	ldr	r3, [r0, #24]
 8000c18:	2b00      	cmp	r3, #0
 8000c1a:	d101      	bne.n	8000c20 <_puts_r+0x14>
 8000c1c:	f000 fa6e 	bl	80010fc <__sinit>
 8000c20:	69ab      	ldr	r3, [r5, #24]
 8000c22:	68ac      	ldr	r4, [r5, #8]
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d102      	bne.n	8000c2e <_puts_r+0x22>
 8000c28:	0028      	movs	r0, r5
 8000c2a:	f000 fa67 	bl	80010fc <__sinit>
 8000c2e:	4b2d      	ldr	r3, [pc, #180]	; (8000ce4 <_puts_r+0xd8>)
 8000c30:	429c      	cmp	r4, r3
 8000c32:	d122      	bne.n	8000c7a <_puts_r+0x6e>
 8000c34:	686c      	ldr	r4, [r5, #4]
 8000c36:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000c38:	07db      	lsls	r3, r3, #31
 8000c3a:	d405      	bmi.n	8000c48 <_puts_r+0x3c>
 8000c3c:	89a3      	ldrh	r3, [r4, #12]
 8000c3e:	059b      	lsls	r3, r3, #22
 8000c40:	d402      	bmi.n	8000c48 <_puts_r+0x3c>
 8000c42:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000c44:	f000 fafb 	bl	800123e <__retarget_lock_acquire_recursive>
 8000c48:	89a3      	ldrh	r3, [r4, #12]
 8000c4a:	071b      	lsls	r3, r3, #28
 8000c4c:	d502      	bpl.n	8000c54 <_puts_r+0x48>
 8000c4e:	6923      	ldr	r3, [r4, #16]
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	d129      	bne.n	8000ca8 <_puts_r+0x9c>
 8000c54:	0021      	movs	r1, r4
 8000c56:	0028      	movs	r0, r5
 8000c58:	f000 f8aa 	bl	8000db0 <__swsetup_r>
 8000c5c:	2800      	cmp	r0, #0
 8000c5e:	d023      	beq.n	8000ca8 <_puts_r+0x9c>
 8000c60:	2501      	movs	r5, #1
 8000c62:	426d      	negs	r5, r5
 8000c64:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000c66:	07db      	lsls	r3, r3, #31
 8000c68:	d405      	bmi.n	8000c76 <_puts_r+0x6a>
 8000c6a:	89a3      	ldrh	r3, [r4, #12]
 8000c6c:	059b      	lsls	r3, r3, #22
 8000c6e:	d402      	bmi.n	8000c76 <_puts_r+0x6a>
 8000c70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000c72:	f000 fae5 	bl	8001240 <__retarget_lock_release_recursive>
 8000c76:	0028      	movs	r0, r5
 8000c78:	bd70      	pop	{r4, r5, r6, pc}
 8000c7a:	4b1b      	ldr	r3, [pc, #108]	; (8000ce8 <_puts_r+0xdc>)
 8000c7c:	429c      	cmp	r4, r3
 8000c7e:	d101      	bne.n	8000c84 <_puts_r+0x78>
 8000c80:	68ac      	ldr	r4, [r5, #8]
 8000c82:	e7d8      	b.n	8000c36 <_puts_r+0x2a>
 8000c84:	4b19      	ldr	r3, [pc, #100]	; (8000cec <_puts_r+0xe0>)
 8000c86:	429c      	cmp	r4, r3
 8000c88:	d1d5      	bne.n	8000c36 <_puts_r+0x2a>
 8000c8a:	68ec      	ldr	r4, [r5, #12]
 8000c8c:	e7d3      	b.n	8000c36 <_puts_r+0x2a>
 8000c8e:	3601      	adds	r6, #1
 8000c90:	60a3      	str	r3, [r4, #8]
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	da04      	bge.n	8000ca0 <_puts_r+0x94>
 8000c96:	69a2      	ldr	r2, [r4, #24]
 8000c98:	429a      	cmp	r2, r3
 8000c9a:	dc16      	bgt.n	8000cca <_puts_r+0xbe>
 8000c9c:	290a      	cmp	r1, #10
 8000c9e:	d014      	beq.n	8000cca <_puts_r+0xbe>
 8000ca0:	6823      	ldr	r3, [r4, #0]
 8000ca2:	1c5a      	adds	r2, r3, #1
 8000ca4:	6022      	str	r2, [r4, #0]
 8000ca6:	7019      	strb	r1, [r3, #0]
 8000ca8:	68a3      	ldr	r3, [r4, #8]
 8000caa:	7831      	ldrb	r1, [r6, #0]
 8000cac:	3b01      	subs	r3, #1
 8000cae:	2900      	cmp	r1, #0
 8000cb0:	d1ed      	bne.n	8000c8e <_puts_r+0x82>
 8000cb2:	60a3      	str	r3, [r4, #8]
 8000cb4:	2b00      	cmp	r3, #0
 8000cb6:	da0f      	bge.n	8000cd8 <_puts_r+0xcc>
 8000cb8:	0028      	movs	r0, r5
 8000cba:	0022      	movs	r2, r4
 8000cbc:	310a      	adds	r1, #10
 8000cbe:	f000 f821 	bl	8000d04 <__swbuf_r>
 8000cc2:	250a      	movs	r5, #10
 8000cc4:	1c43      	adds	r3, r0, #1
 8000cc6:	d1cd      	bne.n	8000c64 <_puts_r+0x58>
 8000cc8:	e7ca      	b.n	8000c60 <_puts_r+0x54>
 8000cca:	0022      	movs	r2, r4
 8000ccc:	0028      	movs	r0, r5
 8000cce:	f000 f819 	bl	8000d04 <__swbuf_r>
 8000cd2:	1c43      	adds	r3, r0, #1
 8000cd4:	d1e8      	bne.n	8000ca8 <_puts_r+0x9c>
 8000cd6:	e7c3      	b.n	8000c60 <_puts_r+0x54>
 8000cd8:	250a      	movs	r5, #10
 8000cda:	6823      	ldr	r3, [r4, #0]
 8000cdc:	1c5a      	adds	r2, r3, #1
 8000cde:	6022      	str	r2, [r4, #0]
 8000ce0:	701d      	strb	r5, [r3, #0]
 8000ce2:	e7bf      	b.n	8000c64 <_puts_r+0x58>
 8000ce4:	080021fc 	.word	0x080021fc
 8000ce8:	0800221c 	.word	0x0800221c
 8000cec:	080021dc 	.word	0x080021dc

08000cf0 <puts>:
 8000cf0:	b510      	push	{r4, lr}
 8000cf2:	4b03      	ldr	r3, [pc, #12]	; (8000d00 <puts+0x10>)
 8000cf4:	0001      	movs	r1, r0
 8000cf6:	6818      	ldr	r0, [r3, #0]
 8000cf8:	f7ff ff88 	bl	8000c0c <_puts_r>
 8000cfc:	bd10      	pop	{r4, pc}
 8000cfe:	46c0      	nop			; (mov r8, r8)
 8000d00:	20000000 	.word	0x20000000

08000d04 <__swbuf_r>:
 8000d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d06:	0005      	movs	r5, r0
 8000d08:	000e      	movs	r6, r1
 8000d0a:	0014      	movs	r4, r2
 8000d0c:	2800      	cmp	r0, #0
 8000d0e:	d004      	beq.n	8000d1a <__swbuf_r+0x16>
 8000d10:	6983      	ldr	r3, [r0, #24]
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d101      	bne.n	8000d1a <__swbuf_r+0x16>
 8000d16:	f000 f9f1 	bl	80010fc <__sinit>
 8000d1a:	4b22      	ldr	r3, [pc, #136]	; (8000da4 <__swbuf_r+0xa0>)
 8000d1c:	429c      	cmp	r4, r3
 8000d1e:	d12e      	bne.n	8000d7e <__swbuf_r+0x7a>
 8000d20:	686c      	ldr	r4, [r5, #4]
 8000d22:	69a3      	ldr	r3, [r4, #24]
 8000d24:	60a3      	str	r3, [r4, #8]
 8000d26:	89a3      	ldrh	r3, [r4, #12]
 8000d28:	071b      	lsls	r3, r3, #28
 8000d2a:	d532      	bpl.n	8000d92 <__swbuf_r+0x8e>
 8000d2c:	6923      	ldr	r3, [r4, #16]
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d02f      	beq.n	8000d92 <__swbuf_r+0x8e>
 8000d32:	6823      	ldr	r3, [r4, #0]
 8000d34:	6922      	ldr	r2, [r4, #16]
 8000d36:	b2f7      	uxtb	r7, r6
 8000d38:	1a98      	subs	r0, r3, r2
 8000d3a:	6963      	ldr	r3, [r4, #20]
 8000d3c:	b2f6      	uxtb	r6, r6
 8000d3e:	4283      	cmp	r3, r0
 8000d40:	dc05      	bgt.n	8000d4e <__swbuf_r+0x4a>
 8000d42:	0021      	movs	r1, r4
 8000d44:	0028      	movs	r0, r5
 8000d46:	f000 f937 	bl	8000fb8 <_fflush_r>
 8000d4a:	2800      	cmp	r0, #0
 8000d4c:	d127      	bne.n	8000d9e <__swbuf_r+0x9a>
 8000d4e:	68a3      	ldr	r3, [r4, #8]
 8000d50:	3001      	adds	r0, #1
 8000d52:	3b01      	subs	r3, #1
 8000d54:	60a3      	str	r3, [r4, #8]
 8000d56:	6823      	ldr	r3, [r4, #0]
 8000d58:	1c5a      	adds	r2, r3, #1
 8000d5a:	6022      	str	r2, [r4, #0]
 8000d5c:	701f      	strb	r7, [r3, #0]
 8000d5e:	6963      	ldr	r3, [r4, #20]
 8000d60:	4283      	cmp	r3, r0
 8000d62:	d004      	beq.n	8000d6e <__swbuf_r+0x6a>
 8000d64:	89a3      	ldrh	r3, [r4, #12]
 8000d66:	07db      	lsls	r3, r3, #31
 8000d68:	d507      	bpl.n	8000d7a <__swbuf_r+0x76>
 8000d6a:	2e0a      	cmp	r6, #10
 8000d6c:	d105      	bne.n	8000d7a <__swbuf_r+0x76>
 8000d6e:	0021      	movs	r1, r4
 8000d70:	0028      	movs	r0, r5
 8000d72:	f000 f921 	bl	8000fb8 <_fflush_r>
 8000d76:	2800      	cmp	r0, #0
 8000d78:	d111      	bne.n	8000d9e <__swbuf_r+0x9a>
 8000d7a:	0030      	movs	r0, r6
 8000d7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d7e:	4b0a      	ldr	r3, [pc, #40]	; (8000da8 <__swbuf_r+0xa4>)
 8000d80:	429c      	cmp	r4, r3
 8000d82:	d101      	bne.n	8000d88 <__swbuf_r+0x84>
 8000d84:	68ac      	ldr	r4, [r5, #8]
 8000d86:	e7cc      	b.n	8000d22 <__swbuf_r+0x1e>
 8000d88:	4b08      	ldr	r3, [pc, #32]	; (8000dac <__swbuf_r+0xa8>)
 8000d8a:	429c      	cmp	r4, r3
 8000d8c:	d1c9      	bne.n	8000d22 <__swbuf_r+0x1e>
 8000d8e:	68ec      	ldr	r4, [r5, #12]
 8000d90:	e7c7      	b.n	8000d22 <__swbuf_r+0x1e>
 8000d92:	0021      	movs	r1, r4
 8000d94:	0028      	movs	r0, r5
 8000d96:	f000 f80b 	bl	8000db0 <__swsetup_r>
 8000d9a:	2800      	cmp	r0, #0
 8000d9c:	d0c9      	beq.n	8000d32 <__swbuf_r+0x2e>
 8000d9e:	2601      	movs	r6, #1
 8000da0:	4276      	negs	r6, r6
 8000da2:	e7ea      	b.n	8000d7a <__swbuf_r+0x76>
 8000da4:	080021fc 	.word	0x080021fc
 8000da8:	0800221c 	.word	0x0800221c
 8000dac:	080021dc 	.word	0x080021dc

08000db0 <__swsetup_r>:
 8000db0:	4b37      	ldr	r3, [pc, #220]	; (8000e90 <__swsetup_r+0xe0>)
 8000db2:	b570      	push	{r4, r5, r6, lr}
 8000db4:	681d      	ldr	r5, [r3, #0]
 8000db6:	0006      	movs	r6, r0
 8000db8:	000c      	movs	r4, r1
 8000dba:	2d00      	cmp	r5, #0
 8000dbc:	d005      	beq.n	8000dca <__swsetup_r+0x1a>
 8000dbe:	69ab      	ldr	r3, [r5, #24]
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d102      	bne.n	8000dca <__swsetup_r+0x1a>
 8000dc4:	0028      	movs	r0, r5
 8000dc6:	f000 f999 	bl	80010fc <__sinit>
 8000dca:	4b32      	ldr	r3, [pc, #200]	; (8000e94 <__swsetup_r+0xe4>)
 8000dcc:	429c      	cmp	r4, r3
 8000dce:	d10f      	bne.n	8000df0 <__swsetup_r+0x40>
 8000dd0:	686c      	ldr	r4, [r5, #4]
 8000dd2:	230c      	movs	r3, #12
 8000dd4:	5ee2      	ldrsh	r2, [r4, r3]
 8000dd6:	b293      	uxth	r3, r2
 8000dd8:	0711      	lsls	r1, r2, #28
 8000dda:	d42d      	bmi.n	8000e38 <__swsetup_r+0x88>
 8000ddc:	06d9      	lsls	r1, r3, #27
 8000dde:	d411      	bmi.n	8000e04 <__swsetup_r+0x54>
 8000de0:	2309      	movs	r3, #9
 8000de2:	2001      	movs	r0, #1
 8000de4:	6033      	str	r3, [r6, #0]
 8000de6:	3337      	adds	r3, #55	; 0x37
 8000de8:	4313      	orrs	r3, r2
 8000dea:	81a3      	strh	r3, [r4, #12]
 8000dec:	4240      	negs	r0, r0
 8000dee:	bd70      	pop	{r4, r5, r6, pc}
 8000df0:	4b29      	ldr	r3, [pc, #164]	; (8000e98 <__swsetup_r+0xe8>)
 8000df2:	429c      	cmp	r4, r3
 8000df4:	d101      	bne.n	8000dfa <__swsetup_r+0x4a>
 8000df6:	68ac      	ldr	r4, [r5, #8]
 8000df8:	e7eb      	b.n	8000dd2 <__swsetup_r+0x22>
 8000dfa:	4b28      	ldr	r3, [pc, #160]	; (8000e9c <__swsetup_r+0xec>)
 8000dfc:	429c      	cmp	r4, r3
 8000dfe:	d1e8      	bne.n	8000dd2 <__swsetup_r+0x22>
 8000e00:	68ec      	ldr	r4, [r5, #12]
 8000e02:	e7e6      	b.n	8000dd2 <__swsetup_r+0x22>
 8000e04:	075b      	lsls	r3, r3, #29
 8000e06:	d513      	bpl.n	8000e30 <__swsetup_r+0x80>
 8000e08:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e0a:	2900      	cmp	r1, #0
 8000e0c:	d008      	beq.n	8000e20 <__swsetup_r+0x70>
 8000e0e:	0023      	movs	r3, r4
 8000e10:	3344      	adds	r3, #68	; 0x44
 8000e12:	4299      	cmp	r1, r3
 8000e14:	d002      	beq.n	8000e1c <__swsetup_r+0x6c>
 8000e16:	0030      	movs	r0, r6
 8000e18:	f000 fa80 	bl	800131c <_free_r>
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	6363      	str	r3, [r4, #52]	; 0x34
 8000e20:	2224      	movs	r2, #36	; 0x24
 8000e22:	89a3      	ldrh	r3, [r4, #12]
 8000e24:	4393      	bics	r3, r2
 8000e26:	81a3      	strh	r3, [r4, #12]
 8000e28:	2300      	movs	r3, #0
 8000e2a:	6063      	str	r3, [r4, #4]
 8000e2c:	6923      	ldr	r3, [r4, #16]
 8000e2e:	6023      	str	r3, [r4, #0]
 8000e30:	2308      	movs	r3, #8
 8000e32:	89a2      	ldrh	r2, [r4, #12]
 8000e34:	4313      	orrs	r3, r2
 8000e36:	81a3      	strh	r3, [r4, #12]
 8000e38:	6923      	ldr	r3, [r4, #16]
 8000e3a:	2b00      	cmp	r3, #0
 8000e3c:	d10b      	bne.n	8000e56 <__swsetup_r+0xa6>
 8000e3e:	21a0      	movs	r1, #160	; 0xa0
 8000e40:	2280      	movs	r2, #128	; 0x80
 8000e42:	89a3      	ldrh	r3, [r4, #12]
 8000e44:	0089      	lsls	r1, r1, #2
 8000e46:	0092      	lsls	r2, r2, #2
 8000e48:	400b      	ands	r3, r1
 8000e4a:	4293      	cmp	r3, r2
 8000e4c:	d003      	beq.n	8000e56 <__swsetup_r+0xa6>
 8000e4e:	0021      	movs	r1, r4
 8000e50:	0030      	movs	r0, r6
 8000e52:	f000 fa1f 	bl	8001294 <__smakebuf_r>
 8000e56:	220c      	movs	r2, #12
 8000e58:	5ea3      	ldrsh	r3, [r4, r2]
 8000e5a:	2001      	movs	r0, #1
 8000e5c:	001a      	movs	r2, r3
 8000e5e:	b299      	uxth	r1, r3
 8000e60:	4002      	ands	r2, r0
 8000e62:	4203      	tst	r3, r0
 8000e64:	d00f      	beq.n	8000e86 <__swsetup_r+0xd6>
 8000e66:	2200      	movs	r2, #0
 8000e68:	60a2      	str	r2, [r4, #8]
 8000e6a:	6962      	ldr	r2, [r4, #20]
 8000e6c:	4252      	negs	r2, r2
 8000e6e:	61a2      	str	r2, [r4, #24]
 8000e70:	2000      	movs	r0, #0
 8000e72:	6922      	ldr	r2, [r4, #16]
 8000e74:	4282      	cmp	r2, r0
 8000e76:	d1ba      	bne.n	8000dee <__swsetup_r+0x3e>
 8000e78:	060a      	lsls	r2, r1, #24
 8000e7a:	d5b8      	bpl.n	8000dee <__swsetup_r+0x3e>
 8000e7c:	2240      	movs	r2, #64	; 0x40
 8000e7e:	4313      	orrs	r3, r2
 8000e80:	81a3      	strh	r3, [r4, #12]
 8000e82:	3801      	subs	r0, #1
 8000e84:	e7b3      	b.n	8000dee <__swsetup_r+0x3e>
 8000e86:	0788      	lsls	r0, r1, #30
 8000e88:	d400      	bmi.n	8000e8c <__swsetup_r+0xdc>
 8000e8a:	6962      	ldr	r2, [r4, #20]
 8000e8c:	60a2      	str	r2, [r4, #8]
 8000e8e:	e7ef      	b.n	8000e70 <__swsetup_r+0xc0>
 8000e90:	20000000 	.word	0x20000000
 8000e94:	080021fc 	.word	0x080021fc
 8000e98:	0800221c 	.word	0x0800221c
 8000e9c:	080021dc 	.word	0x080021dc

08000ea0 <__sflush_r>:
 8000ea0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000ea2:	898b      	ldrh	r3, [r1, #12]
 8000ea4:	0005      	movs	r5, r0
 8000ea6:	000c      	movs	r4, r1
 8000ea8:	071a      	lsls	r2, r3, #28
 8000eaa:	d45f      	bmi.n	8000f6c <__sflush_r+0xcc>
 8000eac:	684a      	ldr	r2, [r1, #4]
 8000eae:	2a00      	cmp	r2, #0
 8000eb0:	dc04      	bgt.n	8000ebc <__sflush_r+0x1c>
 8000eb2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000eb4:	2a00      	cmp	r2, #0
 8000eb6:	dc01      	bgt.n	8000ebc <__sflush_r+0x1c>
 8000eb8:	2000      	movs	r0, #0
 8000eba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000ebc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8000ebe:	2f00      	cmp	r7, #0
 8000ec0:	d0fa      	beq.n	8000eb8 <__sflush_r+0x18>
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	2180      	movs	r1, #128	; 0x80
 8000ec6:	682e      	ldr	r6, [r5, #0]
 8000ec8:	602a      	str	r2, [r5, #0]
 8000eca:	001a      	movs	r2, r3
 8000ecc:	0149      	lsls	r1, r1, #5
 8000ece:	400a      	ands	r2, r1
 8000ed0:	420b      	tst	r3, r1
 8000ed2:	d034      	beq.n	8000f3e <__sflush_r+0x9e>
 8000ed4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000ed6:	89a3      	ldrh	r3, [r4, #12]
 8000ed8:	075b      	lsls	r3, r3, #29
 8000eda:	d506      	bpl.n	8000eea <__sflush_r+0x4a>
 8000edc:	6863      	ldr	r3, [r4, #4]
 8000ede:	1ac0      	subs	r0, r0, r3
 8000ee0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000ee2:	2b00      	cmp	r3, #0
 8000ee4:	d001      	beq.n	8000eea <__sflush_r+0x4a>
 8000ee6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ee8:	1ac0      	subs	r0, r0, r3
 8000eea:	0002      	movs	r2, r0
 8000eec:	6a21      	ldr	r1, [r4, #32]
 8000eee:	2300      	movs	r3, #0
 8000ef0:	0028      	movs	r0, r5
 8000ef2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8000ef4:	47b8      	blx	r7
 8000ef6:	89a1      	ldrh	r1, [r4, #12]
 8000ef8:	1c43      	adds	r3, r0, #1
 8000efa:	d106      	bne.n	8000f0a <__sflush_r+0x6a>
 8000efc:	682b      	ldr	r3, [r5, #0]
 8000efe:	2b1d      	cmp	r3, #29
 8000f00:	d831      	bhi.n	8000f66 <__sflush_r+0xc6>
 8000f02:	4a2c      	ldr	r2, [pc, #176]	; (8000fb4 <__sflush_r+0x114>)
 8000f04:	40da      	lsrs	r2, r3
 8000f06:	07d3      	lsls	r3, r2, #31
 8000f08:	d52d      	bpl.n	8000f66 <__sflush_r+0xc6>
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	6063      	str	r3, [r4, #4]
 8000f0e:	6923      	ldr	r3, [r4, #16]
 8000f10:	6023      	str	r3, [r4, #0]
 8000f12:	04cb      	lsls	r3, r1, #19
 8000f14:	d505      	bpl.n	8000f22 <__sflush_r+0x82>
 8000f16:	1c43      	adds	r3, r0, #1
 8000f18:	d102      	bne.n	8000f20 <__sflush_r+0x80>
 8000f1a:	682b      	ldr	r3, [r5, #0]
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d100      	bne.n	8000f22 <__sflush_r+0x82>
 8000f20:	6560      	str	r0, [r4, #84]	; 0x54
 8000f22:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f24:	602e      	str	r6, [r5, #0]
 8000f26:	2900      	cmp	r1, #0
 8000f28:	d0c6      	beq.n	8000eb8 <__sflush_r+0x18>
 8000f2a:	0023      	movs	r3, r4
 8000f2c:	3344      	adds	r3, #68	; 0x44
 8000f2e:	4299      	cmp	r1, r3
 8000f30:	d002      	beq.n	8000f38 <__sflush_r+0x98>
 8000f32:	0028      	movs	r0, r5
 8000f34:	f000 f9f2 	bl	800131c <_free_r>
 8000f38:	2000      	movs	r0, #0
 8000f3a:	6360      	str	r0, [r4, #52]	; 0x34
 8000f3c:	e7bd      	b.n	8000eba <__sflush_r+0x1a>
 8000f3e:	2301      	movs	r3, #1
 8000f40:	0028      	movs	r0, r5
 8000f42:	6a21      	ldr	r1, [r4, #32]
 8000f44:	47b8      	blx	r7
 8000f46:	1c43      	adds	r3, r0, #1
 8000f48:	d1c5      	bne.n	8000ed6 <__sflush_r+0x36>
 8000f4a:	682b      	ldr	r3, [r5, #0]
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d0c2      	beq.n	8000ed6 <__sflush_r+0x36>
 8000f50:	2b1d      	cmp	r3, #29
 8000f52:	d001      	beq.n	8000f58 <__sflush_r+0xb8>
 8000f54:	2b16      	cmp	r3, #22
 8000f56:	d101      	bne.n	8000f5c <__sflush_r+0xbc>
 8000f58:	602e      	str	r6, [r5, #0]
 8000f5a:	e7ad      	b.n	8000eb8 <__sflush_r+0x18>
 8000f5c:	2340      	movs	r3, #64	; 0x40
 8000f5e:	89a2      	ldrh	r2, [r4, #12]
 8000f60:	4313      	orrs	r3, r2
 8000f62:	81a3      	strh	r3, [r4, #12]
 8000f64:	e7a9      	b.n	8000eba <__sflush_r+0x1a>
 8000f66:	2340      	movs	r3, #64	; 0x40
 8000f68:	430b      	orrs	r3, r1
 8000f6a:	e7fa      	b.n	8000f62 <__sflush_r+0xc2>
 8000f6c:	690f      	ldr	r7, [r1, #16]
 8000f6e:	2f00      	cmp	r7, #0
 8000f70:	d0a2      	beq.n	8000eb8 <__sflush_r+0x18>
 8000f72:	680a      	ldr	r2, [r1, #0]
 8000f74:	600f      	str	r7, [r1, #0]
 8000f76:	1bd2      	subs	r2, r2, r7
 8000f78:	9201      	str	r2, [sp, #4]
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	079b      	lsls	r3, r3, #30
 8000f7e:	d100      	bne.n	8000f82 <__sflush_r+0xe2>
 8000f80:	694a      	ldr	r2, [r1, #20]
 8000f82:	60a2      	str	r2, [r4, #8]
 8000f84:	9b01      	ldr	r3, [sp, #4]
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	dc00      	bgt.n	8000f8c <__sflush_r+0xec>
 8000f8a:	e795      	b.n	8000eb8 <__sflush_r+0x18>
 8000f8c:	003a      	movs	r2, r7
 8000f8e:	0028      	movs	r0, r5
 8000f90:	9b01      	ldr	r3, [sp, #4]
 8000f92:	6a21      	ldr	r1, [r4, #32]
 8000f94:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f96:	47b0      	blx	r6
 8000f98:	2800      	cmp	r0, #0
 8000f9a:	dc06      	bgt.n	8000faa <__sflush_r+0x10a>
 8000f9c:	2340      	movs	r3, #64	; 0x40
 8000f9e:	2001      	movs	r0, #1
 8000fa0:	89a2      	ldrh	r2, [r4, #12]
 8000fa2:	4240      	negs	r0, r0
 8000fa4:	4313      	orrs	r3, r2
 8000fa6:	81a3      	strh	r3, [r4, #12]
 8000fa8:	e787      	b.n	8000eba <__sflush_r+0x1a>
 8000faa:	9b01      	ldr	r3, [sp, #4]
 8000fac:	183f      	adds	r7, r7, r0
 8000fae:	1a1b      	subs	r3, r3, r0
 8000fb0:	9301      	str	r3, [sp, #4]
 8000fb2:	e7e7      	b.n	8000f84 <__sflush_r+0xe4>
 8000fb4:	20400001 	.word	0x20400001

08000fb8 <_fflush_r>:
 8000fb8:	690b      	ldr	r3, [r1, #16]
 8000fba:	b570      	push	{r4, r5, r6, lr}
 8000fbc:	0005      	movs	r5, r0
 8000fbe:	000c      	movs	r4, r1
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	d102      	bne.n	8000fca <_fflush_r+0x12>
 8000fc4:	2500      	movs	r5, #0
 8000fc6:	0028      	movs	r0, r5
 8000fc8:	bd70      	pop	{r4, r5, r6, pc}
 8000fca:	2800      	cmp	r0, #0
 8000fcc:	d004      	beq.n	8000fd8 <_fflush_r+0x20>
 8000fce:	6983      	ldr	r3, [r0, #24]
 8000fd0:	2b00      	cmp	r3, #0
 8000fd2:	d101      	bne.n	8000fd8 <_fflush_r+0x20>
 8000fd4:	f000 f892 	bl	80010fc <__sinit>
 8000fd8:	4b14      	ldr	r3, [pc, #80]	; (800102c <_fflush_r+0x74>)
 8000fda:	429c      	cmp	r4, r3
 8000fdc:	d11b      	bne.n	8001016 <_fflush_r+0x5e>
 8000fde:	686c      	ldr	r4, [r5, #4]
 8000fe0:	220c      	movs	r2, #12
 8000fe2:	5ea3      	ldrsh	r3, [r4, r2]
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	d0ed      	beq.n	8000fc4 <_fflush_r+0xc>
 8000fe8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000fea:	07d2      	lsls	r2, r2, #31
 8000fec:	d404      	bmi.n	8000ff8 <_fflush_r+0x40>
 8000fee:	059b      	lsls	r3, r3, #22
 8000ff0:	d402      	bmi.n	8000ff8 <_fflush_r+0x40>
 8000ff2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000ff4:	f000 f923 	bl	800123e <__retarget_lock_acquire_recursive>
 8000ff8:	0028      	movs	r0, r5
 8000ffa:	0021      	movs	r1, r4
 8000ffc:	f7ff ff50 	bl	8000ea0 <__sflush_r>
 8001000:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001002:	0005      	movs	r5, r0
 8001004:	07db      	lsls	r3, r3, #31
 8001006:	d4de      	bmi.n	8000fc6 <_fflush_r+0xe>
 8001008:	89a3      	ldrh	r3, [r4, #12]
 800100a:	059b      	lsls	r3, r3, #22
 800100c:	d4db      	bmi.n	8000fc6 <_fflush_r+0xe>
 800100e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001010:	f000 f916 	bl	8001240 <__retarget_lock_release_recursive>
 8001014:	e7d7      	b.n	8000fc6 <_fflush_r+0xe>
 8001016:	4b06      	ldr	r3, [pc, #24]	; (8001030 <_fflush_r+0x78>)
 8001018:	429c      	cmp	r4, r3
 800101a:	d101      	bne.n	8001020 <_fflush_r+0x68>
 800101c:	68ac      	ldr	r4, [r5, #8]
 800101e:	e7df      	b.n	8000fe0 <_fflush_r+0x28>
 8001020:	4b04      	ldr	r3, [pc, #16]	; (8001034 <_fflush_r+0x7c>)
 8001022:	429c      	cmp	r4, r3
 8001024:	d1dc      	bne.n	8000fe0 <_fflush_r+0x28>
 8001026:	68ec      	ldr	r4, [r5, #12]
 8001028:	e7da      	b.n	8000fe0 <_fflush_r+0x28>
 800102a:	46c0      	nop			; (mov r8, r8)
 800102c:	080021fc 	.word	0x080021fc
 8001030:	0800221c 	.word	0x0800221c
 8001034:	080021dc 	.word	0x080021dc

08001038 <std>:
 8001038:	2300      	movs	r3, #0
 800103a:	b510      	push	{r4, lr}
 800103c:	0004      	movs	r4, r0
 800103e:	6003      	str	r3, [r0, #0]
 8001040:	6043      	str	r3, [r0, #4]
 8001042:	6083      	str	r3, [r0, #8]
 8001044:	8181      	strh	r1, [r0, #12]
 8001046:	6643      	str	r3, [r0, #100]	; 0x64
 8001048:	0019      	movs	r1, r3
 800104a:	81c2      	strh	r2, [r0, #14]
 800104c:	6103      	str	r3, [r0, #16]
 800104e:	6143      	str	r3, [r0, #20]
 8001050:	6183      	str	r3, [r0, #24]
 8001052:	2208      	movs	r2, #8
 8001054:	305c      	adds	r0, #92	; 0x5c
 8001056:	f7ff fdb7 	bl	8000bc8 <memset>
 800105a:	4b05      	ldr	r3, [pc, #20]	; (8001070 <std+0x38>)
 800105c:	6224      	str	r4, [r4, #32]
 800105e:	6263      	str	r3, [r4, #36]	; 0x24
 8001060:	4b04      	ldr	r3, [pc, #16]	; (8001074 <std+0x3c>)
 8001062:	62a3      	str	r3, [r4, #40]	; 0x28
 8001064:	4b04      	ldr	r3, [pc, #16]	; (8001078 <std+0x40>)
 8001066:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001068:	4b04      	ldr	r3, [pc, #16]	; (800107c <std+0x44>)
 800106a:	6323      	str	r3, [r4, #48]	; 0x30
 800106c:	bd10      	pop	{r4, pc}
 800106e:	46c0      	nop			; (mov r8, r8)
 8001070:	08001acd 	.word	0x08001acd
 8001074:	08001af5 	.word	0x08001af5
 8001078:	08001b2d 	.word	0x08001b2d
 800107c:	08001b59 	.word	0x08001b59

08001080 <_cleanup_r>:
 8001080:	b510      	push	{r4, lr}
 8001082:	4902      	ldr	r1, [pc, #8]	; (800108c <_cleanup_r+0xc>)
 8001084:	f000 f8ba 	bl	80011fc <_fwalk_reent>
 8001088:	bd10      	pop	{r4, pc}
 800108a:	46c0      	nop			; (mov r8, r8)
 800108c:	08000fb9 	.word	0x08000fb9

08001090 <__sfmoreglue>:
 8001090:	b570      	push	{r4, r5, r6, lr}
 8001092:	2568      	movs	r5, #104	; 0x68
 8001094:	1e4a      	subs	r2, r1, #1
 8001096:	4355      	muls	r5, r2
 8001098:	000e      	movs	r6, r1
 800109a:	0029      	movs	r1, r5
 800109c:	3174      	adds	r1, #116	; 0x74
 800109e:	f000 f9a9 	bl	80013f4 <_malloc_r>
 80010a2:	1e04      	subs	r4, r0, #0
 80010a4:	d008      	beq.n	80010b8 <__sfmoreglue+0x28>
 80010a6:	2100      	movs	r1, #0
 80010a8:	002a      	movs	r2, r5
 80010aa:	6001      	str	r1, [r0, #0]
 80010ac:	6046      	str	r6, [r0, #4]
 80010ae:	300c      	adds	r0, #12
 80010b0:	60a0      	str	r0, [r4, #8]
 80010b2:	3268      	adds	r2, #104	; 0x68
 80010b4:	f7ff fd88 	bl	8000bc8 <memset>
 80010b8:	0020      	movs	r0, r4
 80010ba:	bd70      	pop	{r4, r5, r6, pc}

080010bc <__sfp_lock_acquire>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4802      	ldr	r0, [pc, #8]	; (80010c8 <__sfp_lock_acquire+0xc>)
 80010c0:	f000 f8bd 	bl	800123e <__retarget_lock_acquire_recursive>
 80010c4:	bd10      	pop	{r4, pc}
 80010c6:	46c0      	nop			; (mov r8, r8)
 80010c8:	2000008e 	.word	0x2000008e

080010cc <__sfp_lock_release>:
 80010cc:	b510      	push	{r4, lr}
 80010ce:	4802      	ldr	r0, [pc, #8]	; (80010d8 <__sfp_lock_release+0xc>)
 80010d0:	f000 f8b6 	bl	8001240 <__retarget_lock_release_recursive>
 80010d4:	bd10      	pop	{r4, pc}
 80010d6:	46c0      	nop			; (mov r8, r8)
 80010d8:	2000008e 	.word	0x2000008e

080010dc <__sinit_lock_acquire>:
 80010dc:	b510      	push	{r4, lr}
 80010de:	4802      	ldr	r0, [pc, #8]	; (80010e8 <__sinit_lock_acquire+0xc>)
 80010e0:	f000 f8ad 	bl	800123e <__retarget_lock_acquire_recursive>
 80010e4:	bd10      	pop	{r4, pc}
 80010e6:	46c0      	nop			; (mov r8, r8)
 80010e8:	2000008f 	.word	0x2000008f

080010ec <__sinit_lock_release>:
 80010ec:	b510      	push	{r4, lr}
 80010ee:	4802      	ldr	r0, [pc, #8]	; (80010f8 <__sinit_lock_release+0xc>)
 80010f0:	f000 f8a6 	bl	8001240 <__retarget_lock_release_recursive>
 80010f4:	bd10      	pop	{r4, pc}
 80010f6:	46c0      	nop			; (mov r8, r8)
 80010f8:	2000008f 	.word	0x2000008f

080010fc <__sinit>:
 80010fc:	b513      	push	{r0, r1, r4, lr}
 80010fe:	0004      	movs	r4, r0
 8001100:	f7ff ffec 	bl	80010dc <__sinit_lock_acquire>
 8001104:	69a3      	ldr	r3, [r4, #24]
 8001106:	2b00      	cmp	r3, #0
 8001108:	d002      	beq.n	8001110 <__sinit+0x14>
 800110a:	f7ff ffef 	bl	80010ec <__sinit_lock_release>
 800110e:	bd13      	pop	{r0, r1, r4, pc}
 8001110:	64a3      	str	r3, [r4, #72]	; 0x48
 8001112:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001114:	6523      	str	r3, [r4, #80]	; 0x50
 8001116:	4b13      	ldr	r3, [pc, #76]	; (8001164 <__sinit+0x68>)
 8001118:	4a13      	ldr	r2, [pc, #76]	; (8001168 <__sinit+0x6c>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	62a2      	str	r2, [r4, #40]	; 0x28
 800111e:	9301      	str	r3, [sp, #4]
 8001120:	42a3      	cmp	r3, r4
 8001122:	d101      	bne.n	8001128 <__sinit+0x2c>
 8001124:	2301      	movs	r3, #1
 8001126:	61a3      	str	r3, [r4, #24]
 8001128:	0020      	movs	r0, r4
 800112a:	f000 f81f 	bl	800116c <__sfp>
 800112e:	6060      	str	r0, [r4, #4]
 8001130:	0020      	movs	r0, r4
 8001132:	f000 f81b 	bl	800116c <__sfp>
 8001136:	60a0      	str	r0, [r4, #8]
 8001138:	0020      	movs	r0, r4
 800113a:	f000 f817 	bl	800116c <__sfp>
 800113e:	2200      	movs	r2, #0
 8001140:	2104      	movs	r1, #4
 8001142:	60e0      	str	r0, [r4, #12]
 8001144:	6860      	ldr	r0, [r4, #4]
 8001146:	f7ff ff77 	bl	8001038 <std>
 800114a:	2201      	movs	r2, #1
 800114c:	2109      	movs	r1, #9
 800114e:	68a0      	ldr	r0, [r4, #8]
 8001150:	f7ff ff72 	bl	8001038 <std>
 8001154:	2202      	movs	r2, #2
 8001156:	2112      	movs	r1, #18
 8001158:	68e0      	ldr	r0, [r4, #12]
 800115a:	f7ff ff6d 	bl	8001038 <std>
 800115e:	2301      	movs	r3, #1
 8001160:	61a3      	str	r3, [r4, #24]
 8001162:	e7d2      	b.n	800110a <__sinit+0xe>
 8001164:	080021d8 	.word	0x080021d8
 8001168:	08001081 	.word	0x08001081

0800116c <__sfp>:
 800116c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800116e:	0007      	movs	r7, r0
 8001170:	f7ff ffa4 	bl	80010bc <__sfp_lock_acquire>
 8001174:	4b1f      	ldr	r3, [pc, #124]	; (80011f4 <__sfp+0x88>)
 8001176:	681e      	ldr	r6, [r3, #0]
 8001178:	69b3      	ldr	r3, [r6, #24]
 800117a:	2b00      	cmp	r3, #0
 800117c:	d102      	bne.n	8001184 <__sfp+0x18>
 800117e:	0030      	movs	r0, r6
 8001180:	f7ff ffbc 	bl	80010fc <__sinit>
 8001184:	3648      	adds	r6, #72	; 0x48
 8001186:	68b4      	ldr	r4, [r6, #8]
 8001188:	6873      	ldr	r3, [r6, #4]
 800118a:	3b01      	subs	r3, #1
 800118c:	d504      	bpl.n	8001198 <__sfp+0x2c>
 800118e:	6833      	ldr	r3, [r6, #0]
 8001190:	2b00      	cmp	r3, #0
 8001192:	d022      	beq.n	80011da <__sfp+0x6e>
 8001194:	6836      	ldr	r6, [r6, #0]
 8001196:	e7f6      	b.n	8001186 <__sfp+0x1a>
 8001198:	220c      	movs	r2, #12
 800119a:	5ea5      	ldrsh	r5, [r4, r2]
 800119c:	2d00      	cmp	r5, #0
 800119e:	d11a      	bne.n	80011d6 <__sfp+0x6a>
 80011a0:	0020      	movs	r0, r4
 80011a2:	4b15      	ldr	r3, [pc, #84]	; (80011f8 <__sfp+0x8c>)
 80011a4:	3058      	adds	r0, #88	; 0x58
 80011a6:	60e3      	str	r3, [r4, #12]
 80011a8:	6665      	str	r5, [r4, #100]	; 0x64
 80011aa:	f000 f847 	bl	800123c <__retarget_lock_init_recursive>
 80011ae:	f7ff ff8d 	bl	80010cc <__sfp_lock_release>
 80011b2:	0020      	movs	r0, r4
 80011b4:	2208      	movs	r2, #8
 80011b6:	0029      	movs	r1, r5
 80011b8:	6025      	str	r5, [r4, #0]
 80011ba:	60a5      	str	r5, [r4, #8]
 80011bc:	6065      	str	r5, [r4, #4]
 80011be:	6125      	str	r5, [r4, #16]
 80011c0:	6165      	str	r5, [r4, #20]
 80011c2:	61a5      	str	r5, [r4, #24]
 80011c4:	305c      	adds	r0, #92	; 0x5c
 80011c6:	f7ff fcff 	bl	8000bc8 <memset>
 80011ca:	6365      	str	r5, [r4, #52]	; 0x34
 80011cc:	63a5      	str	r5, [r4, #56]	; 0x38
 80011ce:	64a5      	str	r5, [r4, #72]	; 0x48
 80011d0:	64e5      	str	r5, [r4, #76]	; 0x4c
 80011d2:	0020      	movs	r0, r4
 80011d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011d6:	3468      	adds	r4, #104	; 0x68
 80011d8:	e7d7      	b.n	800118a <__sfp+0x1e>
 80011da:	2104      	movs	r1, #4
 80011dc:	0038      	movs	r0, r7
 80011de:	f7ff ff57 	bl	8001090 <__sfmoreglue>
 80011e2:	1e04      	subs	r4, r0, #0
 80011e4:	6030      	str	r0, [r6, #0]
 80011e6:	d1d5      	bne.n	8001194 <__sfp+0x28>
 80011e8:	f7ff ff70 	bl	80010cc <__sfp_lock_release>
 80011ec:	230c      	movs	r3, #12
 80011ee:	603b      	str	r3, [r7, #0]
 80011f0:	e7ef      	b.n	80011d2 <__sfp+0x66>
 80011f2:	46c0      	nop			; (mov r8, r8)
 80011f4:	080021d8 	.word	0x080021d8
 80011f8:	ffff0001 	.word	0xffff0001

080011fc <_fwalk_reent>:
 80011fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011fe:	0004      	movs	r4, r0
 8001200:	0006      	movs	r6, r0
 8001202:	2700      	movs	r7, #0
 8001204:	9101      	str	r1, [sp, #4]
 8001206:	3448      	adds	r4, #72	; 0x48
 8001208:	6863      	ldr	r3, [r4, #4]
 800120a:	68a5      	ldr	r5, [r4, #8]
 800120c:	9300      	str	r3, [sp, #0]
 800120e:	9b00      	ldr	r3, [sp, #0]
 8001210:	3b01      	subs	r3, #1
 8001212:	9300      	str	r3, [sp, #0]
 8001214:	d504      	bpl.n	8001220 <_fwalk_reent+0x24>
 8001216:	6824      	ldr	r4, [r4, #0]
 8001218:	2c00      	cmp	r4, #0
 800121a:	d1f5      	bne.n	8001208 <_fwalk_reent+0xc>
 800121c:	0038      	movs	r0, r7
 800121e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001220:	89ab      	ldrh	r3, [r5, #12]
 8001222:	2b01      	cmp	r3, #1
 8001224:	d908      	bls.n	8001238 <_fwalk_reent+0x3c>
 8001226:	220e      	movs	r2, #14
 8001228:	5eab      	ldrsh	r3, [r5, r2]
 800122a:	3301      	adds	r3, #1
 800122c:	d004      	beq.n	8001238 <_fwalk_reent+0x3c>
 800122e:	0029      	movs	r1, r5
 8001230:	0030      	movs	r0, r6
 8001232:	9b01      	ldr	r3, [sp, #4]
 8001234:	4798      	blx	r3
 8001236:	4307      	orrs	r7, r0
 8001238:	3568      	adds	r5, #104	; 0x68
 800123a:	e7e8      	b.n	800120e <_fwalk_reent+0x12>

0800123c <__retarget_lock_init_recursive>:
 800123c:	4770      	bx	lr

0800123e <__retarget_lock_acquire_recursive>:
 800123e:	4770      	bx	lr

08001240 <__retarget_lock_release_recursive>:
 8001240:	4770      	bx	lr
	...

08001244 <__swhatbuf_r>:
 8001244:	b570      	push	{r4, r5, r6, lr}
 8001246:	000e      	movs	r6, r1
 8001248:	001d      	movs	r5, r3
 800124a:	230e      	movs	r3, #14
 800124c:	5ec9      	ldrsh	r1, [r1, r3]
 800124e:	0014      	movs	r4, r2
 8001250:	b096      	sub	sp, #88	; 0x58
 8001252:	2900      	cmp	r1, #0
 8001254:	da08      	bge.n	8001268 <__swhatbuf_r+0x24>
 8001256:	220c      	movs	r2, #12
 8001258:	5eb3      	ldrsh	r3, [r6, r2]
 800125a:	2200      	movs	r2, #0
 800125c:	602a      	str	r2, [r5, #0]
 800125e:	061b      	lsls	r3, r3, #24
 8001260:	d411      	bmi.n	8001286 <__swhatbuf_r+0x42>
 8001262:	2380      	movs	r3, #128	; 0x80
 8001264:	00db      	lsls	r3, r3, #3
 8001266:	e00f      	b.n	8001288 <__swhatbuf_r+0x44>
 8001268:	466a      	mov	r2, sp
 800126a:	f000 fca1 	bl	8001bb0 <_fstat_r>
 800126e:	2800      	cmp	r0, #0
 8001270:	dbf1      	blt.n	8001256 <__swhatbuf_r+0x12>
 8001272:	23f0      	movs	r3, #240	; 0xf0
 8001274:	9901      	ldr	r1, [sp, #4]
 8001276:	021b      	lsls	r3, r3, #8
 8001278:	4019      	ands	r1, r3
 800127a:	4b05      	ldr	r3, [pc, #20]	; (8001290 <__swhatbuf_r+0x4c>)
 800127c:	18c9      	adds	r1, r1, r3
 800127e:	424b      	negs	r3, r1
 8001280:	4159      	adcs	r1, r3
 8001282:	6029      	str	r1, [r5, #0]
 8001284:	e7ed      	b.n	8001262 <__swhatbuf_r+0x1e>
 8001286:	2340      	movs	r3, #64	; 0x40
 8001288:	2000      	movs	r0, #0
 800128a:	6023      	str	r3, [r4, #0]
 800128c:	b016      	add	sp, #88	; 0x58
 800128e:	bd70      	pop	{r4, r5, r6, pc}
 8001290:	ffffe000 	.word	0xffffe000

08001294 <__smakebuf_r>:
 8001294:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001296:	2602      	movs	r6, #2
 8001298:	898b      	ldrh	r3, [r1, #12]
 800129a:	0005      	movs	r5, r0
 800129c:	000c      	movs	r4, r1
 800129e:	4233      	tst	r3, r6
 80012a0:	d006      	beq.n	80012b0 <__smakebuf_r+0x1c>
 80012a2:	0023      	movs	r3, r4
 80012a4:	3347      	adds	r3, #71	; 0x47
 80012a6:	6023      	str	r3, [r4, #0]
 80012a8:	6123      	str	r3, [r4, #16]
 80012aa:	2301      	movs	r3, #1
 80012ac:	6163      	str	r3, [r4, #20]
 80012ae:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80012b0:	466a      	mov	r2, sp
 80012b2:	ab01      	add	r3, sp, #4
 80012b4:	f7ff ffc6 	bl	8001244 <__swhatbuf_r>
 80012b8:	9900      	ldr	r1, [sp, #0]
 80012ba:	0007      	movs	r7, r0
 80012bc:	0028      	movs	r0, r5
 80012be:	f000 f899 	bl	80013f4 <_malloc_r>
 80012c2:	2800      	cmp	r0, #0
 80012c4:	d108      	bne.n	80012d8 <__smakebuf_r+0x44>
 80012c6:	220c      	movs	r2, #12
 80012c8:	5ea3      	ldrsh	r3, [r4, r2]
 80012ca:	059a      	lsls	r2, r3, #22
 80012cc:	d4ef      	bmi.n	80012ae <__smakebuf_r+0x1a>
 80012ce:	2203      	movs	r2, #3
 80012d0:	4393      	bics	r3, r2
 80012d2:	431e      	orrs	r6, r3
 80012d4:	81a6      	strh	r6, [r4, #12]
 80012d6:	e7e4      	b.n	80012a2 <__smakebuf_r+0xe>
 80012d8:	4b0f      	ldr	r3, [pc, #60]	; (8001318 <__smakebuf_r+0x84>)
 80012da:	62ab      	str	r3, [r5, #40]	; 0x28
 80012dc:	2380      	movs	r3, #128	; 0x80
 80012de:	89a2      	ldrh	r2, [r4, #12]
 80012e0:	6020      	str	r0, [r4, #0]
 80012e2:	4313      	orrs	r3, r2
 80012e4:	81a3      	strh	r3, [r4, #12]
 80012e6:	9b00      	ldr	r3, [sp, #0]
 80012e8:	6120      	str	r0, [r4, #16]
 80012ea:	6163      	str	r3, [r4, #20]
 80012ec:	9b01      	ldr	r3, [sp, #4]
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	d00d      	beq.n	800130e <__smakebuf_r+0x7a>
 80012f2:	0028      	movs	r0, r5
 80012f4:	230e      	movs	r3, #14
 80012f6:	5ee1      	ldrsh	r1, [r4, r3]
 80012f8:	f000 fc6c 	bl	8001bd4 <_isatty_r>
 80012fc:	2800      	cmp	r0, #0
 80012fe:	d006      	beq.n	800130e <__smakebuf_r+0x7a>
 8001300:	2203      	movs	r2, #3
 8001302:	89a3      	ldrh	r3, [r4, #12]
 8001304:	4393      	bics	r3, r2
 8001306:	001a      	movs	r2, r3
 8001308:	2301      	movs	r3, #1
 800130a:	4313      	orrs	r3, r2
 800130c:	81a3      	strh	r3, [r4, #12]
 800130e:	89a0      	ldrh	r0, [r4, #12]
 8001310:	4307      	orrs	r7, r0
 8001312:	81a7      	strh	r7, [r4, #12]
 8001314:	e7cb      	b.n	80012ae <__smakebuf_r+0x1a>
 8001316:	46c0      	nop			; (mov r8, r8)
 8001318:	08001081 	.word	0x08001081

0800131c <_free_r>:
 800131c:	b570      	push	{r4, r5, r6, lr}
 800131e:	0005      	movs	r5, r0
 8001320:	2900      	cmp	r1, #0
 8001322:	d010      	beq.n	8001346 <_free_r+0x2a>
 8001324:	1f0c      	subs	r4, r1, #4
 8001326:	6823      	ldr	r3, [r4, #0]
 8001328:	2b00      	cmp	r3, #0
 800132a:	da00      	bge.n	800132e <_free_r+0x12>
 800132c:	18e4      	adds	r4, r4, r3
 800132e:	0028      	movs	r0, r5
 8001330:	f000 fc82 	bl	8001c38 <__malloc_lock>
 8001334:	4a1d      	ldr	r2, [pc, #116]	; (80013ac <_free_r+0x90>)
 8001336:	6813      	ldr	r3, [r2, #0]
 8001338:	2b00      	cmp	r3, #0
 800133a:	d105      	bne.n	8001348 <_free_r+0x2c>
 800133c:	6063      	str	r3, [r4, #4]
 800133e:	6014      	str	r4, [r2, #0]
 8001340:	0028      	movs	r0, r5
 8001342:	f000 fc81 	bl	8001c48 <__malloc_unlock>
 8001346:	bd70      	pop	{r4, r5, r6, pc}
 8001348:	42a3      	cmp	r3, r4
 800134a:	d908      	bls.n	800135e <_free_r+0x42>
 800134c:	6821      	ldr	r1, [r4, #0]
 800134e:	1860      	adds	r0, r4, r1
 8001350:	4283      	cmp	r3, r0
 8001352:	d1f3      	bne.n	800133c <_free_r+0x20>
 8001354:	6818      	ldr	r0, [r3, #0]
 8001356:	685b      	ldr	r3, [r3, #4]
 8001358:	1841      	adds	r1, r0, r1
 800135a:	6021      	str	r1, [r4, #0]
 800135c:	e7ee      	b.n	800133c <_free_r+0x20>
 800135e:	001a      	movs	r2, r3
 8001360:	685b      	ldr	r3, [r3, #4]
 8001362:	2b00      	cmp	r3, #0
 8001364:	d001      	beq.n	800136a <_free_r+0x4e>
 8001366:	42a3      	cmp	r3, r4
 8001368:	d9f9      	bls.n	800135e <_free_r+0x42>
 800136a:	6811      	ldr	r1, [r2, #0]
 800136c:	1850      	adds	r0, r2, r1
 800136e:	42a0      	cmp	r0, r4
 8001370:	d10b      	bne.n	800138a <_free_r+0x6e>
 8001372:	6820      	ldr	r0, [r4, #0]
 8001374:	1809      	adds	r1, r1, r0
 8001376:	1850      	adds	r0, r2, r1
 8001378:	6011      	str	r1, [r2, #0]
 800137a:	4283      	cmp	r3, r0
 800137c:	d1e0      	bne.n	8001340 <_free_r+0x24>
 800137e:	6818      	ldr	r0, [r3, #0]
 8001380:	685b      	ldr	r3, [r3, #4]
 8001382:	1841      	adds	r1, r0, r1
 8001384:	6011      	str	r1, [r2, #0]
 8001386:	6053      	str	r3, [r2, #4]
 8001388:	e7da      	b.n	8001340 <_free_r+0x24>
 800138a:	42a0      	cmp	r0, r4
 800138c:	d902      	bls.n	8001394 <_free_r+0x78>
 800138e:	230c      	movs	r3, #12
 8001390:	602b      	str	r3, [r5, #0]
 8001392:	e7d5      	b.n	8001340 <_free_r+0x24>
 8001394:	6821      	ldr	r1, [r4, #0]
 8001396:	1860      	adds	r0, r4, r1
 8001398:	4283      	cmp	r3, r0
 800139a:	d103      	bne.n	80013a4 <_free_r+0x88>
 800139c:	6818      	ldr	r0, [r3, #0]
 800139e:	685b      	ldr	r3, [r3, #4]
 80013a0:	1841      	adds	r1, r0, r1
 80013a2:	6021      	str	r1, [r4, #0]
 80013a4:	6063      	str	r3, [r4, #4]
 80013a6:	6054      	str	r4, [r2, #4]
 80013a8:	e7ca      	b.n	8001340 <_free_r+0x24>
 80013aa:	46c0      	nop			; (mov r8, r8)
 80013ac:	20000090 	.word	0x20000090

080013b0 <sbrk_aligned>:
 80013b0:	b570      	push	{r4, r5, r6, lr}
 80013b2:	4e0f      	ldr	r6, [pc, #60]	; (80013f0 <sbrk_aligned+0x40>)
 80013b4:	000d      	movs	r5, r1
 80013b6:	6831      	ldr	r1, [r6, #0]
 80013b8:	0004      	movs	r4, r0
 80013ba:	2900      	cmp	r1, #0
 80013bc:	d102      	bne.n	80013c4 <sbrk_aligned+0x14>
 80013be:	f000 fb73 	bl	8001aa8 <_sbrk_r>
 80013c2:	6030      	str	r0, [r6, #0]
 80013c4:	0029      	movs	r1, r5
 80013c6:	0020      	movs	r0, r4
 80013c8:	f000 fb6e 	bl	8001aa8 <_sbrk_r>
 80013cc:	1c43      	adds	r3, r0, #1
 80013ce:	d00a      	beq.n	80013e6 <sbrk_aligned+0x36>
 80013d0:	2303      	movs	r3, #3
 80013d2:	1cc5      	adds	r5, r0, #3
 80013d4:	439d      	bics	r5, r3
 80013d6:	42a8      	cmp	r0, r5
 80013d8:	d007      	beq.n	80013ea <sbrk_aligned+0x3a>
 80013da:	1a29      	subs	r1, r5, r0
 80013dc:	0020      	movs	r0, r4
 80013de:	f000 fb63 	bl	8001aa8 <_sbrk_r>
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	d101      	bne.n	80013ea <sbrk_aligned+0x3a>
 80013e6:	2501      	movs	r5, #1
 80013e8:	426d      	negs	r5, r5
 80013ea:	0028      	movs	r0, r5
 80013ec:	bd70      	pop	{r4, r5, r6, pc}
 80013ee:	46c0      	nop			; (mov r8, r8)
 80013f0:	20000094 	.word	0x20000094

080013f4 <_malloc_r>:
 80013f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013f6:	2203      	movs	r2, #3
 80013f8:	1ccb      	adds	r3, r1, #3
 80013fa:	4393      	bics	r3, r2
 80013fc:	3308      	adds	r3, #8
 80013fe:	0006      	movs	r6, r0
 8001400:	001f      	movs	r7, r3
 8001402:	2b0c      	cmp	r3, #12
 8001404:	d232      	bcs.n	800146c <_malloc_r+0x78>
 8001406:	270c      	movs	r7, #12
 8001408:	42b9      	cmp	r1, r7
 800140a:	d831      	bhi.n	8001470 <_malloc_r+0x7c>
 800140c:	0030      	movs	r0, r6
 800140e:	f000 fc13 	bl	8001c38 <__malloc_lock>
 8001412:	4d32      	ldr	r5, [pc, #200]	; (80014dc <_malloc_r+0xe8>)
 8001414:	682b      	ldr	r3, [r5, #0]
 8001416:	001c      	movs	r4, r3
 8001418:	2c00      	cmp	r4, #0
 800141a:	d12e      	bne.n	800147a <_malloc_r+0x86>
 800141c:	0039      	movs	r1, r7
 800141e:	0030      	movs	r0, r6
 8001420:	f7ff ffc6 	bl	80013b0 <sbrk_aligned>
 8001424:	0004      	movs	r4, r0
 8001426:	1c43      	adds	r3, r0, #1
 8001428:	d11e      	bne.n	8001468 <_malloc_r+0x74>
 800142a:	682c      	ldr	r4, [r5, #0]
 800142c:	0025      	movs	r5, r4
 800142e:	2d00      	cmp	r5, #0
 8001430:	d14a      	bne.n	80014c8 <_malloc_r+0xd4>
 8001432:	6823      	ldr	r3, [r4, #0]
 8001434:	0029      	movs	r1, r5
 8001436:	18e3      	adds	r3, r4, r3
 8001438:	0030      	movs	r0, r6
 800143a:	9301      	str	r3, [sp, #4]
 800143c:	f000 fb34 	bl	8001aa8 <_sbrk_r>
 8001440:	9b01      	ldr	r3, [sp, #4]
 8001442:	4283      	cmp	r3, r0
 8001444:	d143      	bne.n	80014ce <_malloc_r+0xda>
 8001446:	6823      	ldr	r3, [r4, #0]
 8001448:	3703      	adds	r7, #3
 800144a:	1aff      	subs	r7, r7, r3
 800144c:	2303      	movs	r3, #3
 800144e:	439f      	bics	r7, r3
 8001450:	3708      	adds	r7, #8
 8001452:	2f0c      	cmp	r7, #12
 8001454:	d200      	bcs.n	8001458 <_malloc_r+0x64>
 8001456:	270c      	movs	r7, #12
 8001458:	0039      	movs	r1, r7
 800145a:	0030      	movs	r0, r6
 800145c:	f7ff ffa8 	bl	80013b0 <sbrk_aligned>
 8001460:	1c43      	adds	r3, r0, #1
 8001462:	d034      	beq.n	80014ce <_malloc_r+0xda>
 8001464:	6823      	ldr	r3, [r4, #0]
 8001466:	19df      	adds	r7, r3, r7
 8001468:	6027      	str	r7, [r4, #0]
 800146a:	e013      	b.n	8001494 <_malloc_r+0xa0>
 800146c:	2b00      	cmp	r3, #0
 800146e:	dacb      	bge.n	8001408 <_malloc_r+0x14>
 8001470:	230c      	movs	r3, #12
 8001472:	2500      	movs	r5, #0
 8001474:	6033      	str	r3, [r6, #0]
 8001476:	0028      	movs	r0, r5
 8001478:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800147a:	6822      	ldr	r2, [r4, #0]
 800147c:	1bd1      	subs	r1, r2, r7
 800147e:	d420      	bmi.n	80014c2 <_malloc_r+0xce>
 8001480:	290b      	cmp	r1, #11
 8001482:	d917      	bls.n	80014b4 <_malloc_r+0xc0>
 8001484:	19e2      	adds	r2, r4, r7
 8001486:	6027      	str	r7, [r4, #0]
 8001488:	42a3      	cmp	r3, r4
 800148a:	d111      	bne.n	80014b0 <_malloc_r+0xbc>
 800148c:	602a      	str	r2, [r5, #0]
 800148e:	6863      	ldr	r3, [r4, #4]
 8001490:	6011      	str	r1, [r2, #0]
 8001492:	6053      	str	r3, [r2, #4]
 8001494:	0030      	movs	r0, r6
 8001496:	0025      	movs	r5, r4
 8001498:	f000 fbd6 	bl	8001c48 <__malloc_unlock>
 800149c:	2207      	movs	r2, #7
 800149e:	350b      	adds	r5, #11
 80014a0:	1d23      	adds	r3, r4, #4
 80014a2:	4395      	bics	r5, r2
 80014a4:	1aea      	subs	r2, r5, r3
 80014a6:	429d      	cmp	r5, r3
 80014a8:	d0e5      	beq.n	8001476 <_malloc_r+0x82>
 80014aa:	1b5b      	subs	r3, r3, r5
 80014ac:	50a3      	str	r3, [r4, r2]
 80014ae:	e7e2      	b.n	8001476 <_malloc_r+0x82>
 80014b0:	605a      	str	r2, [r3, #4]
 80014b2:	e7ec      	b.n	800148e <_malloc_r+0x9a>
 80014b4:	6862      	ldr	r2, [r4, #4]
 80014b6:	42a3      	cmp	r3, r4
 80014b8:	d101      	bne.n	80014be <_malloc_r+0xca>
 80014ba:	602a      	str	r2, [r5, #0]
 80014bc:	e7ea      	b.n	8001494 <_malloc_r+0xa0>
 80014be:	605a      	str	r2, [r3, #4]
 80014c0:	e7e8      	b.n	8001494 <_malloc_r+0xa0>
 80014c2:	0023      	movs	r3, r4
 80014c4:	6864      	ldr	r4, [r4, #4]
 80014c6:	e7a7      	b.n	8001418 <_malloc_r+0x24>
 80014c8:	002c      	movs	r4, r5
 80014ca:	686d      	ldr	r5, [r5, #4]
 80014cc:	e7af      	b.n	800142e <_malloc_r+0x3a>
 80014ce:	230c      	movs	r3, #12
 80014d0:	0030      	movs	r0, r6
 80014d2:	6033      	str	r3, [r6, #0]
 80014d4:	f000 fbb8 	bl	8001c48 <__malloc_unlock>
 80014d8:	e7cd      	b.n	8001476 <_malloc_r+0x82>
 80014da:	46c0      	nop			; (mov r8, r8)
 80014dc:	20000090 	.word	0x20000090

080014e0 <__sfputc_r>:
 80014e0:	6893      	ldr	r3, [r2, #8]
 80014e2:	b510      	push	{r4, lr}
 80014e4:	3b01      	subs	r3, #1
 80014e6:	6093      	str	r3, [r2, #8]
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	da04      	bge.n	80014f6 <__sfputc_r+0x16>
 80014ec:	6994      	ldr	r4, [r2, #24]
 80014ee:	42a3      	cmp	r3, r4
 80014f0:	db07      	blt.n	8001502 <__sfputc_r+0x22>
 80014f2:	290a      	cmp	r1, #10
 80014f4:	d005      	beq.n	8001502 <__sfputc_r+0x22>
 80014f6:	6813      	ldr	r3, [r2, #0]
 80014f8:	1c58      	adds	r0, r3, #1
 80014fa:	6010      	str	r0, [r2, #0]
 80014fc:	7019      	strb	r1, [r3, #0]
 80014fe:	0008      	movs	r0, r1
 8001500:	bd10      	pop	{r4, pc}
 8001502:	f7ff fbff 	bl	8000d04 <__swbuf_r>
 8001506:	0001      	movs	r1, r0
 8001508:	e7f9      	b.n	80014fe <__sfputc_r+0x1e>

0800150a <__sfputs_r>:
 800150a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800150c:	0006      	movs	r6, r0
 800150e:	000f      	movs	r7, r1
 8001510:	0014      	movs	r4, r2
 8001512:	18d5      	adds	r5, r2, r3
 8001514:	42ac      	cmp	r4, r5
 8001516:	d101      	bne.n	800151c <__sfputs_r+0x12>
 8001518:	2000      	movs	r0, #0
 800151a:	e007      	b.n	800152c <__sfputs_r+0x22>
 800151c:	7821      	ldrb	r1, [r4, #0]
 800151e:	003a      	movs	r2, r7
 8001520:	0030      	movs	r0, r6
 8001522:	f7ff ffdd 	bl	80014e0 <__sfputc_r>
 8001526:	3401      	adds	r4, #1
 8001528:	1c43      	adds	r3, r0, #1
 800152a:	d1f3      	bne.n	8001514 <__sfputs_r+0xa>
 800152c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001530 <_vfiprintf_r>:
 8001530:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001532:	b0a1      	sub	sp, #132	; 0x84
 8001534:	0006      	movs	r6, r0
 8001536:	000c      	movs	r4, r1
 8001538:	001f      	movs	r7, r3
 800153a:	9203      	str	r2, [sp, #12]
 800153c:	2800      	cmp	r0, #0
 800153e:	d004      	beq.n	800154a <_vfiprintf_r+0x1a>
 8001540:	6983      	ldr	r3, [r0, #24]
 8001542:	2b00      	cmp	r3, #0
 8001544:	d101      	bne.n	800154a <_vfiprintf_r+0x1a>
 8001546:	f7ff fdd9 	bl	80010fc <__sinit>
 800154a:	4b8e      	ldr	r3, [pc, #568]	; (8001784 <_vfiprintf_r+0x254>)
 800154c:	429c      	cmp	r4, r3
 800154e:	d11c      	bne.n	800158a <_vfiprintf_r+0x5a>
 8001550:	6874      	ldr	r4, [r6, #4]
 8001552:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001554:	07db      	lsls	r3, r3, #31
 8001556:	d405      	bmi.n	8001564 <_vfiprintf_r+0x34>
 8001558:	89a3      	ldrh	r3, [r4, #12]
 800155a:	059b      	lsls	r3, r3, #22
 800155c:	d402      	bmi.n	8001564 <_vfiprintf_r+0x34>
 800155e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001560:	f7ff fe6d 	bl	800123e <__retarget_lock_acquire_recursive>
 8001564:	89a3      	ldrh	r3, [r4, #12]
 8001566:	071b      	lsls	r3, r3, #28
 8001568:	d502      	bpl.n	8001570 <_vfiprintf_r+0x40>
 800156a:	6923      	ldr	r3, [r4, #16]
 800156c:	2b00      	cmp	r3, #0
 800156e:	d11d      	bne.n	80015ac <_vfiprintf_r+0x7c>
 8001570:	0021      	movs	r1, r4
 8001572:	0030      	movs	r0, r6
 8001574:	f7ff fc1c 	bl	8000db0 <__swsetup_r>
 8001578:	2800      	cmp	r0, #0
 800157a:	d017      	beq.n	80015ac <_vfiprintf_r+0x7c>
 800157c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800157e:	07db      	lsls	r3, r3, #31
 8001580:	d50d      	bpl.n	800159e <_vfiprintf_r+0x6e>
 8001582:	2001      	movs	r0, #1
 8001584:	4240      	negs	r0, r0
 8001586:	b021      	add	sp, #132	; 0x84
 8001588:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800158a:	4b7f      	ldr	r3, [pc, #508]	; (8001788 <_vfiprintf_r+0x258>)
 800158c:	429c      	cmp	r4, r3
 800158e:	d101      	bne.n	8001594 <_vfiprintf_r+0x64>
 8001590:	68b4      	ldr	r4, [r6, #8]
 8001592:	e7de      	b.n	8001552 <_vfiprintf_r+0x22>
 8001594:	4b7d      	ldr	r3, [pc, #500]	; (800178c <_vfiprintf_r+0x25c>)
 8001596:	429c      	cmp	r4, r3
 8001598:	d1db      	bne.n	8001552 <_vfiprintf_r+0x22>
 800159a:	68f4      	ldr	r4, [r6, #12]
 800159c:	e7d9      	b.n	8001552 <_vfiprintf_r+0x22>
 800159e:	89a3      	ldrh	r3, [r4, #12]
 80015a0:	059b      	lsls	r3, r3, #22
 80015a2:	d4ee      	bmi.n	8001582 <_vfiprintf_r+0x52>
 80015a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80015a6:	f7ff fe4b 	bl	8001240 <__retarget_lock_release_recursive>
 80015aa:	e7ea      	b.n	8001582 <_vfiprintf_r+0x52>
 80015ac:	2300      	movs	r3, #0
 80015ae:	ad08      	add	r5, sp, #32
 80015b0:	616b      	str	r3, [r5, #20]
 80015b2:	3320      	adds	r3, #32
 80015b4:	766b      	strb	r3, [r5, #25]
 80015b6:	3310      	adds	r3, #16
 80015b8:	76ab      	strb	r3, [r5, #26]
 80015ba:	9707      	str	r7, [sp, #28]
 80015bc:	9f03      	ldr	r7, [sp, #12]
 80015be:	783b      	ldrb	r3, [r7, #0]
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d001      	beq.n	80015c8 <_vfiprintf_r+0x98>
 80015c4:	2b25      	cmp	r3, #37	; 0x25
 80015c6:	d14e      	bne.n	8001666 <_vfiprintf_r+0x136>
 80015c8:	9b03      	ldr	r3, [sp, #12]
 80015ca:	1afb      	subs	r3, r7, r3
 80015cc:	9305      	str	r3, [sp, #20]
 80015ce:	9b03      	ldr	r3, [sp, #12]
 80015d0:	429f      	cmp	r7, r3
 80015d2:	d00d      	beq.n	80015f0 <_vfiprintf_r+0xc0>
 80015d4:	9b05      	ldr	r3, [sp, #20]
 80015d6:	0021      	movs	r1, r4
 80015d8:	0030      	movs	r0, r6
 80015da:	9a03      	ldr	r2, [sp, #12]
 80015dc:	f7ff ff95 	bl	800150a <__sfputs_r>
 80015e0:	1c43      	adds	r3, r0, #1
 80015e2:	d100      	bne.n	80015e6 <_vfiprintf_r+0xb6>
 80015e4:	e0b5      	b.n	8001752 <_vfiprintf_r+0x222>
 80015e6:	696a      	ldr	r2, [r5, #20]
 80015e8:	9b05      	ldr	r3, [sp, #20]
 80015ea:	4694      	mov	ip, r2
 80015ec:	4463      	add	r3, ip
 80015ee:	616b      	str	r3, [r5, #20]
 80015f0:	783b      	ldrb	r3, [r7, #0]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d100      	bne.n	80015f8 <_vfiprintf_r+0xc8>
 80015f6:	e0ac      	b.n	8001752 <_vfiprintf_r+0x222>
 80015f8:	2201      	movs	r2, #1
 80015fa:	1c7b      	adds	r3, r7, #1
 80015fc:	9303      	str	r3, [sp, #12]
 80015fe:	2300      	movs	r3, #0
 8001600:	4252      	negs	r2, r2
 8001602:	606a      	str	r2, [r5, #4]
 8001604:	a904      	add	r1, sp, #16
 8001606:	3254      	adds	r2, #84	; 0x54
 8001608:	1852      	adds	r2, r2, r1
 800160a:	602b      	str	r3, [r5, #0]
 800160c:	60eb      	str	r3, [r5, #12]
 800160e:	60ab      	str	r3, [r5, #8]
 8001610:	7013      	strb	r3, [r2, #0]
 8001612:	65ab      	str	r3, [r5, #88]	; 0x58
 8001614:	9b03      	ldr	r3, [sp, #12]
 8001616:	2205      	movs	r2, #5
 8001618:	7819      	ldrb	r1, [r3, #0]
 800161a:	485d      	ldr	r0, [pc, #372]	; (8001790 <_vfiprintf_r+0x260>)
 800161c:	f000 fb00 	bl	8001c20 <memchr>
 8001620:	9b03      	ldr	r3, [sp, #12]
 8001622:	1c5f      	adds	r7, r3, #1
 8001624:	2800      	cmp	r0, #0
 8001626:	d120      	bne.n	800166a <_vfiprintf_r+0x13a>
 8001628:	682a      	ldr	r2, [r5, #0]
 800162a:	06d3      	lsls	r3, r2, #27
 800162c:	d504      	bpl.n	8001638 <_vfiprintf_r+0x108>
 800162e:	2353      	movs	r3, #83	; 0x53
 8001630:	a904      	add	r1, sp, #16
 8001632:	185b      	adds	r3, r3, r1
 8001634:	2120      	movs	r1, #32
 8001636:	7019      	strb	r1, [r3, #0]
 8001638:	0713      	lsls	r3, r2, #28
 800163a:	d504      	bpl.n	8001646 <_vfiprintf_r+0x116>
 800163c:	2353      	movs	r3, #83	; 0x53
 800163e:	a904      	add	r1, sp, #16
 8001640:	185b      	adds	r3, r3, r1
 8001642:	212b      	movs	r1, #43	; 0x2b
 8001644:	7019      	strb	r1, [r3, #0]
 8001646:	9b03      	ldr	r3, [sp, #12]
 8001648:	781b      	ldrb	r3, [r3, #0]
 800164a:	2b2a      	cmp	r3, #42	; 0x2a
 800164c:	d016      	beq.n	800167c <_vfiprintf_r+0x14c>
 800164e:	2100      	movs	r1, #0
 8001650:	68eb      	ldr	r3, [r5, #12]
 8001652:	9f03      	ldr	r7, [sp, #12]
 8001654:	783a      	ldrb	r2, [r7, #0]
 8001656:	1c78      	adds	r0, r7, #1
 8001658:	3a30      	subs	r2, #48	; 0x30
 800165a:	4684      	mov	ip, r0
 800165c:	2a09      	cmp	r2, #9
 800165e:	d94f      	bls.n	8001700 <_vfiprintf_r+0x1d0>
 8001660:	2900      	cmp	r1, #0
 8001662:	d111      	bne.n	8001688 <_vfiprintf_r+0x158>
 8001664:	e017      	b.n	8001696 <_vfiprintf_r+0x166>
 8001666:	3701      	adds	r7, #1
 8001668:	e7a9      	b.n	80015be <_vfiprintf_r+0x8e>
 800166a:	4b49      	ldr	r3, [pc, #292]	; (8001790 <_vfiprintf_r+0x260>)
 800166c:	682a      	ldr	r2, [r5, #0]
 800166e:	1ac0      	subs	r0, r0, r3
 8001670:	2301      	movs	r3, #1
 8001672:	4083      	lsls	r3, r0
 8001674:	4313      	orrs	r3, r2
 8001676:	602b      	str	r3, [r5, #0]
 8001678:	9703      	str	r7, [sp, #12]
 800167a:	e7cb      	b.n	8001614 <_vfiprintf_r+0xe4>
 800167c:	9b07      	ldr	r3, [sp, #28]
 800167e:	1d19      	adds	r1, r3, #4
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	9107      	str	r1, [sp, #28]
 8001684:	2b00      	cmp	r3, #0
 8001686:	db01      	blt.n	800168c <_vfiprintf_r+0x15c>
 8001688:	930b      	str	r3, [sp, #44]	; 0x2c
 800168a:	e004      	b.n	8001696 <_vfiprintf_r+0x166>
 800168c:	425b      	negs	r3, r3
 800168e:	60eb      	str	r3, [r5, #12]
 8001690:	2302      	movs	r3, #2
 8001692:	4313      	orrs	r3, r2
 8001694:	602b      	str	r3, [r5, #0]
 8001696:	783b      	ldrb	r3, [r7, #0]
 8001698:	2b2e      	cmp	r3, #46	; 0x2e
 800169a:	d10a      	bne.n	80016b2 <_vfiprintf_r+0x182>
 800169c:	787b      	ldrb	r3, [r7, #1]
 800169e:	2b2a      	cmp	r3, #42	; 0x2a
 80016a0:	d137      	bne.n	8001712 <_vfiprintf_r+0x1e2>
 80016a2:	9b07      	ldr	r3, [sp, #28]
 80016a4:	3702      	adds	r7, #2
 80016a6:	1d1a      	adds	r2, r3, #4
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	9207      	str	r2, [sp, #28]
 80016ac:	2b00      	cmp	r3, #0
 80016ae:	db2d      	blt.n	800170c <_vfiprintf_r+0x1dc>
 80016b0:	9309      	str	r3, [sp, #36]	; 0x24
 80016b2:	2203      	movs	r2, #3
 80016b4:	7839      	ldrb	r1, [r7, #0]
 80016b6:	4837      	ldr	r0, [pc, #220]	; (8001794 <_vfiprintf_r+0x264>)
 80016b8:	f000 fab2 	bl	8001c20 <memchr>
 80016bc:	2800      	cmp	r0, #0
 80016be:	d007      	beq.n	80016d0 <_vfiprintf_r+0x1a0>
 80016c0:	4b34      	ldr	r3, [pc, #208]	; (8001794 <_vfiprintf_r+0x264>)
 80016c2:	682a      	ldr	r2, [r5, #0]
 80016c4:	1ac0      	subs	r0, r0, r3
 80016c6:	2340      	movs	r3, #64	; 0x40
 80016c8:	4083      	lsls	r3, r0
 80016ca:	4313      	orrs	r3, r2
 80016cc:	3701      	adds	r7, #1
 80016ce:	602b      	str	r3, [r5, #0]
 80016d0:	7839      	ldrb	r1, [r7, #0]
 80016d2:	1c7b      	adds	r3, r7, #1
 80016d4:	2206      	movs	r2, #6
 80016d6:	4830      	ldr	r0, [pc, #192]	; (8001798 <_vfiprintf_r+0x268>)
 80016d8:	9303      	str	r3, [sp, #12]
 80016da:	7629      	strb	r1, [r5, #24]
 80016dc:	f000 faa0 	bl	8001c20 <memchr>
 80016e0:	2800      	cmp	r0, #0
 80016e2:	d045      	beq.n	8001770 <_vfiprintf_r+0x240>
 80016e4:	4b2d      	ldr	r3, [pc, #180]	; (800179c <_vfiprintf_r+0x26c>)
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d127      	bne.n	800173a <_vfiprintf_r+0x20a>
 80016ea:	2207      	movs	r2, #7
 80016ec:	9b07      	ldr	r3, [sp, #28]
 80016ee:	3307      	adds	r3, #7
 80016f0:	4393      	bics	r3, r2
 80016f2:	3308      	adds	r3, #8
 80016f4:	9307      	str	r3, [sp, #28]
 80016f6:	696b      	ldr	r3, [r5, #20]
 80016f8:	9a04      	ldr	r2, [sp, #16]
 80016fa:	189b      	adds	r3, r3, r2
 80016fc:	616b      	str	r3, [r5, #20]
 80016fe:	e75d      	b.n	80015bc <_vfiprintf_r+0x8c>
 8001700:	210a      	movs	r1, #10
 8001702:	434b      	muls	r3, r1
 8001704:	4667      	mov	r7, ip
 8001706:	189b      	adds	r3, r3, r2
 8001708:	3909      	subs	r1, #9
 800170a:	e7a3      	b.n	8001654 <_vfiprintf_r+0x124>
 800170c:	2301      	movs	r3, #1
 800170e:	425b      	negs	r3, r3
 8001710:	e7ce      	b.n	80016b0 <_vfiprintf_r+0x180>
 8001712:	2300      	movs	r3, #0
 8001714:	001a      	movs	r2, r3
 8001716:	3701      	adds	r7, #1
 8001718:	606b      	str	r3, [r5, #4]
 800171a:	7839      	ldrb	r1, [r7, #0]
 800171c:	1c78      	adds	r0, r7, #1
 800171e:	3930      	subs	r1, #48	; 0x30
 8001720:	4684      	mov	ip, r0
 8001722:	2909      	cmp	r1, #9
 8001724:	d903      	bls.n	800172e <_vfiprintf_r+0x1fe>
 8001726:	2b00      	cmp	r3, #0
 8001728:	d0c3      	beq.n	80016b2 <_vfiprintf_r+0x182>
 800172a:	9209      	str	r2, [sp, #36]	; 0x24
 800172c:	e7c1      	b.n	80016b2 <_vfiprintf_r+0x182>
 800172e:	230a      	movs	r3, #10
 8001730:	435a      	muls	r2, r3
 8001732:	4667      	mov	r7, ip
 8001734:	1852      	adds	r2, r2, r1
 8001736:	3b09      	subs	r3, #9
 8001738:	e7ef      	b.n	800171a <_vfiprintf_r+0x1ea>
 800173a:	ab07      	add	r3, sp, #28
 800173c:	9300      	str	r3, [sp, #0]
 800173e:	0022      	movs	r2, r4
 8001740:	0029      	movs	r1, r5
 8001742:	0030      	movs	r0, r6
 8001744:	4b16      	ldr	r3, [pc, #88]	; (80017a0 <_vfiprintf_r+0x270>)
 8001746:	e000      	b.n	800174a <_vfiprintf_r+0x21a>
 8001748:	bf00      	nop
 800174a:	9004      	str	r0, [sp, #16]
 800174c:	9b04      	ldr	r3, [sp, #16]
 800174e:	3301      	adds	r3, #1
 8001750:	d1d1      	bne.n	80016f6 <_vfiprintf_r+0x1c6>
 8001752:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001754:	07db      	lsls	r3, r3, #31
 8001756:	d405      	bmi.n	8001764 <_vfiprintf_r+0x234>
 8001758:	89a3      	ldrh	r3, [r4, #12]
 800175a:	059b      	lsls	r3, r3, #22
 800175c:	d402      	bmi.n	8001764 <_vfiprintf_r+0x234>
 800175e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001760:	f7ff fd6e 	bl	8001240 <__retarget_lock_release_recursive>
 8001764:	89a3      	ldrh	r3, [r4, #12]
 8001766:	065b      	lsls	r3, r3, #25
 8001768:	d500      	bpl.n	800176c <_vfiprintf_r+0x23c>
 800176a:	e70a      	b.n	8001582 <_vfiprintf_r+0x52>
 800176c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800176e:	e70a      	b.n	8001586 <_vfiprintf_r+0x56>
 8001770:	ab07      	add	r3, sp, #28
 8001772:	9300      	str	r3, [sp, #0]
 8001774:	0022      	movs	r2, r4
 8001776:	0029      	movs	r1, r5
 8001778:	0030      	movs	r0, r6
 800177a:	4b09      	ldr	r3, [pc, #36]	; (80017a0 <_vfiprintf_r+0x270>)
 800177c:	f000 f882 	bl	8001884 <_printf_i>
 8001780:	e7e3      	b.n	800174a <_vfiprintf_r+0x21a>
 8001782:	46c0      	nop			; (mov r8, r8)
 8001784:	080021fc 	.word	0x080021fc
 8001788:	0800221c 	.word	0x0800221c
 800178c:	080021dc 	.word	0x080021dc
 8001790:	0800223c 	.word	0x0800223c
 8001794:	08002242 	.word	0x08002242
 8001798:	08002246 	.word	0x08002246
 800179c:	00000000 	.word	0x00000000
 80017a0:	0800150b 	.word	0x0800150b

080017a4 <_printf_common>:
 80017a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80017a6:	0015      	movs	r5, r2
 80017a8:	9301      	str	r3, [sp, #4]
 80017aa:	688a      	ldr	r2, [r1, #8]
 80017ac:	690b      	ldr	r3, [r1, #16]
 80017ae:	000c      	movs	r4, r1
 80017b0:	9000      	str	r0, [sp, #0]
 80017b2:	4293      	cmp	r3, r2
 80017b4:	da00      	bge.n	80017b8 <_printf_common+0x14>
 80017b6:	0013      	movs	r3, r2
 80017b8:	0022      	movs	r2, r4
 80017ba:	602b      	str	r3, [r5, #0]
 80017bc:	3243      	adds	r2, #67	; 0x43
 80017be:	7812      	ldrb	r2, [r2, #0]
 80017c0:	2a00      	cmp	r2, #0
 80017c2:	d001      	beq.n	80017c8 <_printf_common+0x24>
 80017c4:	3301      	adds	r3, #1
 80017c6:	602b      	str	r3, [r5, #0]
 80017c8:	6823      	ldr	r3, [r4, #0]
 80017ca:	069b      	lsls	r3, r3, #26
 80017cc:	d502      	bpl.n	80017d4 <_printf_common+0x30>
 80017ce:	682b      	ldr	r3, [r5, #0]
 80017d0:	3302      	adds	r3, #2
 80017d2:	602b      	str	r3, [r5, #0]
 80017d4:	6822      	ldr	r2, [r4, #0]
 80017d6:	2306      	movs	r3, #6
 80017d8:	0017      	movs	r7, r2
 80017da:	401f      	ands	r7, r3
 80017dc:	421a      	tst	r2, r3
 80017de:	d027      	beq.n	8001830 <_printf_common+0x8c>
 80017e0:	0023      	movs	r3, r4
 80017e2:	3343      	adds	r3, #67	; 0x43
 80017e4:	781b      	ldrb	r3, [r3, #0]
 80017e6:	1e5a      	subs	r2, r3, #1
 80017e8:	4193      	sbcs	r3, r2
 80017ea:	6822      	ldr	r2, [r4, #0]
 80017ec:	0692      	lsls	r2, r2, #26
 80017ee:	d430      	bmi.n	8001852 <_printf_common+0xae>
 80017f0:	0022      	movs	r2, r4
 80017f2:	9901      	ldr	r1, [sp, #4]
 80017f4:	9800      	ldr	r0, [sp, #0]
 80017f6:	9e08      	ldr	r6, [sp, #32]
 80017f8:	3243      	adds	r2, #67	; 0x43
 80017fa:	47b0      	blx	r6
 80017fc:	1c43      	adds	r3, r0, #1
 80017fe:	d025      	beq.n	800184c <_printf_common+0xa8>
 8001800:	2306      	movs	r3, #6
 8001802:	6820      	ldr	r0, [r4, #0]
 8001804:	682a      	ldr	r2, [r5, #0]
 8001806:	68e1      	ldr	r1, [r4, #12]
 8001808:	2500      	movs	r5, #0
 800180a:	4003      	ands	r3, r0
 800180c:	2b04      	cmp	r3, #4
 800180e:	d103      	bne.n	8001818 <_printf_common+0x74>
 8001810:	1a8d      	subs	r5, r1, r2
 8001812:	43eb      	mvns	r3, r5
 8001814:	17db      	asrs	r3, r3, #31
 8001816:	401d      	ands	r5, r3
 8001818:	68a3      	ldr	r3, [r4, #8]
 800181a:	6922      	ldr	r2, [r4, #16]
 800181c:	4293      	cmp	r3, r2
 800181e:	dd01      	ble.n	8001824 <_printf_common+0x80>
 8001820:	1a9b      	subs	r3, r3, r2
 8001822:	18ed      	adds	r5, r5, r3
 8001824:	2700      	movs	r7, #0
 8001826:	42bd      	cmp	r5, r7
 8001828:	d120      	bne.n	800186c <_printf_common+0xc8>
 800182a:	2000      	movs	r0, #0
 800182c:	e010      	b.n	8001850 <_printf_common+0xac>
 800182e:	3701      	adds	r7, #1
 8001830:	68e3      	ldr	r3, [r4, #12]
 8001832:	682a      	ldr	r2, [r5, #0]
 8001834:	1a9b      	subs	r3, r3, r2
 8001836:	42bb      	cmp	r3, r7
 8001838:	ddd2      	ble.n	80017e0 <_printf_common+0x3c>
 800183a:	0022      	movs	r2, r4
 800183c:	2301      	movs	r3, #1
 800183e:	9901      	ldr	r1, [sp, #4]
 8001840:	9800      	ldr	r0, [sp, #0]
 8001842:	9e08      	ldr	r6, [sp, #32]
 8001844:	3219      	adds	r2, #25
 8001846:	47b0      	blx	r6
 8001848:	1c43      	adds	r3, r0, #1
 800184a:	d1f0      	bne.n	800182e <_printf_common+0x8a>
 800184c:	2001      	movs	r0, #1
 800184e:	4240      	negs	r0, r0
 8001850:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001852:	2030      	movs	r0, #48	; 0x30
 8001854:	18e1      	adds	r1, r4, r3
 8001856:	3143      	adds	r1, #67	; 0x43
 8001858:	7008      	strb	r0, [r1, #0]
 800185a:	0021      	movs	r1, r4
 800185c:	1c5a      	adds	r2, r3, #1
 800185e:	3145      	adds	r1, #69	; 0x45
 8001860:	7809      	ldrb	r1, [r1, #0]
 8001862:	18a2      	adds	r2, r4, r2
 8001864:	3243      	adds	r2, #67	; 0x43
 8001866:	3302      	adds	r3, #2
 8001868:	7011      	strb	r1, [r2, #0]
 800186a:	e7c1      	b.n	80017f0 <_printf_common+0x4c>
 800186c:	0022      	movs	r2, r4
 800186e:	2301      	movs	r3, #1
 8001870:	9901      	ldr	r1, [sp, #4]
 8001872:	9800      	ldr	r0, [sp, #0]
 8001874:	9e08      	ldr	r6, [sp, #32]
 8001876:	321a      	adds	r2, #26
 8001878:	47b0      	blx	r6
 800187a:	1c43      	adds	r3, r0, #1
 800187c:	d0e6      	beq.n	800184c <_printf_common+0xa8>
 800187e:	3701      	adds	r7, #1
 8001880:	e7d1      	b.n	8001826 <_printf_common+0x82>
	...

08001884 <_printf_i>:
 8001884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001886:	b08b      	sub	sp, #44	; 0x2c
 8001888:	9206      	str	r2, [sp, #24]
 800188a:	000a      	movs	r2, r1
 800188c:	3243      	adds	r2, #67	; 0x43
 800188e:	9307      	str	r3, [sp, #28]
 8001890:	9005      	str	r0, [sp, #20]
 8001892:	9204      	str	r2, [sp, #16]
 8001894:	7e0a      	ldrb	r2, [r1, #24]
 8001896:	000c      	movs	r4, r1
 8001898:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800189a:	2a78      	cmp	r2, #120	; 0x78
 800189c:	d807      	bhi.n	80018ae <_printf_i+0x2a>
 800189e:	2a62      	cmp	r2, #98	; 0x62
 80018a0:	d809      	bhi.n	80018b6 <_printf_i+0x32>
 80018a2:	2a00      	cmp	r2, #0
 80018a4:	d100      	bne.n	80018a8 <_printf_i+0x24>
 80018a6:	e0c1      	b.n	8001a2c <_printf_i+0x1a8>
 80018a8:	2a58      	cmp	r2, #88	; 0x58
 80018aa:	d100      	bne.n	80018ae <_printf_i+0x2a>
 80018ac:	e08c      	b.n	80019c8 <_printf_i+0x144>
 80018ae:	0026      	movs	r6, r4
 80018b0:	3642      	adds	r6, #66	; 0x42
 80018b2:	7032      	strb	r2, [r6, #0]
 80018b4:	e022      	b.n	80018fc <_printf_i+0x78>
 80018b6:	0010      	movs	r0, r2
 80018b8:	3863      	subs	r0, #99	; 0x63
 80018ba:	2815      	cmp	r0, #21
 80018bc:	d8f7      	bhi.n	80018ae <_printf_i+0x2a>
 80018be:	f7fe fc2b 	bl	8000118 <__gnu_thumb1_case_shi>
 80018c2:	0016      	.short	0x0016
 80018c4:	fff6001f 	.word	0xfff6001f
 80018c8:	fff6fff6 	.word	0xfff6fff6
 80018cc:	001ffff6 	.word	0x001ffff6
 80018d0:	fff6fff6 	.word	0xfff6fff6
 80018d4:	fff6fff6 	.word	0xfff6fff6
 80018d8:	003600a8 	.word	0x003600a8
 80018dc:	fff6009a 	.word	0xfff6009a
 80018e0:	00b9fff6 	.word	0x00b9fff6
 80018e4:	0036fff6 	.word	0x0036fff6
 80018e8:	fff6fff6 	.word	0xfff6fff6
 80018ec:	009e      	.short	0x009e
 80018ee:	0026      	movs	r6, r4
 80018f0:	681a      	ldr	r2, [r3, #0]
 80018f2:	3642      	adds	r6, #66	; 0x42
 80018f4:	1d11      	adds	r1, r2, #4
 80018f6:	6019      	str	r1, [r3, #0]
 80018f8:	6813      	ldr	r3, [r2, #0]
 80018fa:	7033      	strb	r3, [r6, #0]
 80018fc:	2301      	movs	r3, #1
 80018fe:	e0a7      	b.n	8001a50 <_printf_i+0x1cc>
 8001900:	6808      	ldr	r0, [r1, #0]
 8001902:	6819      	ldr	r1, [r3, #0]
 8001904:	1d0a      	adds	r2, r1, #4
 8001906:	0605      	lsls	r5, r0, #24
 8001908:	d50b      	bpl.n	8001922 <_printf_i+0x9e>
 800190a:	680d      	ldr	r5, [r1, #0]
 800190c:	601a      	str	r2, [r3, #0]
 800190e:	2d00      	cmp	r5, #0
 8001910:	da03      	bge.n	800191a <_printf_i+0x96>
 8001912:	232d      	movs	r3, #45	; 0x2d
 8001914:	9a04      	ldr	r2, [sp, #16]
 8001916:	426d      	negs	r5, r5
 8001918:	7013      	strb	r3, [r2, #0]
 800191a:	4b61      	ldr	r3, [pc, #388]	; (8001aa0 <_printf_i+0x21c>)
 800191c:	270a      	movs	r7, #10
 800191e:	9303      	str	r3, [sp, #12]
 8001920:	e01b      	b.n	800195a <_printf_i+0xd6>
 8001922:	680d      	ldr	r5, [r1, #0]
 8001924:	601a      	str	r2, [r3, #0]
 8001926:	0641      	lsls	r1, r0, #25
 8001928:	d5f1      	bpl.n	800190e <_printf_i+0x8a>
 800192a:	b22d      	sxth	r5, r5
 800192c:	e7ef      	b.n	800190e <_printf_i+0x8a>
 800192e:	680d      	ldr	r5, [r1, #0]
 8001930:	6819      	ldr	r1, [r3, #0]
 8001932:	1d08      	adds	r0, r1, #4
 8001934:	6018      	str	r0, [r3, #0]
 8001936:	062e      	lsls	r6, r5, #24
 8001938:	d501      	bpl.n	800193e <_printf_i+0xba>
 800193a:	680d      	ldr	r5, [r1, #0]
 800193c:	e003      	b.n	8001946 <_printf_i+0xc2>
 800193e:	066d      	lsls	r5, r5, #25
 8001940:	d5fb      	bpl.n	800193a <_printf_i+0xb6>
 8001942:	680d      	ldr	r5, [r1, #0]
 8001944:	b2ad      	uxth	r5, r5
 8001946:	4b56      	ldr	r3, [pc, #344]	; (8001aa0 <_printf_i+0x21c>)
 8001948:	2708      	movs	r7, #8
 800194a:	9303      	str	r3, [sp, #12]
 800194c:	2a6f      	cmp	r2, #111	; 0x6f
 800194e:	d000      	beq.n	8001952 <_printf_i+0xce>
 8001950:	3702      	adds	r7, #2
 8001952:	0023      	movs	r3, r4
 8001954:	2200      	movs	r2, #0
 8001956:	3343      	adds	r3, #67	; 0x43
 8001958:	701a      	strb	r2, [r3, #0]
 800195a:	6863      	ldr	r3, [r4, #4]
 800195c:	60a3      	str	r3, [r4, #8]
 800195e:	2b00      	cmp	r3, #0
 8001960:	db03      	blt.n	800196a <_printf_i+0xe6>
 8001962:	2204      	movs	r2, #4
 8001964:	6821      	ldr	r1, [r4, #0]
 8001966:	4391      	bics	r1, r2
 8001968:	6021      	str	r1, [r4, #0]
 800196a:	2d00      	cmp	r5, #0
 800196c:	d102      	bne.n	8001974 <_printf_i+0xf0>
 800196e:	9e04      	ldr	r6, [sp, #16]
 8001970:	2b00      	cmp	r3, #0
 8001972:	d00c      	beq.n	800198e <_printf_i+0x10a>
 8001974:	9e04      	ldr	r6, [sp, #16]
 8001976:	0028      	movs	r0, r5
 8001978:	0039      	movs	r1, r7
 800197a:	f7fe fc5d 	bl	8000238 <__aeabi_uidivmod>
 800197e:	9b03      	ldr	r3, [sp, #12]
 8001980:	3e01      	subs	r6, #1
 8001982:	5c5b      	ldrb	r3, [r3, r1]
 8001984:	7033      	strb	r3, [r6, #0]
 8001986:	002b      	movs	r3, r5
 8001988:	0005      	movs	r5, r0
 800198a:	429f      	cmp	r7, r3
 800198c:	d9f3      	bls.n	8001976 <_printf_i+0xf2>
 800198e:	2f08      	cmp	r7, #8
 8001990:	d109      	bne.n	80019a6 <_printf_i+0x122>
 8001992:	6823      	ldr	r3, [r4, #0]
 8001994:	07db      	lsls	r3, r3, #31
 8001996:	d506      	bpl.n	80019a6 <_printf_i+0x122>
 8001998:	6863      	ldr	r3, [r4, #4]
 800199a:	6922      	ldr	r2, [r4, #16]
 800199c:	4293      	cmp	r3, r2
 800199e:	dc02      	bgt.n	80019a6 <_printf_i+0x122>
 80019a0:	2330      	movs	r3, #48	; 0x30
 80019a2:	3e01      	subs	r6, #1
 80019a4:	7033      	strb	r3, [r6, #0]
 80019a6:	9b04      	ldr	r3, [sp, #16]
 80019a8:	1b9b      	subs	r3, r3, r6
 80019aa:	6123      	str	r3, [r4, #16]
 80019ac:	9b07      	ldr	r3, [sp, #28]
 80019ae:	0021      	movs	r1, r4
 80019b0:	9300      	str	r3, [sp, #0]
 80019b2:	9805      	ldr	r0, [sp, #20]
 80019b4:	9b06      	ldr	r3, [sp, #24]
 80019b6:	aa09      	add	r2, sp, #36	; 0x24
 80019b8:	f7ff fef4 	bl	80017a4 <_printf_common>
 80019bc:	1c43      	adds	r3, r0, #1
 80019be:	d14c      	bne.n	8001a5a <_printf_i+0x1d6>
 80019c0:	2001      	movs	r0, #1
 80019c2:	4240      	negs	r0, r0
 80019c4:	b00b      	add	sp, #44	; 0x2c
 80019c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019c8:	3145      	adds	r1, #69	; 0x45
 80019ca:	700a      	strb	r2, [r1, #0]
 80019cc:	4a34      	ldr	r2, [pc, #208]	; (8001aa0 <_printf_i+0x21c>)
 80019ce:	9203      	str	r2, [sp, #12]
 80019d0:	681a      	ldr	r2, [r3, #0]
 80019d2:	6821      	ldr	r1, [r4, #0]
 80019d4:	ca20      	ldmia	r2!, {r5}
 80019d6:	601a      	str	r2, [r3, #0]
 80019d8:	0608      	lsls	r0, r1, #24
 80019da:	d516      	bpl.n	8001a0a <_printf_i+0x186>
 80019dc:	07cb      	lsls	r3, r1, #31
 80019de:	d502      	bpl.n	80019e6 <_printf_i+0x162>
 80019e0:	2320      	movs	r3, #32
 80019e2:	4319      	orrs	r1, r3
 80019e4:	6021      	str	r1, [r4, #0]
 80019e6:	2710      	movs	r7, #16
 80019e8:	2d00      	cmp	r5, #0
 80019ea:	d1b2      	bne.n	8001952 <_printf_i+0xce>
 80019ec:	2320      	movs	r3, #32
 80019ee:	6822      	ldr	r2, [r4, #0]
 80019f0:	439a      	bics	r2, r3
 80019f2:	6022      	str	r2, [r4, #0]
 80019f4:	e7ad      	b.n	8001952 <_printf_i+0xce>
 80019f6:	2220      	movs	r2, #32
 80019f8:	6809      	ldr	r1, [r1, #0]
 80019fa:	430a      	orrs	r2, r1
 80019fc:	6022      	str	r2, [r4, #0]
 80019fe:	0022      	movs	r2, r4
 8001a00:	2178      	movs	r1, #120	; 0x78
 8001a02:	3245      	adds	r2, #69	; 0x45
 8001a04:	7011      	strb	r1, [r2, #0]
 8001a06:	4a27      	ldr	r2, [pc, #156]	; (8001aa4 <_printf_i+0x220>)
 8001a08:	e7e1      	b.n	80019ce <_printf_i+0x14a>
 8001a0a:	0648      	lsls	r0, r1, #25
 8001a0c:	d5e6      	bpl.n	80019dc <_printf_i+0x158>
 8001a0e:	b2ad      	uxth	r5, r5
 8001a10:	e7e4      	b.n	80019dc <_printf_i+0x158>
 8001a12:	681a      	ldr	r2, [r3, #0]
 8001a14:	680d      	ldr	r5, [r1, #0]
 8001a16:	1d10      	adds	r0, r2, #4
 8001a18:	6949      	ldr	r1, [r1, #20]
 8001a1a:	6018      	str	r0, [r3, #0]
 8001a1c:	6813      	ldr	r3, [r2, #0]
 8001a1e:	062e      	lsls	r6, r5, #24
 8001a20:	d501      	bpl.n	8001a26 <_printf_i+0x1a2>
 8001a22:	6019      	str	r1, [r3, #0]
 8001a24:	e002      	b.n	8001a2c <_printf_i+0x1a8>
 8001a26:	066d      	lsls	r5, r5, #25
 8001a28:	d5fb      	bpl.n	8001a22 <_printf_i+0x19e>
 8001a2a:	8019      	strh	r1, [r3, #0]
 8001a2c:	2300      	movs	r3, #0
 8001a2e:	9e04      	ldr	r6, [sp, #16]
 8001a30:	6123      	str	r3, [r4, #16]
 8001a32:	e7bb      	b.n	80019ac <_printf_i+0x128>
 8001a34:	681a      	ldr	r2, [r3, #0]
 8001a36:	1d11      	adds	r1, r2, #4
 8001a38:	6019      	str	r1, [r3, #0]
 8001a3a:	6816      	ldr	r6, [r2, #0]
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	0030      	movs	r0, r6
 8001a40:	6862      	ldr	r2, [r4, #4]
 8001a42:	f000 f8ed 	bl	8001c20 <memchr>
 8001a46:	2800      	cmp	r0, #0
 8001a48:	d001      	beq.n	8001a4e <_printf_i+0x1ca>
 8001a4a:	1b80      	subs	r0, r0, r6
 8001a4c:	6060      	str	r0, [r4, #4]
 8001a4e:	6863      	ldr	r3, [r4, #4]
 8001a50:	6123      	str	r3, [r4, #16]
 8001a52:	2300      	movs	r3, #0
 8001a54:	9a04      	ldr	r2, [sp, #16]
 8001a56:	7013      	strb	r3, [r2, #0]
 8001a58:	e7a8      	b.n	80019ac <_printf_i+0x128>
 8001a5a:	6923      	ldr	r3, [r4, #16]
 8001a5c:	0032      	movs	r2, r6
 8001a5e:	9906      	ldr	r1, [sp, #24]
 8001a60:	9805      	ldr	r0, [sp, #20]
 8001a62:	9d07      	ldr	r5, [sp, #28]
 8001a64:	47a8      	blx	r5
 8001a66:	1c43      	adds	r3, r0, #1
 8001a68:	d0aa      	beq.n	80019c0 <_printf_i+0x13c>
 8001a6a:	6823      	ldr	r3, [r4, #0]
 8001a6c:	079b      	lsls	r3, r3, #30
 8001a6e:	d415      	bmi.n	8001a9c <_printf_i+0x218>
 8001a70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001a72:	68e0      	ldr	r0, [r4, #12]
 8001a74:	4298      	cmp	r0, r3
 8001a76:	daa5      	bge.n	80019c4 <_printf_i+0x140>
 8001a78:	0018      	movs	r0, r3
 8001a7a:	e7a3      	b.n	80019c4 <_printf_i+0x140>
 8001a7c:	0022      	movs	r2, r4
 8001a7e:	2301      	movs	r3, #1
 8001a80:	9906      	ldr	r1, [sp, #24]
 8001a82:	9805      	ldr	r0, [sp, #20]
 8001a84:	9e07      	ldr	r6, [sp, #28]
 8001a86:	3219      	adds	r2, #25
 8001a88:	47b0      	blx	r6
 8001a8a:	1c43      	adds	r3, r0, #1
 8001a8c:	d098      	beq.n	80019c0 <_printf_i+0x13c>
 8001a8e:	3501      	adds	r5, #1
 8001a90:	68e3      	ldr	r3, [r4, #12]
 8001a92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001a94:	1a9b      	subs	r3, r3, r2
 8001a96:	42ab      	cmp	r3, r5
 8001a98:	dcf0      	bgt.n	8001a7c <_printf_i+0x1f8>
 8001a9a:	e7e9      	b.n	8001a70 <_printf_i+0x1ec>
 8001a9c:	2500      	movs	r5, #0
 8001a9e:	e7f7      	b.n	8001a90 <_printf_i+0x20c>
 8001aa0:	0800224d 	.word	0x0800224d
 8001aa4:	0800225e 	.word	0x0800225e

08001aa8 <_sbrk_r>:
 8001aa8:	2300      	movs	r3, #0
 8001aaa:	b570      	push	{r4, r5, r6, lr}
 8001aac:	4d06      	ldr	r5, [pc, #24]	; (8001ac8 <_sbrk_r+0x20>)
 8001aae:	0004      	movs	r4, r0
 8001ab0:	0008      	movs	r0, r1
 8001ab2:	602b      	str	r3, [r5, #0]
 8001ab4:	f7fe fbc6 	bl	8000244 <_sbrk>
 8001ab8:	1c43      	adds	r3, r0, #1
 8001aba:	d103      	bne.n	8001ac4 <_sbrk_r+0x1c>
 8001abc:	682b      	ldr	r3, [r5, #0]
 8001abe:	2b00      	cmp	r3, #0
 8001ac0:	d000      	beq.n	8001ac4 <_sbrk_r+0x1c>
 8001ac2:	6023      	str	r3, [r4, #0]
 8001ac4:	bd70      	pop	{r4, r5, r6, pc}
 8001ac6:	46c0      	nop			; (mov r8, r8)
 8001ac8:	20000098 	.word	0x20000098

08001acc <__sread>:
 8001acc:	b570      	push	{r4, r5, r6, lr}
 8001ace:	000c      	movs	r4, r1
 8001ad0:	250e      	movs	r5, #14
 8001ad2:	5f49      	ldrsh	r1, [r1, r5]
 8001ad4:	f000 f8c0 	bl	8001c58 <_read_r>
 8001ad8:	2800      	cmp	r0, #0
 8001ada:	db03      	blt.n	8001ae4 <__sread+0x18>
 8001adc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8001ade:	181b      	adds	r3, r3, r0
 8001ae0:	6563      	str	r3, [r4, #84]	; 0x54
 8001ae2:	bd70      	pop	{r4, r5, r6, pc}
 8001ae4:	89a3      	ldrh	r3, [r4, #12]
 8001ae6:	4a02      	ldr	r2, [pc, #8]	; (8001af0 <__sread+0x24>)
 8001ae8:	4013      	ands	r3, r2
 8001aea:	81a3      	strh	r3, [r4, #12]
 8001aec:	e7f9      	b.n	8001ae2 <__sread+0x16>
 8001aee:	46c0      	nop			; (mov r8, r8)
 8001af0:	ffffefff 	.word	0xffffefff

08001af4 <__swrite>:
 8001af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001af6:	001f      	movs	r7, r3
 8001af8:	898b      	ldrh	r3, [r1, #12]
 8001afa:	0005      	movs	r5, r0
 8001afc:	000c      	movs	r4, r1
 8001afe:	0016      	movs	r6, r2
 8001b00:	05db      	lsls	r3, r3, #23
 8001b02:	d505      	bpl.n	8001b10 <__swrite+0x1c>
 8001b04:	230e      	movs	r3, #14
 8001b06:	5ec9      	ldrsh	r1, [r1, r3]
 8001b08:	2200      	movs	r2, #0
 8001b0a:	2302      	movs	r3, #2
 8001b0c:	f000 f874 	bl	8001bf8 <_lseek_r>
 8001b10:	89a3      	ldrh	r3, [r4, #12]
 8001b12:	4a05      	ldr	r2, [pc, #20]	; (8001b28 <__swrite+0x34>)
 8001b14:	0028      	movs	r0, r5
 8001b16:	4013      	ands	r3, r2
 8001b18:	81a3      	strh	r3, [r4, #12]
 8001b1a:	0032      	movs	r2, r6
 8001b1c:	230e      	movs	r3, #14
 8001b1e:	5ee1      	ldrsh	r1, [r4, r3]
 8001b20:	003b      	movs	r3, r7
 8001b22:	f000 f81f 	bl	8001b64 <_write_r>
 8001b26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b28:	ffffefff 	.word	0xffffefff

08001b2c <__sseek>:
 8001b2c:	b570      	push	{r4, r5, r6, lr}
 8001b2e:	000c      	movs	r4, r1
 8001b30:	250e      	movs	r5, #14
 8001b32:	5f49      	ldrsh	r1, [r1, r5]
 8001b34:	f000 f860 	bl	8001bf8 <_lseek_r>
 8001b38:	89a3      	ldrh	r3, [r4, #12]
 8001b3a:	1c42      	adds	r2, r0, #1
 8001b3c:	d103      	bne.n	8001b46 <__sseek+0x1a>
 8001b3e:	4a05      	ldr	r2, [pc, #20]	; (8001b54 <__sseek+0x28>)
 8001b40:	4013      	ands	r3, r2
 8001b42:	81a3      	strh	r3, [r4, #12]
 8001b44:	bd70      	pop	{r4, r5, r6, pc}
 8001b46:	2280      	movs	r2, #128	; 0x80
 8001b48:	0152      	lsls	r2, r2, #5
 8001b4a:	4313      	orrs	r3, r2
 8001b4c:	81a3      	strh	r3, [r4, #12]
 8001b4e:	6560      	str	r0, [r4, #84]	; 0x54
 8001b50:	e7f8      	b.n	8001b44 <__sseek+0x18>
 8001b52:	46c0      	nop			; (mov r8, r8)
 8001b54:	ffffefff 	.word	0xffffefff

08001b58 <__sclose>:
 8001b58:	b510      	push	{r4, lr}
 8001b5a:	230e      	movs	r3, #14
 8001b5c:	5ec9      	ldrsh	r1, [r1, r3]
 8001b5e:	f000 f815 	bl	8001b8c <_close_r>
 8001b62:	bd10      	pop	{r4, pc}

08001b64 <_write_r>:
 8001b64:	b570      	push	{r4, r5, r6, lr}
 8001b66:	0004      	movs	r4, r0
 8001b68:	0008      	movs	r0, r1
 8001b6a:	0011      	movs	r1, r2
 8001b6c:	001a      	movs	r2, r3
 8001b6e:	2300      	movs	r3, #0
 8001b70:	4d05      	ldr	r5, [pc, #20]	; (8001b88 <_write_r+0x24>)
 8001b72:	602b      	str	r3, [r5, #0]
 8001b74:	f000 f92b 	bl	8001dce <_write>
 8001b78:	1c43      	adds	r3, r0, #1
 8001b7a:	d103      	bne.n	8001b84 <_write_r+0x20>
 8001b7c:	682b      	ldr	r3, [r5, #0]
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d000      	beq.n	8001b84 <_write_r+0x20>
 8001b82:	6023      	str	r3, [r4, #0]
 8001b84:	bd70      	pop	{r4, r5, r6, pc}
 8001b86:	46c0      	nop			; (mov r8, r8)
 8001b88:	20000098 	.word	0x20000098

08001b8c <_close_r>:
 8001b8c:	2300      	movs	r3, #0
 8001b8e:	b570      	push	{r4, r5, r6, lr}
 8001b90:	4d06      	ldr	r5, [pc, #24]	; (8001bac <_close_r+0x20>)
 8001b92:	0004      	movs	r4, r0
 8001b94:	0008      	movs	r0, r1
 8001b96:	602b      	str	r3, [r5, #0]
 8001b98:	f000 f944 	bl	8001e24 <_close>
 8001b9c:	1c43      	adds	r3, r0, #1
 8001b9e:	d103      	bne.n	8001ba8 <_close_r+0x1c>
 8001ba0:	682b      	ldr	r3, [r5, #0]
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d000      	beq.n	8001ba8 <_close_r+0x1c>
 8001ba6:	6023      	str	r3, [r4, #0]
 8001ba8:	bd70      	pop	{r4, r5, r6, pc}
 8001baa:	46c0      	nop			; (mov r8, r8)
 8001bac:	20000098 	.word	0x20000098

08001bb0 <_fstat_r>:
 8001bb0:	2300      	movs	r3, #0
 8001bb2:	b570      	push	{r4, r5, r6, lr}
 8001bb4:	4d06      	ldr	r5, [pc, #24]	; (8001bd0 <_fstat_r+0x20>)
 8001bb6:	0004      	movs	r4, r0
 8001bb8:	0008      	movs	r0, r1
 8001bba:	0011      	movs	r1, r2
 8001bbc:	602b      	str	r3, [r5, #0]
 8001bbe:	f000 f979 	bl	8001eb4 <_fstat>
 8001bc2:	1c43      	adds	r3, r0, #1
 8001bc4:	d103      	bne.n	8001bce <_fstat_r+0x1e>
 8001bc6:	682b      	ldr	r3, [r5, #0]
 8001bc8:	2b00      	cmp	r3, #0
 8001bca:	d000      	beq.n	8001bce <_fstat_r+0x1e>
 8001bcc:	6023      	str	r3, [r4, #0]
 8001bce:	bd70      	pop	{r4, r5, r6, pc}
 8001bd0:	20000098 	.word	0x20000098

08001bd4 <_isatty_r>:
 8001bd4:	2300      	movs	r3, #0
 8001bd6:	b570      	push	{r4, r5, r6, lr}
 8001bd8:	4d06      	ldr	r5, [pc, #24]	; (8001bf4 <_isatty_r+0x20>)
 8001bda:	0004      	movs	r4, r0
 8001bdc:	0008      	movs	r0, r1
 8001bde:	602b      	str	r3, [r5, #0]
 8001be0:	f000 fac8 	bl	8002174 <_isatty>
 8001be4:	1c43      	adds	r3, r0, #1
 8001be6:	d103      	bne.n	8001bf0 <_isatty_r+0x1c>
 8001be8:	682b      	ldr	r3, [r5, #0]
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d000      	beq.n	8001bf0 <_isatty_r+0x1c>
 8001bee:	6023      	str	r3, [r4, #0]
 8001bf0:	bd70      	pop	{r4, r5, r6, pc}
 8001bf2:	46c0      	nop			; (mov r8, r8)
 8001bf4:	20000098 	.word	0x20000098

08001bf8 <_lseek_r>:
 8001bf8:	b570      	push	{r4, r5, r6, lr}
 8001bfa:	0004      	movs	r4, r0
 8001bfc:	0008      	movs	r0, r1
 8001bfe:	0011      	movs	r1, r2
 8001c00:	001a      	movs	r2, r3
 8001c02:	2300      	movs	r3, #0
 8001c04:	4d05      	ldr	r5, [pc, #20]	; (8001c1c <_lseek_r+0x24>)
 8001c06:	602b      	str	r3, [r5, #0]
 8001c08:	f000 f8cd 	bl	8001da6 <_lseek>
 8001c0c:	1c43      	adds	r3, r0, #1
 8001c0e:	d103      	bne.n	8001c18 <_lseek_r+0x20>
 8001c10:	682b      	ldr	r3, [r5, #0]
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	d000      	beq.n	8001c18 <_lseek_r+0x20>
 8001c16:	6023      	str	r3, [r4, #0]
 8001c18:	bd70      	pop	{r4, r5, r6, pc}
 8001c1a:	46c0      	nop			; (mov r8, r8)
 8001c1c:	20000098 	.word	0x20000098

08001c20 <memchr>:
 8001c20:	b2c9      	uxtb	r1, r1
 8001c22:	1882      	adds	r2, r0, r2
 8001c24:	4290      	cmp	r0, r2
 8001c26:	d101      	bne.n	8001c2c <memchr+0xc>
 8001c28:	2000      	movs	r0, #0
 8001c2a:	4770      	bx	lr
 8001c2c:	7803      	ldrb	r3, [r0, #0]
 8001c2e:	428b      	cmp	r3, r1
 8001c30:	d0fb      	beq.n	8001c2a <memchr+0xa>
 8001c32:	3001      	adds	r0, #1
 8001c34:	e7f6      	b.n	8001c24 <memchr+0x4>
	...

08001c38 <__malloc_lock>:
 8001c38:	b510      	push	{r4, lr}
 8001c3a:	4802      	ldr	r0, [pc, #8]	; (8001c44 <__malloc_lock+0xc>)
 8001c3c:	f7ff faff 	bl	800123e <__retarget_lock_acquire_recursive>
 8001c40:	bd10      	pop	{r4, pc}
 8001c42:	46c0      	nop			; (mov r8, r8)
 8001c44:	2000008d 	.word	0x2000008d

08001c48 <__malloc_unlock>:
 8001c48:	b510      	push	{r4, lr}
 8001c4a:	4802      	ldr	r0, [pc, #8]	; (8001c54 <__malloc_unlock+0xc>)
 8001c4c:	f7ff faf8 	bl	8001240 <__retarget_lock_release_recursive>
 8001c50:	bd10      	pop	{r4, pc}
 8001c52:	46c0      	nop			; (mov r8, r8)
 8001c54:	2000008d 	.word	0x2000008d

08001c58 <_read_r>:
 8001c58:	b570      	push	{r4, r5, r6, lr}
 8001c5a:	0004      	movs	r4, r0
 8001c5c:	0008      	movs	r0, r1
 8001c5e:	0011      	movs	r1, r2
 8001c60:	001a      	movs	r2, r3
 8001c62:	2300      	movs	r3, #0
 8001c64:	4d05      	ldr	r5, [pc, #20]	; (8001c7c <_read_r+0x24>)
 8001c66:	602b      	str	r3, [r5, #0]
 8001c68:	f000 f848 	bl	8001cfc <_read>
 8001c6c:	1c43      	adds	r3, r0, #1
 8001c6e:	d103      	bne.n	8001c78 <_read_r+0x20>
 8001c70:	682b      	ldr	r3, [r5, #0]
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d000      	beq.n	8001c78 <_read_r+0x20>
 8001c76:	6023      	str	r3, [r4, #0]
 8001c78:	bd70      	pop	{r4, r5, r6, pc}
 8001c7a:	46c0      	nop			; (mov r8, r8)
 8001c7c:	20000098 	.word	0x20000098

08001c80 <findslot>:
 8001c80:	4b0a      	ldr	r3, [pc, #40]	; (8001cac <findslot+0x2c>)
 8001c82:	b510      	push	{r4, lr}
 8001c84:	0004      	movs	r4, r0
 8001c86:	6818      	ldr	r0, [r3, #0]
 8001c88:	2800      	cmp	r0, #0
 8001c8a:	d004      	beq.n	8001c96 <findslot+0x16>
 8001c8c:	6983      	ldr	r3, [r0, #24]
 8001c8e:	2b00      	cmp	r3, #0
 8001c90:	d101      	bne.n	8001c96 <findslot+0x16>
 8001c92:	f7ff fa33 	bl	80010fc <__sinit>
 8001c96:	2000      	movs	r0, #0
 8001c98:	2c13      	cmp	r4, #19
 8001c9a:	d805      	bhi.n	8001ca8 <findslot+0x28>
 8001c9c:	4b04      	ldr	r3, [pc, #16]	; (8001cb0 <findslot+0x30>)
 8001c9e:	00e4      	lsls	r4, r4, #3
 8001ca0:	58e2      	ldr	r2, [r4, r3]
 8001ca2:	3201      	adds	r2, #1
 8001ca4:	d000      	beq.n	8001ca8 <findslot+0x28>
 8001ca6:	18e0      	adds	r0, r4, r3
 8001ca8:	bd10      	pop	{r4, pc}
 8001caa:	46c0      	nop			; (mov r8, r8)
 8001cac:	20000000 	.word	0x20000000
 8001cb0:	200000a8 	.word	0x200000a8

08001cb4 <error>:
 8001cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cb6:	0004      	movs	r4, r0
 8001cb8:	f7fe ff5c 	bl	8000b74 <__errno>
 8001cbc:	2613      	movs	r6, #19
 8001cbe:	0005      	movs	r5, r0
 8001cc0:	2700      	movs	r7, #0
 8001cc2:	1c30      	adds	r0, r6, #0
 8001cc4:	1c39      	adds	r1, r7, #0
 8001cc6:	beab      	bkpt	0x00ab
 8001cc8:	1c06      	adds	r6, r0, #0
 8001cca:	602e      	str	r6, [r5, #0]
 8001ccc:	0020      	movs	r0, r4
 8001cce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001cd0 <checkerror>:
 8001cd0:	b510      	push	{r4, lr}
 8001cd2:	1c43      	adds	r3, r0, #1
 8001cd4:	d101      	bne.n	8001cda <checkerror+0xa>
 8001cd6:	f7ff ffed 	bl	8001cb4 <error>
 8001cda:	bd10      	pop	{r4, pc}

08001cdc <_swiread>:
 8001cdc:	b530      	push	{r4, r5, lr}
 8001cde:	b085      	sub	sp, #20
 8001ce0:	ad01      	add	r5, sp, #4
 8001ce2:	9001      	str	r0, [sp, #4]
 8001ce4:	9102      	str	r1, [sp, #8]
 8001ce6:	9203      	str	r2, [sp, #12]
 8001ce8:	2406      	movs	r4, #6
 8001cea:	1c20      	adds	r0, r4, #0
 8001cec:	1c29      	adds	r1, r5, #0
 8001cee:	beab      	bkpt	0x00ab
 8001cf0:	1c04      	adds	r4, r0, #0
 8001cf2:	0020      	movs	r0, r4
 8001cf4:	f7ff ffec 	bl	8001cd0 <checkerror>
 8001cf8:	b005      	add	sp, #20
 8001cfa:	bd30      	pop	{r4, r5, pc}

08001cfc <_read>:
 8001cfc:	b570      	push	{r4, r5, r6, lr}
 8001cfe:	000e      	movs	r6, r1
 8001d00:	0015      	movs	r5, r2
 8001d02:	f7ff ffbd 	bl	8001c80 <findslot>
 8001d06:	1e04      	subs	r4, r0, #0
 8001d08:	d106      	bne.n	8001d18 <_read+0x1c>
 8001d0a:	f7fe ff33 	bl	8000b74 <__errno>
 8001d0e:	2309      	movs	r3, #9
 8001d10:	6003      	str	r3, [r0, #0]
 8001d12:	2001      	movs	r0, #1
 8001d14:	4240      	negs	r0, r0
 8001d16:	bd70      	pop	{r4, r5, r6, pc}
 8001d18:	002a      	movs	r2, r5
 8001d1a:	0031      	movs	r1, r6
 8001d1c:	6800      	ldr	r0, [r0, #0]
 8001d1e:	f7ff ffdd 	bl	8001cdc <_swiread>
 8001d22:	1c43      	adds	r3, r0, #1
 8001d24:	d0f7      	beq.n	8001d16 <_read+0x1a>
 8001d26:	6863      	ldr	r3, [r4, #4]
 8001d28:	1a28      	subs	r0, r5, r0
 8001d2a:	181b      	adds	r3, r3, r0
 8001d2c:	6063      	str	r3, [r4, #4]
 8001d2e:	e7f2      	b.n	8001d16 <_read+0x1a>

08001d30 <_swilseek>:
 8001d30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001d32:	000c      	movs	r4, r1
 8001d34:	0016      	movs	r6, r2
 8001d36:	f7ff ffa3 	bl	8001c80 <findslot>
 8001d3a:	1e05      	subs	r5, r0, #0
 8001d3c:	d107      	bne.n	8001d4e <_swilseek+0x1e>
 8001d3e:	f7fe ff19 	bl	8000b74 <__errno>
 8001d42:	2309      	movs	r3, #9
 8001d44:	6003      	str	r3, [r0, #0]
 8001d46:	2401      	movs	r4, #1
 8001d48:	4264      	negs	r4, r4
 8001d4a:	0020      	movs	r0, r4
 8001d4c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001d4e:	2e02      	cmp	r6, #2
 8001d50:	d903      	bls.n	8001d5a <_swilseek+0x2a>
 8001d52:	f7fe ff0f 	bl	8000b74 <__errno>
 8001d56:	2316      	movs	r3, #22
 8001d58:	e7f4      	b.n	8001d44 <_swilseek+0x14>
 8001d5a:	2e01      	cmp	r6, #1
 8001d5c:	d112      	bne.n	8001d84 <_swilseek+0x54>
 8001d5e:	6843      	ldr	r3, [r0, #4]
 8001d60:	18e4      	adds	r4, r4, r3
 8001d62:	d4f6      	bmi.n	8001d52 <_swilseek+0x22>
 8001d64:	466f      	mov	r7, sp
 8001d66:	682b      	ldr	r3, [r5, #0]
 8001d68:	260a      	movs	r6, #10
 8001d6a:	9300      	str	r3, [sp, #0]
 8001d6c:	607c      	str	r4, [r7, #4]
 8001d6e:	1c30      	adds	r0, r6, #0
 8001d70:	1c39      	adds	r1, r7, #0
 8001d72:	beab      	bkpt	0x00ab
 8001d74:	1c06      	adds	r6, r0, #0
 8001d76:	0030      	movs	r0, r6
 8001d78:	f7ff ffaa 	bl	8001cd0 <checkerror>
 8001d7c:	2800      	cmp	r0, #0
 8001d7e:	dbe2      	blt.n	8001d46 <_swilseek+0x16>
 8001d80:	606c      	str	r4, [r5, #4]
 8001d82:	e7e2      	b.n	8001d4a <_swilseek+0x1a>
 8001d84:	2e02      	cmp	r6, #2
 8001d86:	d1ed      	bne.n	8001d64 <_swilseek+0x34>
 8001d88:	6803      	ldr	r3, [r0, #0]
 8001d8a:	466f      	mov	r7, sp
 8001d8c:	9300      	str	r3, [sp, #0]
 8001d8e:	360a      	adds	r6, #10
 8001d90:	1c30      	adds	r0, r6, #0
 8001d92:	1c39      	adds	r1, r7, #0
 8001d94:	beab      	bkpt	0x00ab
 8001d96:	1c06      	adds	r6, r0, #0
 8001d98:	0030      	movs	r0, r6
 8001d9a:	f7ff ff99 	bl	8001cd0 <checkerror>
 8001d9e:	1824      	adds	r4, r4, r0
 8001da0:	1c43      	adds	r3, r0, #1
 8001da2:	d1df      	bne.n	8001d64 <_swilseek+0x34>
 8001da4:	e7cf      	b.n	8001d46 <_swilseek+0x16>

08001da6 <_lseek>:
 8001da6:	b510      	push	{r4, lr}
 8001da8:	f7ff ffc2 	bl	8001d30 <_swilseek>
 8001dac:	bd10      	pop	{r4, pc}

08001dae <_swiwrite>:
 8001dae:	b530      	push	{r4, r5, lr}
 8001db0:	b085      	sub	sp, #20
 8001db2:	ad01      	add	r5, sp, #4
 8001db4:	9001      	str	r0, [sp, #4]
 8001db6:	9102      	str	r1, [sp, #8]
 8001db8:	9203      	str	r2, [sp, #12]
 8001dba:	2405      	movs	r4, #5
 8001dbc:	1c20      	adds	r0, r4, #0
 8001dbe:	1c29      	adds	r1, r5, #0
 8001dc0:	beab      	bkpt	0x00ab
 8001dc2:	1c04      	adds	r4, r0, #0
 8001dc4:	0020      	movs	r0, r4
 8001dc6:	f7ff ff83 	bl	8001cd0 <checkerror>
 8001dca:	b005      	add	sp, #20
 8001dcc:	bd30      	pop	{r4, r5, pc}

08001dce <_write>:
 8001dce:	b570      	push	{r4, r5, r6, lr}
 8001dd0:	000e      	movs	r6, r1
 8001dd2:	0015      	movs	r5, r2
 8001dd4:	f7ff ff54 	bl	8001c80 <findslot>
 8001dd8:	1e04      	subs	r4, r0, #0
 8001dda:	d106      	bne.n	8001dea <_write+0x1c>
 8001ddc:	f7fe feca 	bl	8000b74 <__errno>
 8001de0:	2309      	movs	r3, #9
 8001de2:	6003      	str	r3, [r0, #0]
 8001de4:	2001      	movs	r0, #1
 8001de6:	4240      	negs	r0, r0
 8001de8:	e00f      	b.n	8001e0a <_write+0x3c>
 8001dea:	002a      	movs	r2, r5
 8001dec:	0031      	movs	r1, r6
 8001dee:	6800      	ldr	r0, [r0, #0]
 8001df0:	f7ff ffdd 	bl	8001dae <_swiwrite>
 8001df4:	1e03      	subs	r3, r0, #0
 8001df6:	dbf5      	blt.n	8001de4 <_write+0x16>
 8001df8:	6862      	ldr	r2, [r4, #4]
 8001dfa:	1a28      	subs	r0, r5, r0
 8001dfc:	1812      	adds	r2, r2, r0
 8001dfe:	6062      	str	r2, [r4, #4]
 8001e00:	42ab      	cmp	r3, r5
 8001e02:	d102      	bne.n	8001e0a <_write+0x3c>
 8001e04:	2000      	movs	r0, #0
 8001e06:	f7ff ff55 	bl	8001cb4 <error>
 8001e0a:	bd70      	pop	{r4, r5, r6, pc}

08001e0c <_swiclose>:
 8001e0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001e0e:	2402      	movs	r4, #2
 8001e10:	9001      	str	r0, [sp, #4]
 8001e12:	ad01      	add	r5, sp, #4
 8001e14:	1c20      	adds	r0, r4, #0
 8001e16:	1c29      	adds	r1, r5, #0
 8001e18:	beab      	bkpt	0x00ab
 8001e1a:	1c04      	adds	r4, r0, #0
 8001e1c:	0020      	movs	r0, r4
 8001e1e:	f7ff ff57 	bl	8001cd0 <checkerror>
 8001e22:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08001e24 <_close>:
 8001e24:	b570      	push	{r4, r5, r6, lr}
 8001e26:	0005      	movs	r5, r0
 8001e28:	f7ff ff2a 	bl	8001c80 <findslot>
 8001e2c:	1e04      	subs	r4, r0, #0
 8001e2e:	d106      	bne.n	8001e3e <_close+0x1a>
 8001e30:	f7fe fea0 	bl	8000b74 <__errno>
 8001e34:	2309      	movs	r3, #9
 8001e36:	6003      	str	r3, [r0, #0]
 8001e38:	2001      	movs	r0, #1
 8001e3a:	4240      	negs	r0, r0
 8001e3c:	bd70      	pop	{r4, r5, r6, pc}
 8001e3e:	3d01      	subs	r5, #1
 8001e40:	2d01      	cmp	r5, #1
 8001e42:	d809      	bhi.n	8001e58 <_close+0x34>
 8001e44:	4b09      	ldr	r3, [pc, #36]	; (8001e6c <_close+0x48>)
 8001e46:	689a      	ldr	r2, [r3, #8]
 8001e48:	691b      	ldr	r3, [r3, #16]
 8001e4a:	429a      	cmp	r2, r3
 8001e4c:	d104      	bne.n	8001e58 <_close+0x34>
 8001e4e:	2301      	movs	r3, #1
 8001e50:	425b      	negs	r3, r3
 8001e52:	6003      	str	r3, [r0, #0]
 8001e54:	2000      	movs	r0, #0
 8001e56:	e7f1      	b.n	8001e3c <_close+0x18>
 8001e58:	6820      	ldr	r0, [r4, #0]
 8001e5a:	f7ff ffd7 	bl	8001e0c <_swiclose>
 8001e5e:	2800      	cmp	r0, #0
 8001e60:	d1ec      	bne.n	8001e3c <_close+0x18>
 8001e62:	2301      	movs	r3, #1
 8001e64:	425b      	negs	r3, r3
 8001e66:	6023      	str	r3, [r4, #0]
 8001e68:	e7e8      	b.n	8001e3c <_close+0x18>
 8001e6a:	46c0      	nop			; (mov r8, r8)
 8001e6c:	200000a8 	.word	0x200000a8

08001e70 <_swistat>:
 8001e70:	b570      	push	{r4, r5, r6, lr}
 8001e72:	000c      	movs	r4, r1
 8001e74:	f7ff ff04 	bl	8001c80 <findslot>
 8001e78:	1e05      	subs	r5, r0, #0
 8001e7a:	d106      	bne.n	8001e8a <_swistat+0x1a>
 8001e7c:	f7fe fe7a 	bl	8000b74 <__errno>
 8001e80:	2309      	movs	r3, #9
 8001e82:	6003      	str	r3, [r0, #0]
 8001e84:	2001      	movs	r0, #1
 8001e86:	4240      	negs	r0, r0
 8001e88:	bd70      	pop	{r4, r5, r6, pc}
 8001e8a:	2380      	movs	r3, #128	; 0x80
 8001e8c:	6862      	ldr	r2, [r4, #4]
 8001e8e:	019b      	lsls	r3, r3, #6
 8001e90:	4313      	orrs	r3, r2
 8001e92:	6063      	str	r3, [r4, #4]
 8001e94:	2380      	movs	r3, #128	; 0x80
 8001e96:	00db      	lsls	r3, r3, #3
 8001e98:	260c      	movs	r6, #12
 8001e9a:	64a3      	str	r3, [r4, #72]	; 0x48
 8001e9c:	1c30      	adds	r0, r6, #0
 8001e9e:	1c29      	adds	r1, r5, #0
 8001ea0:	beab      	bkpt	0x00ab
 8001ea2:	1c05      	adds	r5, r0, #0
 8001ea4:	0028      	movs	r0, r5
 8001ea6:	f7ff ff13 	bl	8001cd0 <checkerror>
 8001eaa:	1c43      	adds	r3, r0, #1
 8001eac:	d0ec      	beq.n	8001e88 <_swistat+0x18>
 8001eae:	6120      	str	r0, [r4, #16]
 8001eb0:	2000      	movs	r0, #0
 8001eb2:	e7e9      	b.n	8001e88 <_swistat+0x18>

08001eb4 <_fstat>:
 8001eb4:	b570      	push	{r4, r5, r6, lr}
 8001eb6:	000c      	movs	r4, r1
 8001eb8:	0005      	movs	r5, r0
 8001eba:	2258      	movs	r2, #88	; 0x58
 8001ebc:	2100      	movs	r1, #0
 8001ebe:	0020      	movs	r0, r4
 8001ec0:	f7fe fe82 	bl	8000bc8 <memset>
 8001ec4:	0028      	movs	r0, r5
 8001ec6:	0021      	movs	r1, r4
 8001ec8:	f7ff ffd2 	bl	8001e70 <_swistat>
 8001ecc:	bd70      	pop	{r4, r5, r6, pc}

08001ece <_stat>:
 8001ece:	b570      	push	{r4, r5, r6, lr}
 8001ed0:	000d      	movs	r5, r1
 8001ed2:	0004      	movs	r4, r0
 8001ed4:	2258      	movs	r2, #88	; 0x58
 8001ed6:	2100      	movs	r1, #0
 8001ed8:	0028      	movs	r0, r5
 8001eda:	f7fe fe75 	bl	8000bc8 <memset>
 8001ede:	0020      	movs	r0, r4
 8001ee0:	2100      	movs	r1, #0
 8001ee2:	f000 f813 	bl	8001f0c <_swiopen>
 8001ee6:	0004      	movs	r4, r0
 8001ee8:	1c43      	adds	r3, r0, #1
 8001eea:	d00c      	beq.n	8001f06 <_stat+0x38>
 8001eec:	2381      	movs	r3, #129	; 0x81
 8001eee:	686a      	ldr	r2, [r5, #4]
 8001ef0:	021b      	lsls	r3, r3, #8
 8001ef2:	4313      	orrs	r3, r2
 8001ef4:	0029      	movs	r1, r5
 8001ef6:	606b      	str	r3, [r5, #4]
 8001ef8:	f7ff ffba 	bl	8001e70 <_swistat>
 8001efc:	0005      	movs	r5, r0
 8001efe:	0020      	movs	r0, r4
 8001f00:	f7ff ff90 	bl	8001e24 <_close>
 8001f04:	002c      	movs	r4, r5
 8001f06:	0020      	movs	r0, r4
 8001f08:	bd70      	pop	{r4, r5, r6, pc}
	...

08001f0c <_swiopen>:
 8001f0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f0e:	000d      	movs	r5, r1
 8001f10:	2600      	movs	r6, #0
 8001f12:	b099      	sub	sp, #100	; 0x64
 8001f14:	9000      	str	r0, [sp, #0]
 8001f16:	00f3      	lsls	r3, r6, #3
 8001f18:	9301      	str	r3, [sp, #4]
 8001f1a:	4b29      	ldr	r3, [pc, #164]	; (8001fc0 <_swiopen+0xb4>)
 8001f1c:	00f2      	lsls	r2, r6, #3
 8001f1e:	589c      	ldr	r4, [r3, r2]
 8001f20:	1c63      	adds	r3, r4, #1
 8001f22:	d038      	beq.n	8001f96 <_swiopen+0x8a>
 8001f24:	3601      	adds	r6, #1
 8001f26:	2e14      	cmp	r6, #20
 8001f28:	d1f5      	bne.n	8001f16 <_swiopen+0xa>
 8001f2a:	f7fe fe23 	bl	8000b74 <__errno>
 8001f2e:	2401      	movs	r4, #1
 8001f30:	2318      	movs	r3, #24
 8001f32:	4264      	negs	r4, r4
 8001f34:	6003      	str	r3, [r0, #0]
 8001f36:	e03f      	b.n	8001fb8 <_swiopen+0xac>
 8001f38:	2302      	movs	r3, #2
 8001f3a:	03ec      	lsls	r4, r5, #15
 8001f3c:	0fe4      	lsrs	r4, r4, #31
 8001f3e:	421d      	tst	r5, r3
 8001f40:	d000      	beq.n	8001f44 <_swiopen+0x38>
 8001f42:	431c      	orrs	r4, r3
 8001f44:	4b1f      	ldr	r3, [pc, #124]	; (8001fc4 <_swiopen+0xb8>)
 8001f46:	421d      	tst	r5, r3
 8001f48:	d001      	beq.n	8001f4e <_swiopen+0x42>
 8001f4a:	2304      	movs	r3, #4
 8001f4c:	431c      	orrs	r4, r3
 8001f4e:	2308      	movs	r3, #8
 8001f50:	421d      	tst	r5, r3
 8001f52:	d002      	beq.n	8001f5a <_swiopen+0x4e>
 8001f54:	2204      	movs	r2, #4
 8001f56:	4394      	bics	r4, r2
 8001f58:	431c      	orrs	r4, r3
 8001f5a:	9b00      	ldr	r3, [sp, #0]
 8001f5c:	0018      	movs	r0, r3
 8001f5e:	9302      	str	r3, [sp, #8]
 8001f60:	f7fe f8d2 	bl	8000108 <strlen>
 8001f64:	607c      	str	r4, [r7, #4]
 8001f66:	60b8      	str	r0, [r7, #8]
 8001f68:	2401      	movs	r4, #1
 8001f6a:	1c20      	adds	r0, r4, #0
 8001f6c:	1c39      	adds	r1, r7, #0
 8001f6e:	beab      	bkpt	0x00ab
 8001f70:	1c04      	adds	r4, r0, #0
 8001f72:	2c00      	cmp	r4, #0
 8001f74:	db0a      	blt.n	8001f8c <_swiopen+0x80>
 8001f76:	4b12      	ldr	r3, [pc, #72]	; (8001fc0 <_swiopen+0xb4>)
 8001f78:	00f2      	lsls	r2, r6, #3
 8001f7a:	509c      	str	r4, [r3, r2]
 8001f7c:	0013      	movs	r3, r2
 8001f7e:	4a10      	ldr	r2, [pc, #64]	; (8001fc0 <_swiopen+0xb4>)
 8001f80:	0034      	movs	r4, r6
 8001f82:	4694      	mov	ip, r2
 8001f84:	2200      	movs	r2, #0
 8001f86:	4463      	add	r3, ip
 8001f88:	605a      	str	r2, [r3, #4]
 8001f8a:	e015      	b.n	8001fb8 <_swiopen+0xac>
 8001f8c:	0020      	movs	r0, r4
 8001f8e:	f7ff fe91 	bl	8001cb4 <error>
 8001f92:	0004      	movs	r4, r0
 8001f94:	e010      	b.n	8001fb8 <_swiopen+0xac>
 8001f96:	23a0      	movs	r3, #160	; 0xa0
 8001f98:	002a      	movs	r2, r5
 8001f9a:	011b      	lsls	r3, r3, #4
 8001f9c:	401a      	ands	r2, r3
 8001f9e:	af02      	add	r7, sp, #8
 8001fa0:	429a      	cmp	r2, r3
 8001fa2:	d1c9      	bne.n	8001f38 <_swiopen+0x2c>
 8001fa4:	0039      	movs	r1, r7
 8001fa6:	9800      	ldr	r0, [sp, #0]
 8001fa8:	f7ff ff91 	bl	8001ece <_stat>
 8001fac:	1c43      	adds	r3, r0, #1
 8001fae:	d0c3      	beq.n	8001f38 <_swiopen+0x2c>
 8001fb0:	f7fe fde0 	bl	8000b74 <__errno>
 8001fb4:	2311      	movs	r3, #17
 8001fb6:	6003      	str	r3, [r0, #0]
 8001fb8:	0020      	movs	r0, r4
 8001fba:	b019      	add	sp, #100	; 0x64
 8001fbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fbe:	46c0      	nop			; (mov r8, r8)
 8001fc0:	200000a8 	.word	0x200000a8
 8001fc4:	00000601 	.word	0x00000601

08001fc8 <_get_semihosting_exts>:
 8001fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001fca:	b085      	sub	sp, #20
 8001fcc:	9000      	str	r0, [sp, #0]
 8001fce:	9101      	str	r1, [sp, #4]
 8001fd0:	4827      	ldr	r0, [pc, #156]	; (8002070 <_get_semihosting_exts+0xa8>)
 8001fd2:	2100      	movs	r1, #0
 8001fd4:	0015      	movs	r5, r2
 8001fd6:	f7ff ff99 	bl	8001f0c <_swiopen>
 8001fda:	0004      	movs	r4, r0
 8001fdc:	002a      	movs	r2, r5
 8001fde:	2100      	movs	r1, #0
 8001fe0:	9800      	ldr	r0, [sp, #0]
 8001fe2:	f7fe fdf1 	bl	8000bc8 <memset>
 8001fe6:	1c63      	adds	r3, r4, #1
 8001fe8:	d015      	beq.n	8002016 <_get_semihosting_exts+0x4e>
 8001fea:	0020      	movs	r0, r4
 8001fec:	f7ff fe48 	bl	8001c80 <findslot>
 8001ff0:	260c      	movs	r6, #12
 8001ff2:	0007      	movs	r7, r0
 8001ff4:	1c30      	adds	r0, r6, #0
 8001ff6:	1c39      	adds	r1, r7, #0
 8001ff8:	beab      	bkpt	0x00ab
 8001ffa:	1c06      	adds	r6, r0, #0
 8001ffc:	0030      	movs	r0, r6
 8001ffe:	f7ff fe67 	bl	8001cd0 <checkerror>
 8002002:	2803      	cmp	r0, #3
 8002004:	dd02      	ble.n	800200c <_get_semihosting_exts+0x44>
 8002006:	3803      	subs	r0, #3
 8002008:	42a8      	cmp	r0, r5
 800200a:	dc07      	bgt.n	800201c <_get_semihosting_exts+0x54>
 800200c:	0020      	movs	r0, r4
 800200e:	2401      	movs	r4, #1
 8002010:	f7ff ff08 	bl	8001e24 <_close>
 8002014:	4264      	negs	r4, r4
 8002016:	0020      	movs	r0, r4
 8002018:	b005      	add	sp, #20
 800201a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800201c:	ae03      	add	r6, sp, #12
 800201e:	2204      	movs	r2, #4
 8002020:	0031      	movs	r1, r6
 8002022:	0020      	movs	r0, r4
 8002024:	f7ff fe6a 	bl	8001cfc <_read>
 8002028:	2803      	cmp	r0, #3
 800202a:	ddef      	ble.n	800200c <_get_semihosting_exts+0x44>
 800202c:	7833      	ldrb	r3, [r6, #0]
 800202e:	2b53      	cmp	r3, #83	; 0x53
 8002030:	d1ec      	bne.n	800200c <_get_semihosting_exts+0x44>
 8002032:	7873      	ldrb	r3, [r6, #1]
 8002034:	2b48      	cmp	r3, #72	; 0x48
 8002036:	d1e9      	bne.n	800200c <_get_semihosting_exts+0x44>
 8002038:	78b3      	ldrb	r3, [r6, #2]
 800203a:	2b46      	cmp	r3, #70	; 0x46
 800203c:	d1e6      	bne.n	800200c <_get_semihosting_exts+0x44>
 800203e:	78f3      	ldrb	r3, [r6, #3]
 8002040:	2b42      	cmp	r3, #66	; 0x42
 8002042:	d1e3      	bne.n	800200c <_get_semihosting_exts+0x44>
 8002044:	2201      	movs	r2, #1
 8002046:	0020      	movs	r0, r4
 8002048:	9901      	ldr	r1, [sp, #4]
 800204a:	f7ff fe71 	bl	8001d30 <_swilseek>
 800204e:	2800      	cmp	r0, #0
 8002050:	dbdc      	blt.n	800200c <_get_semihosting_exts+0x44>
 8002052:	002a      	movs	r2, r5
 8002054:	9900      	ldr	r1, [sp, #0]
 8002056:	0020      	movs	r0, r4
 8002058:	f7ff fe50 	bl	8001cfc <_read>
 800205c:	0005      	movs	r5, r0
 800205e:	0020      	movs	r0, r4
 8002060:	f7ff fee0 	bl	8001e24 <_close>
 8002064:	0028      	movs	r0, r5
 8002066:	f7ff fe33 	bl	8001cd0 <checkerror>
 800206a:	0004      	movs	r4, r0
 800206c:	e7d3      	b.n	8002016 <_get_semihosting_exts+0x4e>
 800206e:	46c0      	nop			; (mov r8, r8)
 8002070:	0800226f 	.word	0x0800226f

08002074 <initialise_semihosting_exts>:
 8002074:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002076:	2401      	movs	r4, #1
 8002078:	2100      	movs	r1, #0
 800207a:	4e09      	ldr	r6, [pc, #36]	; (80020a0 <initialise_semihosting_exts+0x2c>)
 800207c:	4d09      	ldr	r5, [pc, #36]	; (80020a4 <initialise_semihosting_exts+0x30>)
 800207e:	af01      	add	r7, sp, #4
 8002080:	0022      	movs	r2, r4
 8002082:	0038      	movs	r0, r7
 8002084:	6031      	str	r1, [r6, #0]
 8002086:	602c      	str	r4, [r5, #0]
 8002088:	f7ff ff9e 	bl	8001fc8 <_get_semihosting_exts>
 800208c:	2800      	cmp	r0, #0
 800208e:	dd05      	ble.n	800209c <initialise_semihosting_exts+0x28>
 8002090:	2202      	movs	r2, #2
 8002092:	783b      	ldrb	r3, [r7, #0]
 8002094:	401c      	ands	r4, r3
 8002096:	4013      	ands	r3, r2
 8002098:	6034      	str	r4, [r6, #0]
 800209a:	602b      	str	r3, [r5, #0]
 800209c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800209e:	46c0      	nop			; (mov r8, r8)
 80020a0:	20000064 	.word	0x20000064
 80020a4:	20000068 	.word	0x20000068

080020a8 <_has_ext_stdout_stderr>:
 80020a8:	b510      	push	{r4, lr}
 80020aa:	4c04      	ldr	r4, [pc, #16]	; (80020bc <_has_ext_stdout_stderr+0x14>)
 80020ac:	6823      	ldr	r3, [r4, #0]
 80020ae:	2b00      	cmp	r3, #0
 80020b0:	da01      	bge.n	80020b6 <_has_ext_stdout_stderr+0xe>
 80020b2:	f7ff ffdf 	bl	8002074 <initialise_semihosting_exts>
 80020b6:	6820      	ldr	r0, [r4, #0]
 80020b8:	bd10      	pop	{r4, pc}
 80020ba:	46c0      	nop			; (mov r8, r8)
 80020bc:	20000068 	.word	0x20000068

080020c0 <initialise_monitor_handles>:
 80020c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020c2:	4b27      	ldr	r3, [pc, #156]	; (8002160 <initialise_monitor_handles+0xa0>)
 80020c4:	b085      	sub	sp, #20
 80020c6:	9301      	str	r3, [sp, #4]
 80020c8:	2500      	movs	r5, #0
 80020ca:	2303      	movs	r3, #3
 80020cc:	ac01      	add	r4, sp, #4
 80020ce:	60a3      	str	r3, [r4, #8]
 80020d0:	2701      	movs	r7, #1
 80020d2:	6065      	str	r5, [r4, #4]
 80020d4:	1c38      	adds	r0, r7, #0
 80020d6:	1c21      	adds	r1, r4, #0
 80020d8:	beab      	bkpt	0x00ab
 80020da:	1c07      	adds	r7, r0, #0
 80020dc:	2101      	movs	r1, #1
 80020de:	4b21      	ldr	r3, [pc, #132]	; (8002164 <initialise_monitor_handles+0xa4>)
 80020e0:	4249      	negs	r1, r1
 80020e2:	601f      	str	r7, [r3, #0]
 80020e4:	002b      	movs	r3, r5
 80020e6:	4d20      	ldr	r5, [pc, #128]	; (8002168 <initialise_monitor_handles+0xa8>)
 80020e8:	00da      	lsls	r2, r3, #3
 80020ea:	3301      	adds	r3, #1
 80020ec:	50a9      	str	r1, [r5, r2]
 80020ee:	2b14      	cmp	r3, #20
 80020f0:	d1fa      	bne.n	80020e8 <initialise_monitor_handles+0x28>
 80020f2:	f7ff ffd9 	bl	80020a8 <_has_ext_stdout_stderr>
 80020f6:	2800      	cmp	r0, #0
 80020f8:	d018      	beq.n	800212c <initialise_monitor_handles+0x6c>
 80020fa:	4b19      	ldr	r3, [pc, #100]	; (8002160 <initialise_monitor_handles+0xa0>)
 80020fc:	2701      	movs	r7, #1
 80020fe:	9301      	str	r3, [sp, #4]
 8002100:	2303      	movs	r3, #3
 8002102:	60a3      	str	r3, [r4, #8]
 8002104:	3301      	adds	r3, #1
 8002106:	6063      	str	r3, [r4, #4]
 8002108:	1c38      	adds	r0, r7, #0
 800210a:	1c21      	adds	r1, r4, #0
 800210c:	beab      	bkpt	0x00ab
 800210e:	1c06      	adds	r6, r0, #0
 8002110:	4b16      	ldr	r3, [pc, #88]	; (800216c <initialise_monitor_handles+0xac>)
 8002112:	4a13      	ldr	r2, [pc, #76]	; (8002160 <initialise_monitor_handles+0xa0>)
 8002114:	601e      	str	r6, [r3, #0]
 8002116:	2303      	movs	r3, #3
 8002118:	9201      	str	r2, [sp, #4]
 800211a:	60a3      	str	r3, [r4, #8]
 800211c:	3305      	adds	r3, #5
 800211e:	6063      	str	r3, [r4, #4]
 8002120:	1c38      	adds	r0, r7, #0
 8002122:	1c21      	adds	r1, r4, #0
 8002124:	beab      	bkpt	0x00ab
 8002126:	1c04      	adds	r4, r0, #0
 8002128:	4b11      	ldr	r3, [pc, #68]	; (8002170 <initialise_monitor_handles+0xb0>)
 800212a:	601c      	str	r4, [r3, #0]
 800212c:	4f10      	ldr	r7, [pc, #64]	; (8002170 <initialise_monitor_handles+0xb0>)
 800212e:	683b      	ldr	r3, [r7, #0]
 8002130:	3301      	adds	r3, #1
 8002132:	d102      	bne.n	800213a <initialise_monitor_handles+0x7a>
 8002134:	4b0d      	ldr	r3, [pc, #52]	; (800216c <initialise_monitor_handles+0xac>)
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	603b      	str	r3, [r7, #0]
 800213a:	2400      	movs	r4, #0
 800213c:	4b09      	ldr	r3, [pc, #36]	; (8002164 <initialise_monitor_handles+0xa4>)
 800213e:	606c      	str	r4, [r5, #4]
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	602b      	str	r3, [r5, #0]
 8002144:	f7ff ffb0 	bl	80020a8 <_has_ext_stdout_stderr>
 8002148:	42a0      	cmp	r0, r4
 800214a:	d006      	beq.n	800215a <initialise_monitor_handles+0x9a>
 800214c:	4b07      	ldr	r3, [pc, #28]	; (800216c <initialise_monitor_handles+0xac>)
 800214e:	60ec      	str	r4, [r5, #12]
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	616c      	str	r4, [r5, #20]
 8002154:	60ab      	str	r3, [r5, #8]
 8002156:	683b      	ldr	r3, [r7, #0]
 8002158:	612b      	str	r3, [r5, #16]
 800215a:	b005      	add	sp, #20
 800215c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800215e:	46c0      	nop			; (mov r8, r8)
 8002160:	08002285 	.word	0x08002285
 8002164:	200000a0 	.word	0x200000a0
 8002168:	200000a8 	.word	0x200000a8
 800216c:	200000a4 	.word	0x200000a4
 8002170:	2000009c 	.word	0x2000009c

08002174 <_isatty>:
 8002174:	b570      	push	{r4, r5, r6, lr}
 8002176:	f7ff fd83 	bl	8001c80 <findslot>
 800217a:	2509      	movs	r5, #9
 800217c:	1e04      	subs	r4, r0, #0
 800217e:	d104      	bne.n	800218a <_isatty+0x16>
 8002180:	f7fe fcf8 	bl	8000b74 <__errno>
 8002184:	6005      	str	r5, [r0, #0]
 8002186:	0020      	movs	r0, r4
 8002188:	bd70      	pop	{r4, r5, r6, pc}
 800218a:	1c28      	adds	r0, r5, #0
 800218c:	1c21      	adds	r1, r4, #0
 800218e:	beab      	bkpt	0x00ab
 8002190:	1c04      	adds	r4, r0, #0
 8002192:	0020      	movs	r0, r4
 8002194:	2c01      	cmp	r4, #1
 8002196:	d0f7      	beq.n	8002188 <_isatty+0x14>
 8002198:	f7fe fcec 	bl	8000b74 <__errno>
 800219c:	2400      	movs	r4, #0
 800219e:	0005      	movs	r5, r0
 80021a0:	2613      	movs	r6, #19
 80021a2:	1c30      	adds	r0, r6, #0
 80021a4:	1c21      	adds	r1, r4, #0
 80021a6:	beab      	bkpt	0x00ab
 80021a8:	1c06      	adds	r6, r0, #0
 80021aa:	602e      	str	r6, [r5, #0]
 80021ac:	e7eb      	b.n	8002186 <_isatty+0x12>
	...

080021b0 <_init>:
 80021b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021b2:	46c0      	nop			; (mov r8, r8)
 80021b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80021b6:	bc08      	pop	{r3}
 80021b8:	469e      	mov	lr, r3
 80021ba:	4770      	bx	lr

080021bc <_fini>:
 80021bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021be:	46c0      	nop			; (mov r8, r8)
 80021c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80021c2:	bc08      	pop	{r3}
 80021c4:	469e      	mov	lr, r3
 80021c6:	4770      	bx	lr
